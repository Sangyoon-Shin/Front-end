{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asx12\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\react\\\\front\\\\Front-end\\\\src\\\\pages\\\\G_questionpostingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styles from \"./G_questionpostingPage.module.css\";\nimport main_mascot from '../images/대학 심볼 횃불이.png';\nimport main_bell from '../images/bell.png';\nimport main_message from '../images/message.png';\nimport main_my from '../images/my.png';\nimport arrow from '../images/arrow.png';\nimport scrab from '../images/스크랩횃불이.png';\nimport heart from '../images/heart.png';\nimport filledHeart from '../images/filledheart.png';\nimport bar from '../images/bar.png';\nimport Header from './G_.js'; // 상단바 컴포넌트\n// import Header from './Header'; // import the Header component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = 'http://<your-domain>/api/board'; // 백엔드 API URL 설정\n\n// 인증 헤더 가져오는 함수\nconst getAuthHeaders = () => {\n  const userId = localStorage.getItem('userId'); // 저장된 userId 가져오기\n  const accessToken = localStorage.getItem('accessToken'); // accessToken 가져오기\n  return {\n    'Authorization': `Bearer ${accessToken}`,\n    'X-USER-ID': userId,\n    // 요청 헤더에 userId 추가\n    'Content-Type': 'application/json'\n  };\n};\nconst G_questionpostingPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const fileInputRef = useRef(null);\n  const [content, setContent] = useState('');\n  const [comments, setComments] = useState([]);\n  const [commentContent, setCommentContent] = useState('');\n  const [replyContents, setReplyContents] = useState([]);\n  const [nickname, setNickname] = useState('');\n  const [nicknameCount, setNicknameCount] = useState({\n    int: 0,\n    short: 0,\n    double: 0,\n    char: 0\n  });\n  const [isHeartFilled, setIsHeartFilled] = useState(false);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [reportContent, setReportContent] = useState('');\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\n  const [replyVisible, setReplyVisible] = useState({}); // 대댓글 가시성 상태 관리\n\n  const currentDate = new Date();\n  const formattedDate = `${currentDate.getFullYear()}.${String(currentDate.getMonth() + 1).padStart(2, '0')}.${String(currentDate.getDate()).padStart(2, '0')}`;\n\n  // API 호출해서 퀘스트 작성시 필요한 기본 폼 정보 가져오기\n  useEffect(() => {\n    const fetchHeartStatus = async () => {\n      try {\n        const response = await fetch(`${BASE_URL}/quest/save`, {\n          method: 'GET',\n          headers: getAuthHeaders()\n        });\n        if (response.ok) {\n          const data = await response.json();\n          // 데이터를 처리할 수 있으면 여기에 로직 추가\n        } else {\n          console.error('퀘스트 폼 데이터 불러오기 실패');\n        }\n      } catch (error) {\n        console.error('퀘스트 폼 데이터 불러오는 중 오류 발생:', error);\n      }\n    };\n    fetchHeartStatus();\n  }, []);\n  useEffect(() => {\n    if (!nickname) {\n      const types = ['int', 'short', 'double', 'char'];\n      const randomType = types[Math.floor(Math.random() * types.length)];\n      setNickname(randomType);\n    }\n  }, [nickname]);\n  const handleContentChange = e => setContent(e.target.value);\n  const handleCommentChange = e => setCommentContent(e.target.value);\n  const handleReplyChange = (index, e) => {\n    const newReplyContents = [...replyContents];\n    newReplyContents[index] = e.target.value;\n    setReplyContents(newReplyContents);\n  };\n  const handleAddComment = async () => {\n    if (commentContent.trim() !== '') {\n      const newNicknameCount = {\n        ...nicknameCount\n      };\n      newNicknameCount[nickname] += 1;\n      setNicknameCount(newNicknameCount);\n      const newComment = {\n        nickname: `${nickname}${newNicknameCount[nickname]}`,\n        content: commentContent,\n        replies: []\n      };\n      try {\n        const response = await fetch(`${BASE_URL}/quest/save`, {\n          method: 'POST',\n          headers: getAuthHeaders(),\n          body: JSON.stringify(newComment)\n        });\n        if (response.ok) {\n          const savedComment = await response.json();\n          setComments([...comments, savedComment]);\n          setNicknameCount(prev => ({\n            ...prev,\n            [nickname]: prev[nickname] + 1\n          }));\n          setCommentContent('');\n        } else {\n          console.error('댓글 추가에 실패했습니다.');\n        }\n      } catch (error) {\n        console.error('댓글 추가 중 오류 발생:', error);\n      }\n    }\n  };\n  const handleAddReply = async index => {\n    if (replyContents[index].trim() !== '') {\n      const updatedComments = [...comments];\n      const newNicknameCount = {\n        ...nicknameCount\n      };\n      newNicknameCount[nickname] += 1;\n      setNicknameCount(newNicknameCount);\n      const newReply = {\n        nickname: `${nickname}${newNicknameCount[nickname]}`,\n        content: replyContents[index]\n      };\n      try {\n        const response = await fetch(`${BASE_URL}/quest/${comments[index].id}/replies`, {\n          method: 'POST',\n          headers: getAuthHeaders(),\n          body: JSON.stringify(newReply)\n        });\n        if (response.ok) {\n          const savedReply = await response.json();\n          updatedComments[index].replies.push(savedReply);\n          setComments(updatedComments);\n          setNicknameCount(prev => ({\n            ...prev,\n            [nickname]: prev[nickname] + 1\n          }));\n          const newReplyContents = [...replyContents];\n          newReplyContents[index] = '';\n          setReplyContents(newReplyContents);\n          setReplyVisible(prev => ({\n            ...prev,\n            [index]: false\n          }));\n        } else {\n          console.error('대댓글 추가에 실패했습니다.');\n        }\n      } catch (error) {\n        console.error('대댓글 추가 중 오류 발생:', error);\n      }\n    }\n  };\n  const handleToggleReply = index => {\n    setReplyVisible(prev => ({\n      ...prev,\n      [index]: !prev[index]\n    }));\n  };\n  const handleHeartClick = async () => {\n    setIsHeartFilled(!isHeartFilled);\n    try {\n      const response = await fetch(`${BASE_URL}/quest/like`, {\n        method: 'POST',\n        headers: getAuthHeaders(),\n        body: JSON.stringify({\n          isHeartFilled\n        })\n      });\n      if (!response.ok) {\n        console.error('좋아요 상태 업데이트에 실패했습니다.');\n        setIsHeartFilled(!isHeartFilled);\n      }\n    } catch (error) {\n      console.error('좋아요 요청 중 오류 발생:', error);\n      setIsHeartFilled(!isHeartFilled);\n    }\n  };\n  const togglePopup = () => setIsPopupOpen(!isPopupOpen);\n  const submitReport = async () => {\n    try {\n      const response = await fetch(`${BASE_URL}/report`, {\n        method: 'POST',\n        headers: getAuthHeaders(),\n        body: JSON.stringify({\n          content: reportContent\n        })\n      });\n      if (response.ok) {\n        setReportContent('');\n        togglePopup();\n        setIsAlertOpen(true);\n        setTimeout(() => {\n          setIsAlertOpen(false);\n        }, 3000);\n      } else {\n        console.error('신고 제출에 실패했습니다.');\n      }\n    } catch (error) {\n      console.error('신고 제출 중 오류 발생:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"content\"],\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: arrow,\n        className: styles[\"app-arrow\"],\n        alt: \"back_arrow\",\n        onClick: () => navigate(-1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles[\"title-text2\"],\n        children: \"\\uC9C8\\uBB38\\uAC8C\\uC2DC\\uD310\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: bar,\n        className: styles[\"app-bar\"],\n        alt: \"bar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles[\"title-text3\"],\n        children: \"\\uAC8C\\uC2DC\\uD310 \\uC81C\\uBAA9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"right-section\"],\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: main_message,\n          className: styles[\"app-main_message2\"],\n          alt: \"main_message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: scrab,\n          className: styles[\"app-main_message3\"],\n          alt: \"main_message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles[\"title-text4\"],\n        children: [\"\\uC791\\uC131\\uC77C: \", formattedDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"report\"],\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: togglePopup,\n          className: styles[\"report-button\"],\n          children: \"\\uC2E0\\uACE0\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), isPopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"popup\"],\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"popup-inner\"],\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uC2E0\\uACE0\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uC2E0\\uACE0 \\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: styles[\"popup-textarea\"],\n          onChange: e => setReportContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"popup-button-container\"],\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: togglePopup,\n            className: styles[\"popup-close\"],\n            children: \"\\uB2EB\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: submitReport,\n            className: styles[\"popup-receive\"],\n            children: \"\\uC81C\\uCD9C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }, this), isAlertOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"alert-popup\"],\n      children: \"\\uC81C\\uCD9C\\uC774 \\uC644\\uB8CC\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"content-input\"],\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: styles[\"textarea\"],\n        value: content,\n        onChange: handleContentChange,\n        placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: fileInputRef,\n      style: {\n        display: 'none'\n      },\n      accept: \"image/*\",\n      onChange: e => {\n        const file = e.target.files[0];\n        if (file) console.log(\"선택된 파일:\", file);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"heart\"],\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: isHeartFilled ? filledHeart : heart,\n        className: styles[\"app-heart\"],\n        alt: \"heart\",\n        onClick: handleHeartClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"content-input2\"],\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: styles[\"textarea2\"],\n        value: commentContent,\n        onChange: handleCommentChange,\n        placeholder: \"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"reply-button\"],\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddComment,\n        children: \"\\uB313\\uAE00 \\uB2EC\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"comments-section\"],\n      children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"comment-item\"],\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [comment.nickname, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this), \" \", comment.content, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"reply-container\"],\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles[\"toggle-reply-button\"],\n            onClick: () => handleToggleReply(index),\n            children: replyVisible[index] ? '대댓글 숨기기' : '대댓글 달기'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this), replyVisible[index] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"reply-input\"],\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: styles[\"textarea_reply\"],\n            value: replyContents[index] || '',\n            onChange: e => handleReplyChange(index, e),\n            placeholder: \"\\uB300\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddReply(index),\n            children: \"\\uB300\\uB313\\uAE00 \\uB2EC\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 15\n        }, this), comment.replies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"replies-section\"],\n          children: comment.replies.map((reply, replyIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"reply-item\"],\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [reply.nickname, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 21\n            }, this), \" \", reply.content]\n          }, replyIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n};\n_s(G_questionpostingPage, \"RpnGxi3Rlfgn3Rffp4pDiy77gWo=\", false, function () {\n  return [useNavigate];\n});\n_c = G_questionpostingPage;\nexport default G_questionpostingPage;\nvar _c;\n$RefreshReg$(_c, \"G_questionpostingPage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigate","styles","main_mascot","main_bell","main_message","main_my","arrow","scrab","heart","filledHeart","bar","Header","jsxDEV","_jsxDEV","BASE_URL","getAuthHeaders","userId","localStorage","getItem","accessToken","G_questionpostingPage","_s","navigate","fileInputRef","content","setContent","comments","setComments","commentContent","setCommentContent","replyContents","setReplyContents","nickname","setNickname","nicknameCount","setNicknameCount","int","short","double","char","isHeartFilled","setIsHeartFilled","isPopupOpen","setIsPopupOpen","reportContent","setReportContent","isAlertOpen","setIsAlertOpen","replyVisible","setReplyVisible","currentDate","Date","formattedDate","getFullYear","String","getMonth","padStart","getDate","fetchHeartStatus","response","fetch","method","headers","ok","data","json","console","error","types","randomType","Math","floor","random","length","handleContentChange","e","target","value","handleCommentChange","handleReplyChange","index","newReplyContents","handleAddComment","trim","newNicknameCount","newComment","replies","body","JSON","stringify","savedComment","prev","handleAddReply","updatedComments","newReply","id","savedReply","push","handleToggleReply","handleHeartClick","togglePopup","submitReport","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","onClick","onChange","placeholder","type","ref","style","display","accept","file","files","log","map","comment","reply","replyIndex","_c","$RefreshReg$"],"sources":["C:/Users/asx12/OneDrive/바탕 화면/react/front/Front-end/src/pages/G_questionpostingPage.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styles from \"./G_questionpostingPage.module.css\";\r\nimport main_mascot from '../images/대학 심볼 횃불이.png';\r\nimport main_bell from '../images/bell.png';\r\nimport main_message from '../images/message.png';\r\nimport main_my from '../images/my.png';\r\nimport arrow from '../images/arrow.png';\r\nimport scrab from '../images/스크랩횃불이.png';\r\nimport heart from '../images/heart.png';\r\nimport filledHeart from '../images/filledheart.png';\r\nimport bar from '../images/bar.png';\r\nimport Header from './G_.js';  // 상단바 컴포넌트\r\n// import Header from './Header'; // import the Header component\r\n\r\nconst BASE_URL = 'http://<your-domain>/api/board';  // 백엔드 API URL 설정\r\n\r\n// 인증 헤더 가져오는 함수\r\nconst getAuthHeaders = () => {\r\n  const userId = localStorage.getItem('userId');  // 저장된 userId 가져오기\r\n  const accessToken = localStorage.getItem('accessToken'); // accessToken 가져오기\r\n  return {\r\n    'Authorization': `Bearer ${accessToken}`,\r\n    'X-USER-ID': userId,  // 요청 헤더에 userId 추가\r\n    'Content-Type': 'application/json',\r\n  };\r\n};\r\n\r\nconst G_questionpostingPage = () => {\r\n  const navigate = useNavigate();\r\n  const fileInputRef = useRef(null);\r\n\r\n  const [content, setContent] = useState('');\r\n  const [comments, setComments] = useState([]);\r\n  const [commentContent, setCommentContent] = useState('');\r\n  const [replyContents, setReplyContents] = useState([]);\r\n  const [nickname, setNickname] = useState('');\r\n  const [nicknameCount, setNicknameCount] = useState({ int: 0, short: 0, double: 0, char: 0 });\r\n  const [isHeartFilled, setIsHeartFilled] = useState(false);\r\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\r\n  const [reportContent, setReportContent] = useState('');\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const [replyVisible, setReplyVisible] = useState({});  // 대댓글 가시성 상태 관리\r\n\r\n  const currentDate = new Date();\r\n  const formattedDate = `${currentDate.getFullYear()}.${String(currentDate.getMonth() + 1).padStart(2, '0')}.${String(currentDate.getDate()).padStart(2, '0')}`;\r\n\r\n  // API 호출해서 퀘스트 작성시 필요한 기본 폼 정보 가져오기\r\n  useEffect(() => {\r\n    const fetchHeartStatus = async () => {\r\n      try {\r\n        const response = await fetch(`${BASE_URL}/quest/save`, {\r\n          method: 'GET',\r\n          headers: getAuthHeaders(),\r\n        });\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          // 데이터를 처리할 수 있으면 여기에 로직 추가\r\n        } else {\r\n          console.error('퀘스트 폼 데이터 불러오기 실패');\r\n        }\r\n      } catch (error) {\r\n        console.error('퀘스트 폼 데이터 불러오는 중 오류 발생:', error);\r\n      }\r\n    };\r\n\r\n    fetchHeartStatus();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!nickname) {\r\n      const types = ['int', 'short', 'double', 'char'];\r\n      const randomType = types[Math.floor(Math.random() * types.length)];\r\n      setNickname(randomType);\r\n    }\r\n  }, [nickname]);\r\n\r\n  const handleContentChange = (e) => setContent(e.target.value);\r\n  const handleCommentChange = (e) => setCommentContent(e.target.value);\r\n  const handleReplyChange = (index, e) => {\r\n    const newReplyContents = [...replyContents];\r\n    newReplyContents[index] = e.target.value;\r\n    setReplyContents(newReplyContents);\r\n  };\r\n\r\n  const handleAddComment = async () => {\r\n    if (commentContent.trim() !== '') {\r\n      const newNicknameCount = { ...nicknameCount };\r\n      newNicknameCount[nickname] += 1;\r\n      setNicknameCount(newNicknameCount);\r\n\r\n      const newComment = { nickname: `${nickname}${newNicknameCount[nickname]}`, content: commentContent, replies: [] };\r\n      \r\n      try {\r\n        const response = await fetch(`${BASE_URL}/quest/save`, {\r\n          method: 'POST',\r\n          headers: getAuthHeaders(),\r\n          body: JSON.stringify(newComment),\r\n        });\r\n\r\n        if (response.ok) {\r\n          const savedComment = await response.json();\r\n          setComments([...comments, savedComment]);\r\n          setNicknameCount((prev) => ({ ...prev, [nickname]: prev[nickname] + 1 }));\r\n          setCommentContent('');\r\n        } else {\r\n          console.error('댓글 추가에 실패했습니다.');\r\n        }\r\n      } catch (error) {\r\n        console.error('댓글 추가 중 오류 발생:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleAddReply = async (index) => {\r\n    if (replyContents[index].trim() !== '') {\r\n      const updatedComments = [...comments];\r\n      const newNicknameCount = { ...nicknameCount };\r\n      newNicknameCount[nickname] += 1;\r\n      setNicknameCount(newNicknameCount);\r\n\r\n      const newReply = {\r\n        nickname: `${nickname}${newNicknameCount[nickname]}`,\r\n        content: replyContents[index],\r\n      };\r\n\r\n      try {\r\n        const response = await fetch(`${BASE_URL}/quest/${comments[index].id}/replies`, {\r\n          method: 'POST',\r\n          headers: getAuthHeaders(),\r\n          body: JSON.stringify(newReply),\r\n        });\r\n\r\n        if (response.ok) {\r\n          const savedReply = await response.json();\r\n          updatedComments[index].replies.push(savedReply);\r\n          setComments(updatedComments);\r\n          setNicknameCount((prev) => ({ ...prev, [nickname]: prev[nickname] + 1 }));\r\n\r\n          const newReplyContents = [...replyContents];\r\n          newReplyContents[index] = '';\r\n          setReplyContents(newReplyContents);\r\n          setReplyVisible((prev) => ({ ...prev, [index]: false }));\r\n        } else {\r\n          console.error('대댓글 추가에 실패했습니다.');\r\n        }\r\n      } catch (error) {\r\n        console.error('대댓글 추가 중 오류 발생:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleToggleReply = (index) => {\r\n    setReplyVisible((prev) => ({ ...prev, [index]: !prev[index] }));\r\n  };\r\n\r\n  const handleHeartClick = async () => {\r\n    setIsHeartFilled(!isHeartFilled);\r\n    try {\r\n      const response = await fetch(`${BASE_URL}/quest/like`, {\r\n        method: 'POST',\r\n        headers: getAuthHeaders(),\r\n        body: JSON.stringify({ isHeartFilled }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        console.error('좋아요 상태 업데이트에 실패했습니다.');\r\n        setIsHeartFilled(!isHeartFilled);\r\n      }\r\n    } catch (error) {\r\n      console.error('좋아요 요청 중 오류 발생:', error);\r\n      setIsHeartFilled(!isHeartFilled);\r\n    }\r\n  };\r\n\r\n  const togglePopup = () => setIsPopupOpen(!isPopupOpen);\r\n\r\n  const submitReport = async () => {\r\n    try {\r\n      const response = await fetch(`${BASE_URL}/report`, {\r\n        method: 'POST',\r\n        headers: getAuthHeaders(),\r\n        body: JSON.stringify({ content: reportContent }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setReportContent('');\r\n        togglePopup();\r\n        setIsAlertOpen(true);\r\n        setTimeout(() => {\r\n          setIsAlertOpen(false);\r\n        }, 3000);\r\n      } else {\r\n        console.error('신고 제출에 실패했습니다.');\r\n      }\r\n    } catch (error) {\r\n      console.error('신고 제출 중 오류 발생:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className={styles[\"content\"]}>\r\n        <img src={arrow} className={styles[\"app-arrow\"]} alt=\"back_arrow\" onClick={() => navigate(-1)} />\r\n        <h1 className={styles[\"title-text2\"]}>질문게시판</h1>\r\n\r\n        <img src={bar} className={styles[\"app-bar\"]} alt=\"bar\" />\r\n        <h1 className={styles[\"title-text3\"]}>게시판 제목</h1>\r\n\r\n        <div className={styles[\"right-section\"]}>\r\n          <img src={main_message} className={styles[\"app-main_message2\"]} alt=\"main_message\" />\r\n          <img src={scrab} className={styles[\"app-main_message3\"]} alt=\"main_message\" />\r\n        </div>\r\n\r\n        <h2 className={styles[\"title-text4\"]}>작성일: {formattedDate}</h2>\r\n        <div className={styles[\"report\"]}>\r\n          <button onClick={togglePopup} className={styles[\"report-button\"]}>신고하기</button>\r\n        </div>\r\n      </div>\r\n\r\n      {isPopupOpen && (\r\n        <div className={styles[\"popup\"]}>\r\n          <div className={styles[\"popup-inner\"]}>\r\n            <h3>신고하기</h3>\r\n            <p>신고 내용을 입력하세요:</p>\r\n            <textarea className={styles[\"popup-textarea\"]} onChange={(e) => setReportContent(e.target.value)} />\r\n            <div className={styles[\"popup-button-container\"]}>\r\n              <button onClick={togglePopup} className={styles[\"popup-close\"]}>닫기</button>\r\n              <button onClick={submitReport} className={styles[\"popup-receive\"]}>제출</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {isAlertOpen && (\r\n        <div className={styles[\"alert-popup\"]}>제출이 완료되었습니다.</div>\r\n      )}\r\n\r\n      <div className={styles[\"content-input\"]}>\r\n        <textarea\r\n          className={styles[\"textarea\"]}\r\n          value={content}\r\n          onChange={handleContentChange}\r\n          placeholder=\"내용을 입력하세요.\"\r\n        />\r\n      </div>\r\n\r\n      <input\r\n        type=\"file\"\r\n        ref={fileInputRef}\r\n        style={{ display: 'none' }}\r\n        accept=\"image/*\"\r\n        onChange={(e) => {\r\n          const file = e.target.files[0];\r\n          if (file) console.log(\"선택된 파일:\", file);\r\n        }}\r\n      />\r\n\r\n      <div className={styles[\"heart\"]}>\r\n        <img\r\n          src={isHeartFilled ? filledHeart : heart}\r\n          className={styles[\"app-heart\"]}\r\n          alt=\"heart\"\r\n          onClick={handleHeartClick}\r\n        />\r\n      </div>\r\n\r\n      <div className={styles[\"content-input2\"]}>\r\n        <textarea\r\n          className={styles[\"textarea2\"]}\r\n          value={commentContent}\r\n          onChange={handleCommentChange}\r\n          placeholder=\"댓글을 입력하세요.\"\r\n        />\r\n      </div>\r\n\r\n      <div className={styles[\"reply-button\"]}>\r\n        <button onClick={handleAddComment}>댓글 달기</button>\r\n      </div>\r\n\r\n      <div className={styles[\"comments-section\"]}>\r\n        {comments.map((comment, index) => (\r\n          <div key={index} className={styles[\"comment-item\"]}>\r\n            <strong>{comment.nickname}:</strong> {comment.content}\r\n            <div className={styles[\"reply-container\"]}>\r\n              <button className={styles[\"toggle-reply-button\"]} onClick={() => handleToggleReply(index)}>\r\n                {replyVisible[index] ? '대댓글 숨기기' : '대댓글 달기'}\r\n              </button>\r\n            </div>\r\n\r\n            {replyVisible[index] && (\r\n              <div className={styles[\"reply-input\"]}>\r\n                <textarea\r\n                  className={styles[\"textarea_reply\"]}\r\n                  value={replyContents[index] || ''}\r\n                  onChange={(e) => handleReplyChange(index, e)}\r\n                  placeholder=\"대댓글을 입력하세요.\"\r\n                />\r\n                <button onClick={() => handleAddReply(index)}>대댓글 달기</button>\r\n              </div>\r\n            )}\r\n\r\n            {comment.replies.length > 0 && (\r\n              <div className={styles[\"replies-section\"]}>\r\n                {comment.replies.map((reply, replyIndex) => (\r\n                  <div key={replyIndex} className={styles[\"reply-item\"]}>\r\n                    <strong>{reply.nickname}:</strong> {reply.content}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default G_questionpostingPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}