{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asx12\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\react\\\\front\\\\Front-end\\\\src\\\\pages\\\\BoardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useMediaQuery } from 'react-responsive'; // 반응형 페이지 만들기 위함\nimport Header from './_.js'; // 상단바 컴포넌트\nimport styles from './BoardPage.module.css'; // BoardPage용 CSS 파일\nimport CommunicationRoom_goBack from '../images/왼쪽 나가기 버튼.png';\nimport DownMenu from '../images/아래방향메뉴선택.png';\nimport SearchIcon from '../images/돋보기아이콘.png'; // 돋보기 아이콘\nimport IconScrap from '../images/횃불이스크랩.png';\nimport IconUnscrap from '../images/횃불이스크랩X.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardPage = () => {\n  _s();\n  const [menuOpen, setMenuOpen] = useState(false); // 드롭다운 상태 관리\n  const [searchTerm, setSearchTerm] = useState(''); // 검색어 상태 관리\n  const [scrapStatus, setScrapStatus] = useState({}); // 각 게시물의 스크랩 상태 관리\n  const [posts, setPosts] = useState([]); // 게시물 목록 상태 관리\n  const [sortType, setSortType] = useState('latest'); // 초기 정렬 상태는 'latest'\n\n  // 페이징 및 추가 필터링 상태\n  const [page, setPage] = useState(0); // 현재 페이지 번호\n  const [size, setSize] = useState(10); // 페이지당 항목 수\n  const [totalPages, setTotalPages] = useState(0); // 전체 페이지 수\n  const [hashtagKeyword, setHashtagKeyword] = useState(''); // 해시태그 필터\n  const [typeKeyword, setTypeKeyword] = useState(''); // 타입 필터\n\n  // 로딩 상태 관리\n  const [isLoading, setIsLoading] = useState(false); // 데이터 로딩 상태\n\n  const navigate = useNavigate(); // useNavigate 훅을 컴포넌트 내부에서 호출\n  const isDesktop = useMediaQuery({\n    query: '(min-width: 1024px)'\n  });\n\n  // 게시물 목록을 가져오는 함수\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setIsLoading(true); // 로딩 시작\n      try {\n        const response = await fetch('https://ecc6-106-101-130-133.ngrok-free.app/api/board/coding', {\n          // page와 size 추가\n          // ?page=${page}&size=${size} -> 이거 써야할때 넣어주기\n          headers: {\n            'ngrok-skip-browser-warning': 'true' // 경고 페이지를 우회하는 헤더 추가\n          }\n        });\n        if (!response.ok) {\n          throw new Error('게시물 목록을 불러오는데 실패했습니다.');\n        }\n        const data = await response.json();\n        setPosts(data.content); // 게시물 데이터 설정\n        setTotalPages(data.totalPages); // 전체 페이지 수 설정\n        console.log(data);\n\n        // 데이터 가공 후 상태 업데이트\n        setPosts(data.content); // `content` 배열만 저장\n      } catch (error) {\n        console.error('게시물 목록을 불러오는 중 오류가 발생했습니다:', error);\n      } finally {\n        setIsLoading(false); // 로딩 종료\n      }\n    };\n    fetchPosts();\n  }, [page, size]); // page와 size 변경 시 재호출\n\n  // 스크랩 토글 함수\n  const toggleScrap = async id => {\n    try {\n      // 백엔드에 스크랩 상태를 업데이트하는 요청 보내기\n      const response = await fetch(`https://ecc6-106-101-130-133.ngrok-free.app/api/board/coding/${id}/scrap`,\n      // 명세서에 따른 엔드포인트\n      {\n        method: 'POST',\n        // POST 메서드 사용\n        headers: {\n          'ngrok-skip-browser-warning': 'true' // 경고 페이지 우회\n        }\n      });\n      if (!response.ok) {\n        throw new Error('스크랩 상태 업데이트에 실패했습니다.');\n      }\n\n      // 성공적으로 응답을 받은 경우 상태를 업데이트\n      setScrapStatus(prevState => ({\n        ...prevState,\n        [id]: !prevState[id] // 현재 상태를 토글\n      }));\n      console.log('스크랩 상태가 성공적으로 업데이트되었습니다.');\n    } catch (error) {\n      console.error('스크랩 상태 업데이트 중 오류가 발생했습니다:', error);\n      alert('스크랩 상태 업데이트에 실패했습니다. 다시 시도해주세요.');\n    }\n  };\n\n  // 좋아요 토글 함수\n  const toggleLike = async id => {\n    try {\n      const response = await fetch(`/api/board/free/${id}/like`, {\n        method: 'POST'\n      });\n      if (response.ok) {\n        const data = await response.json(); // API 응답에서 좋아요 상태를 받아오기\n        setPosts(prevPosts => prevPosts.map(post => post.id === id ? {\n          ...post,\n          likeCount: data.likeCount\n        } : post));\n      } else {\n        throw new Error('좋아요 상태 업데이트에 실패했습니다.');\n      }\n    } catch (error) {\n      console.error('좋아요 상태 업데이트 중 오류 발생:', error);\n      alert('좋아요 상태 업데이트에 실패했습니다.');\n    }\n  };\n\n  // 검색 입력값을 변경하는 함수\n  const handleSearch = async () => {\n    console.log('검색 버튼 클릭됨');\n    if (searchTerm.trim() !== '') {\n      try {\n        console.log(`검색어: ${searchTerm}`);\n        const response = await fetch(`https://ecc6-106-101-130-133.ngrok-free.app/api/board/coding?searchKeyword=${encodeURIComponent(searchTerm)}`, {\n          headers: {\n            'ngrok-skip-browser-warning': 'true' // 경고 페이지를 우회하는 헤더 추가\n          }\n        });\n        if (!response.ok) {\n          throw new Error('검색 결과를 불러오는데 실패했습니다.');\n        }\n        const data = await response.json();\n        console.log('검색 결과:', data);\n\n        // 검색 결과를 게시물 목록으로 업데이트 (명세서에 따른 구조 반영)\n        setPosts(data.content); // 'content' 필드가 검색 결과로 가정\n\n        alert('검색이 완료되었습니다. 결과가 화면에 표시됩니다.');\n      } catch (error) {\n        console.error('검색 결과를 불러오는 중 오류가 발생했습니다:', error);\n        alert('검색 결과를 불러오는 중 오류가 발생했습니다.');\n      }\n    } else {\n      alert('검색어를 입력해주세요.');\n    }\n  };\n  const handleSearchChange = event => {\n    setSearchTerm(event.target.value); // 검색어 상태 업데이트\n  };\n\n  // 정렬 버튼 클릭 시 호출\n  const handleSort = async type => {\n    setSortType(type); // 정렬 상태 업데이트\n\n    try {\n      let url = 'https://ecc6-106-101-130-133.ngrok-free.app/api/board/coding';\n      if (type === 'recommend') {\n        // 추천순 정렬 엔드포인트\n        url = 'https://ecc6-106-101-130-133.ngrok-free.app/api/board/coding/sort-by-likes';\n      }\n      const response = await fetch(url, {\n        headers: {\n          'ngrok-skip-browser-warning': 'true'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('정렬된 데이터를 불러오는데 실패했습니다.');\n      }\n      const data = await response.json();\n      setPosts(data.content); // 정렬된 데이터로 게시물 목록 업데이트\n    } catch (error) {\n      console.error('정렬 데이터 로드 중 오류 발생:', error);\n      alert('정렬된 데이터를 가져오는 중 오류가 발생했습니다.');\n    }\n  };\n  const toggleMenu = () => {\n    setMenuOpen(prevMenuOpen => !prevMenuOpen); // 드롭다운 메뉴 열기/닫기 토글\n  };\n  const handleBoardChange = boardName => {\n    if (boardName === '질문 게시판') {\n      navigate('/QuestionBoardPage/'); // 질문 게시판으로 이동\n    }\n    setMenuOpen(false); // 메뉴 닫기\n  };\n  const handlePostClick = postId => {\n    navigate(`/post/${postId}`); // 해당 게시물 상세 페이지로 이동\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.titleContainer} ${isDesktop ? styles.desktopTitleContainer : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: CommunicationRoom_goBack,\n          className: `${styles.goBackButton} ${isDesktop ? styles[\"desktopGoBackButton\"] : ''}`,\n          alt: \"\\uB4A4\\uB85C\\uAC00\\uAE30\",\n          onClick: () => navigate(-1) /* 뒤로 가기 동작 추가 */\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: `${styles.pageTitle} ${isDesktop ? styles[\"desktopPageTitle\"] : ''}`,\n          children: \"\\uC790\\uC720 \\uAC8C\\uC2DC\\uD310\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: DownMenu,\n          className: `${styles.downMenuButton} ${isDesktop ? styles[\"desktopDownMenuButton\"] : ''}`,\n          alt: \"\\uAC8C\\uC2DC\\uD310 \\uC120\\uD0DD\",\n          onClick: toggleMenu\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), menuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.dropdownMenu} ${isDesktop ? styles.desktopDropdownMenu : ''}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.menuItem} ${isDesktop ? styles[\"desktopMenuItem\"] : ''}`,\n          onClick: () => handleBoardChange('질문 게시판'),\n          children: \"\\uC9C8\\uBB38 \\uAC8C\\uC2DC\\uD310\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.controlPanel} ${isDesktop ? styles[\"desktopControlPanel\"] : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${styles.writeButton} ${isDesktop ? styles[\"desktopWriteButton\"] : ''}`,\n          onClick: () => navigate('/write') // 글쓰기 페이지로 이동\n          ,\n          children: \"\\uAE00\\uC4F0\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.searchBar} ${isDesktop ? styles.desktopSearchBar : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: searchTerm // 상태에서 가져온 검색 키워드\n            ,\n            onChange: handleSearchChange // 기존 함수명을 새 함수명으로 교체\n            ,\n            className: `${styles.searchInput} ${isDesktop ? styles.desktopSearchInput : ''}`,\n            placeholder: \"\\uAC80\\uC0C9\\uC5B4 \\uC785\\uB825\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: SearchIcon,\n            className: `${styles.searchIcon} ${isDesktop ? styles.desktopSearchIcon : ''}`,\n            alt: \"\\uAC80\\uC0C9\",\n            onClick: handleSearch // 검색 버튼 클릭 시 호출\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.sortButtons} ${isDesktop ? styles.desktopSortButtons : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${styles.sortButton} ${styles.latestSortButton} ${isDesktop ? styles.desktopLatestSortButton : ''} ${sortType === 'latest' ? styles.activeSortButton : ''}`,\n            onClick: () => handleSort('latest') // handleSort 함수 호출\n            ,\n            children: \"\\uCD5C\\uC2E0\\uC21C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${styles.sortButton} ${styles.recommendSortButton} ${isDesktop ? styles.desktopRecommendSortButton : ''} ${sortType === 'recommend' ? styles.activeSortButton : ''}`,\n            onClick: () => handleSort('recommend') // handleSort 함수 호출\n            ,\n            children: \"\\uCD94\\uCC9C\\uC21C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.postList,\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.postItem,\n          children: [post.id <= 3 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.hotTag,\n            children: \"HOT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.postInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.postTitle,\n              onClick: () => handlePostClick(post.id) // 게시물 제목 클릭 시 상세 페이지로 이동\n              ,\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.postDate,\n              children: post.createdTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: scrapStatus[post.id] ? IconScrap : IconUnscrap,\n            alt: scrapStatus[post.id] ? '스크랩됨' : '스크랩안됨',\n            className: styles.scrapIcon,\n            onClick: () => toggleScrap(post.id) // 스크랩 상태 변경 및 백엔드 전송\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.pagination,\n        children: [1, 2, 3, 4, 5].map(pageNumber => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.pageButton,\n          onClick: () => setPage(pageNumber - 1) // 페이지 번호를 변경\n          ,\n          children: pageNumber\n        }, pageNumber, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n};\n_s(BoardPage, \"OU03x+Px5kMVTzksTjAZoU4a6jU=\", false, function () {\n  return [useNavigate, useMediaQuery];\n});\n_c = BoardPage;\nexport default BoardPage;\nvar _c;\n$RefreshReg$(_c, \"BoardPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useMediaQuery","Header","styles","CommunicationRoom_goBack","DownMenu","SearchIcon","IconScrap","IconUnscrap","jsxDEV","_jsxDEV","BoardPage","_s","menuOpen","setMenuOpen","searchTerm","setSearchTerm","scrapStatus","setScrapStatus","posts","setPosts","sortType","setSortType","page","setPage","size","setSize","totalPages","setTotalPages","hashtagKeyword","setHashtagKeyword","typeKeyword","setTypeKeyword","isLoading","setIsLoading","navigate","isDesktop","query","fetchPosts","response","fetch","headers","ok","Error","data","json","content","console","log","error","toggleScrap","id","method","prevState","alert","toggleLike","prevPosts","map","post","likeCount","handleSearch","trim","encodeURIComponent","handleSearchChange","event","target","value","handleSort","type","url","toggleMenu","prevMenuOpen","handleBoardChange","boardName","handlePostClick","postId","className","container","children","fileName","_jsxFileName","lineNumber","columnNumber","titleContainer","desktopTitleContainer","src","goBackButton","alt","onClick","pageTitle","downMenuButton","dropdownMenu","desktopDropdownMenu","menuItem","controlPanel","writeButton","searchBar","desktopSearchBar","onChange","searchInput","desktopSearchInput","placeholder","searchIcon","desktopSearchIcon","sortButtons","desktopSortButtons","sortButton","latestSortButton","desktopLatestSortButton","activeSortButton","recommendSortButton","desktopRecommendSortButton","postList","postItem","hotTag","postInfo","postTitle","title","postDate","createdTime","scrapIcon","pagination","pageNumber","pageButton","_c","$RefreshReg$"],"sources":["C:/Users/asx12/OneDrive/바탕 화면/react/front/Front-end/src/pages/BoardPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useMediaQuery } from 'react-responsive'; // 반응형 페이지 만들기 위함\r\nimport Header from './_.js'; // 상단바 컴포넌트\r\nimport styles from './BoardPage.module.css'; // BoardPage용 CSS 파일\r\nimport CommunicationRoom_goBack from '../images/왼쪽 나가기 버튼.png';\r\nimport DownMenu from '../images/아래방향메뉴선택.png';\r\nimport SearchIcon from '../images/돋보기아이콘.png'; // 돋보기 아이콘\r\nimport IconScrap from '../images/횃불이스크랩.png';\r\nimport IconUnscrap from '../images/횃불이스크랩X.png';\r\n\r\nconst BoardPage = () => {\r\n  const [menuOpen, setMenuOpen] = useState(false);  // 드롭다운 상태 관리\r\n  const [searchTerm, setSearchTerm] = useState(''); // 검색어 상태 관리\r\n  const [scrapStatus, setScrapStatus] = useState({}); // 각 게시물의 스크랩 상태 관리\r\n  const [posts, setPosts] = useState([]); // 게시물 목록 상태 관리\r\n  const [sortType, setSortType] = useState('latest'); // 초기 정렬 상태는 'latest'\r\n\r\n  // 페이징 및 추가 필터링 상태\r\n  const [page, setPage] = useState(0); // 현재 페이지 번호\r\n  const [size, setSize] = useState(10); // 페이지당 항목 수\r\n  const [totalPages, setTotalPages] = useState(0); // 전체 페이지 수\r\n  const [hashtagKeyword, setHashtagKeyword] = useState(''); // 해시태그 필터\r\n  const [typeKeyword, setTypeKeyword] = useState(''); // 타입 필터\r\n\r\n  // 로딩 상태 관리\r\n  const [isLoading, setIsLoading] = useState(false); // 데이터 로딩 상태\r\n\r\n  const navigate = useNavigate(); // useNavigate 훅을 컴포넌트 내부에서 호출\r\n  const isDesktop = useMediaQuery({ query: '(min-width: 1024px)' });\r\n\r\n  // 게시물 목록을 가져오는 함수\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      setIsLoading(true); // 로딩 시작\r\n      try {\r\n        const response = await fetch('https://ecc6-106-101-130-133.ngrok-free.app/api/board/coding', {// page와 size 추가\r\n          // ?page=${page}&size=${size} -> 이거 써야할때 넣어주기\r\n          headers: {\r\n            'ngrok-skip-browser-warning': 'true', // 경고 페이지를 우회하는 헤더 추가\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('게시물 목록을 불러오는데 실패했습니다.');\r\n        }\r\n\r\n        const data = await response.json();\r\n        setPosts(data.content); // 게시물 데이터 설정\r\n        setTotalPages(data.totalPages); // 전체 페이지 수 설정\r\n        console.log(data);\r\n\r\n        // 데이터 가공 후 상태 업데이트\r\n        setPosts(data.content); // `content` 배열만 저장\r\n      } catch (error) {\r\n        console.error('게시물 목록을 불러오는 중 오류가 발생했습니다:', error);\r\n      } finally {\r\n        setIsLoading(false); // 로딩 종료\r\n      }\r\n    };\r\n\r\n    fetchPosts();\r\n  }, [page, size]); // page와 size 변경 시 재호출\r\n\r\n  // 스크랩 토글 함수\r\n  const toggleScrap = async (id) => {\r\n    try {\r\n      // 백엔드에 스크랩 상태를 업데이트하는 요청 보내기\r\n      const response = await fetch(\r\n        `https://ecc6-106-101-130-133.ngrok-free.app/api/board/coding/${id}/scrap`, // 명세서에 따른 엔드포인트\r\n        {\r\n          method: 'POST', // POST 메서드 사용\r\n          headers: {\r\n            'ngrok-skip-browser-warning': 'true', // 경고 페이지 우회\r\n          },\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error('스크랩 상태 업데이트에 실패했습니다.');\r\n      }\r\n\r\n      // 성공적으로 응답을 받은 경우 상태를 업데이트\r\n      setScrapStatus((prevState) => ({\r\n        ...prevState,\r\n        [id]: !prevState[id], // 현재 상태를 토글\r\n      }));\r\n\r\n      console.log('스크랩 상태가 성공적으로 업데이트되었습니다.');\r\n    } catch (error) {\r\n      console.error('스크랩 상태 업데이트 중 오류가 발생했습니다:', error);\r\n      alert('스크랩 상태 업데이트에 실패했습니다. 다시 시도해주세요.');\r\n    }\r\n  };\r\n\r\n\r\n  // 좋아요 토글 함수\r\n  const toggleLike = async (id) => {\r\n    try {\r\n      const response = await fetch(`/api/board/free/${id}/like`, {\r\n        method: 'POST',\r\n      });\r\n      if (response.ok) {\r\n        const data = await response.json(); // API 응답에서 좋아요 상태를 받아오기\r\n        setPosts((prevPosts) =>\r\n          prevPosts.map((post) =>\r\n            post.id === id ? { ...post, likeCount: data.likeCount } : post\r\n          )\r\n        );\r\n      } else {\r\n        throw new Error('좋아요 상태 업데이트에 실패했습니다.');\r\n      }\r\n    } catch (error) {\r\n      console.error('좋아요 상태 업데이트 중 오류 발생:', error);\r\n      alert('좋아요 상태 업데이트에 실패했습니다.');\r\n    }\r\n  };\r\n\r\n  // 검색 입력값을 변경하는 함수\r\n  const handleSearch = async () => {\r\n    console.log('검색 버튼 클릭됨');\r\n    if (searchTerm.trim() !== '') {\r\n      try {\r\n        console.log(`검색어: ${searchTerm}`);\r\n        const response = await fetch(\r\n          `https://ecc6-106-101-130-133.ngrok-free.app/api/board/coding?searchKeyword=${encodeURIComponent(searchTerm)}`,\r\n          {\r\n            headers: {\r\n              'ngrok-skip-browser-warning': 'true', // 경고 페이지를 우회하는 헤더 추가\r\n            },\r\n          }\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error('검색 결과를 불러오는데 실패했습니다.');\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log('검색 결과:', data);\r\n\r\n        // 검색 결과를 게시물 목록으로 업데이트 (명세서에 따른 구조 반영)\r\n        setPosts(data.content); // 'content' 필드가 검색 결과로 가정\r\n\r\n        alert('검색이 완료되었습니다. 결과가 화면에 표시됩니다.');\r\n      } catch (error) {\r\n        console.error('검색 결과를 불러오는 중 오류가 발생했습니다:', error);\r\n        alert('검색 결과를 불러오는 중 오류가 발생했습니다.');\r\n      }\r\n    } else {\r\n      alert('검색어를 입력해주세요.');\r\n    }\r\n  };\r\n\r\n  const handleSearchChange = (event) => {\r\n    setSearchTerm(event.target.value); // 검색어 상태 업데이트\r\n  };\r\n\r\n  // 정렬 버튼 클릭 시 호출\r\n  const handleSort = async (type) => {\r\n    setSortType(type); // 정렬 상태 업데이트\r\n\r\n    try {\r\n      let url = 'https://ecc6-106-101-130-133.ngrok-free.app/api/board/coding';\r\n\r\n      if (type === 'recommend') {\r\n        // 추천순 정렬 엔드포인트\r\n        url = 'https://ecc6-106-101-130-133.ngrok-free.app/api/board/coding/sort-by-likes';\r\n\r\n      }\r\n\r\n      const response = await fetch(url, {\r\n        headers: {\r\n          'ngrok-skip-browser-warning': 'true',\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('정렬된 데이터를 불러오는데 실패했습니다.');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setPosts(data.content); // 정렬된 데이터로 게시물 목록 업데이트\r\n    } catch (error) {\r\n      console.error('정렬 데이터 로드 중 오류 발생:', error);\r\n      alert('정렬된 데이터를 가져오는 중 오류가 발생했습니다.');\r\n    }\r\n  };\r\n\r\n\r\n  const toggleMenu = () => {\r\n    setMenuOpen((prevMenuOpen) => !prevMenuOpen); // 드롭다운 메뉴 열기/닫기 토글\r\n  };\r\n\r\n  const handleBoardChange = (boardName) => {\r\n    if (boardName === '질문 게시판') {\r\n      navigate('/QuestionBoardPage/'); // 질문 게시판으로 이동\r\n    }\r\n    setMenuOpen(false); // 메뉴 닫기\r\n  };\r\n\r\n\r\n\r\n  const handlePostClick = (postId) => {\r\n    navigate(`/post/${postId}`); // 해당 게시물 상세 페이지로 이동\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Header />\r\n      <div className={styles.content}>\r\n        <div className={`${styles.titleContainer} ${isDesktop ? styles.desktopTitleContainer : ''}`}>\r\n          {/* 왼쪽 나가기 버튼 */}\r\n          <img\r\n            src={CommunicationRoom_goBack}\r\n            className={`${styles.goBackButton} ${isDesktop ? styles[\"desktopGoBackButton\"] : ''}`}\r\n            alt=\"뒤로가기\"\r\n            onClick={() => navigate(-1)} /* 뒤로 가기 동작 추가 */\r\n          />\r\n          {/* 페이지 타이틀 */}\r\n          <h1 className={`${styles.pageTitle} ${isDesktop ? styles[\"desktopPageTitle\"] : ''}`}>\r\n            자유 게시판\r\n          </h1>\r\n          {/* 드롭다운 버튼 */}\r\n          <img\r\n            src={DownMenu}\r\n            className={`${styles.downMenuButton} ${isDesktop ? styles[\"desktopDownMenuButton\"]: ''}`}\r\n            alt=\"게시판 선택\"\r\n            onClick={toggleMenu}\r\n          />\r\n        </div>\r\n\r\n        {/* 드롭다운 메뉴 */}\r\n        {menuOpen && (\r\n          <div className={`${styles.dropdownMenu} ${isDesktop ? styles.desktopDropdownMenu : ''}`}>\r\n            <div\r\n              className={`${styles.menuItem} ${isDesktop ? styles[\"desktopMenuItem\"] : ''}`}\r\n              onClick={() => handleBoardChange('질문 게시판')}\r\n            >\r\n              질문 게시판\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* 컨트롤 패널 */}\r\n        <div className={`${styles.controlPanel} ${isDesktop ? styles[\"desktopControlPanel\"] : ''}`}>\r\n          {/* 글쓰기 버튼 */}\r\n          <button\r\n            className={`${styles.writeButton} ${isDesktop ? styles[\"desktopWriteButton\"]: ''}`}\r\n            onClick={() => navigate('/write')} // 글쓰기 페이지로 이동\r\n          >\r\n            글쓰기\r\n          </button>\r\n\r\n          {/* 검색창 */}\r\n          <div className={`${styles.searchBar} ${isDesktop ? styles.desktopSearchBar : ''}`}>\r\n            <input\r\n              type=\"text\"\r\n              value={searchTerm} // 상태에서 가져온 검색 키워드\r\n              onChange={handleSearchChange} // 기존 함수명을 새 함수명으로 교체\r\n              className={`${styles.searchInput} ${isDesktop ? styles.desktopSearchInput : ''}`}\r\n              placeholder=\"검색어 입력\"\r\n            />\r\n            <img\r\n              src={SearchIcon}\r\n              className={`${styles.searchIcon} ${isDesktop ? styles.desktopSearchIcon : ''}`}\r\n              alt=\"검색\"\r\n              onClick={handleSearch} // 검색 버튼 클릭 시 호출\r\n            />\r\n          </div>\r\n\r\n          {/* 정렬 버튼들 */}\r\n          <div className={`${styles.sortButtons} ${isDesktop ? styles.desktopSortButtons : ''}`}>\r\n            <button\r\n              className={`${styles.sortButton} ${styles.latestSortButton} ${isDesktop ? styles.desktopLatestSortButton : ''} ${sortType === 'latest' ? styles.activeSortButton : ''}`}\r\n              onClick={() => handleSort('latest')} // handleSort 함수 호출\r\n            >\r\n              최신순\r\n            </button>\r\n\r\n            {/* 추천순 정렬 버튼 */}\r\n            <button\r\n              className={`${styles.sortButton} ${styles.recommendSortButton} ${isDesktop ? styles.desktopRecommendSortButton : ''} ${sortType === 'recommend' ? styles.activeSortButton : ''}`}\r\n              onClick={() => handleSort('recommend')} // handleSort 함수 호출\r\n            >\r\n              추천순\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 게시물 목록 */}\r\n        <div className={styles.postList}>\r\n          {posts.map((post) => (\r\n            <div key={post.id} className={styles.postItem}>\r\n              {/* HOT 표시 (상단 3개의 게시물) */}\r\n              {post.id <= 3 && <span className={styles.hotTag}>HOT</span>}\r\n              {/* 게시물 제목 및 정보 */}\r\n              <div className={styles.postInfo}>\r\n                <span\r\n                  className={styles.postTitle}\r\n                  onClick={() => handlePostClick(post.id)} // 게시물 제목 클릭 시 상세 페이지로 이동\r\n                >\r\n                  {post.title}\r\n                </span>\r\n                <span className={styles.postDate}>{post.createdTime}</span>\r\n              </div>\r\n              {/* 스크랩 버튼 */}\r\n              <img\r\n                src={scrapStatus[post.id] ? IconScrap : IconUnscrap}\r\n                alt={scrapStatus[post.id] ? '스크랩됨' : '스크랩안됨'}\r\n                className={styles.scrapIcon}\r\n                onClick={() => toggleScrap(post.id)} // 스크랩 상태 변경 및 백엔드 전송\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* 페이지네이션 */}\r\n        <div className={styles.pagination}>\r\n          {[1, 2, 3, 4, 5].map((pageNumber) => (\r\n            <button\r\n              key={pageNumber}\r\n              className={styles.pageButton}\r\n              onClick={() => setPage(pageNumber - 1)} // 페이지 번호를 변경\r\n            >\r\n              {pageNumber}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default BoardPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}