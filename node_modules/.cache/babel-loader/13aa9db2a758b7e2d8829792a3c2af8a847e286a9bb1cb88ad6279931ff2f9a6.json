{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asx12\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\react\\\\front\\\\Front-end\\\\src\\\\pages\\\\QuestionboardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useMediaQuery } from 'react-responsive'; // 반응형 페이지 만들기 위함\nimport Header from './_.js'; // 상단바 컴포넌트\nimport styles from './QuestionboardPage.module.css'; // BoardPage용 CSS 파일\nimport CommunicationRoom_goBack from '../images/왼쪽 나가기 버튼.png';\nimport DownMenu from '../images/아래방향메뉴선택.png';\nimport SearchIcon from '../images/돋보기아이콘.png'; // 돋보기 아이콘\nimport IconScrap from '../images/횃불이스크랩.png';\nimport IconUnscrap from '../images/횃불이스크랩X.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = 'http://<your-domain>/api/board'; // API Base URL\n\n// 인증 헤더 설정\nconst getAuthHeaders = () => {\n  const accessToken = localStorage.getItem('accessToken'); // localStorage에서 accessToken을 가져옴\n  return {\n    'Authorization': `Bearer ${accessToken}`,\n    'Content-Type': 'application/json'\n  };\n};\nconst QuestionboardPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [scrapStatus, setScrapStatus] = useState({});\n  const [posts, setPosts] = useState([]);\n  const [sortType, setSortType] = useState('latest'); // 'latest' or 'recommend'\n\n  const isDesktop = useMediaQuery({\n    query: '(min-width: 769px)'\n  });\n  useEffect(() => {\n    // 퀘스트 목록 불러오기 (페이지네이션 및 검색 포함)\n    const fetchPosts = async () => {\n      const params = new URLSearchParams({\n        page: 0,\n        // 기본 페이지 번호\n        size: 10,\n        // 한 페이지 당 항목 수\n        searchKeyword: searchTerm // 검색어\n      });\n      try {\n        const response = await fetch(`${BASE_URL}/quest?${params.toString()}`, {\n          method: 'GET',\n          headers: getAuthHeaders()\n        });\n        if (response.ok) {\n          const data = await response.json();\n          console.log(\"퀘스트 목록:\", data); // 응답 데이터 확인\n          setPosts(data.content); // 받아온 퀘스트 목록을 상태에 저장\n          setScrapStatus(data.content.reduce((acc, post) => ({\n            ...acc,\n            [post.id]: post.scrap === 1\n          }), {})); // 스크랩 상태 초기화\n        } else {\n          console.error('퀘스트 목록 불러오기 오류');\n        }\n      } catch (error) {\n        console.error('퀘스트 목록 불러오기 중 오류 발생:', error);\n      }\n    };\n    fetchPosts();\n  }, [searchTerm]);\n  const toggleMenu = () => {\n    setMenuOpen(!menuOpen);\n  };\n  const handleBoardChange = boardName => {\n    if (boardName === '자유 게시판') {\n      navigate('/FreeboardPage'); // 자유 게시판으로 이동\n    }\n    setMenuOpen(false);\n  };\n  const toggleScrap = async id => {\n    try {\n      const response = await fetch(`${BASE_URL}/quest/${id}/scrap`, {\n        method: 'POST',\n        headers: getAuthHeaders()\n      });\n      if (response.ok) {\n        setScrapStatus(prevState => ({\n          ...prevState,\n          [id]: !prevState[id]\n        }));\n      } else {\n        throw new Error('스크랩 상태 업데이트 실패');\n      }\n    } catch (error) {\n      console.error('스크랩 상태 업데이트 중 오류 발생:', error);\n    }\n  };\n  const handleSearchInputChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  const handleSearch = () => {\n    // 검색어를 기반으로 퀘스트 목록 다시 불러오기\n    setSearchTerm(searchTerm.trim());\n  };\n  const handleSort = type => {\n    setSortType(type);\n    // 서버에서 정렬된 데이터를 불러오거나, 클라이언트에서 정렬할 수 있습니다.\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.titleContainer} ${isDesktop ? styles.desktopTitleContainer : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: CommunicationRoom_goBack,\n          className: `${styles.goBackButton} ${isDesktop ? styles.desktopGoBackButton : ''}`,\n          alt: \"\\uB4A4\\uB85C\\uAC00\\uAE30\",\n          onClick: () => navigate(-1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: `${styles.pageTitle} ${isDesktop ? styles.desktopPageTitle : ''}`,\n          children: \"\\uC9C8\\uBB38 \\uAC8C\\uC2DC\\uD310\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: DownMenu,\n          className: `${styles.downMenuButton} ${isDesktop ? styles.desktopDownMenuButton : ''}`,\n          alt: \"\\uAC8C\\uC2DC\\uD310 \\uC120\\uD0DD\",\n          onClick: toggleMenu\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), menuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.dropdownMenu} ${isDesktop ? styles.desktopDropdownMenu : ''}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.menuItem} ${isDesktop ? styles.desktopMenuItem : ''}`,\n          onClick: () => handleBoardChange('자유 게시판'),\n          children: \"\\uC790\\uC720 \\uAC8C\\uC2DC\\uD310\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.controlPanel} ${isDesktop ? styles.desktopControlPanel : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${styles.writeButton} ${isDesktop ? styles.desktopWriteButton : ''}`,\n          onClick: () => navigate('/QuestionwritePage'),\n          children: \"\\uAE00\\uC4F0\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.searchBar} ${isDesktop ? styles.desktopSearchBar : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: searchTerm,\n            onChange: handleSearchInputChange,\n            className: `${styles.searchInput} ${isDesktop ? styles.desktopSearchInput : ''}`,\n            placeholder: \"\\uAC80\\uC0C9\\uC5B4 \\uC785\\uB825\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: SearchIcon,\n            className: `${styles.searchIcon} ${isDesktop ? styles.desktopSearchIcon : ''}`,\n            alt: \"\\uAC80\\uC0C9\",\n            onClick: handleSearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.sortButtons} ${isDesktop ? styles.desktopSortButtons : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${styles.sortButton} ${styles.latestSortButton} ${isDesktop ? styles.desktopLatestSortButton : ''}`,\n            onClick: () => handleSort('latest'),\n            children: \"\\uCD5C\\uC2E0\\uC21C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${styles.sortButton} ${styles.recommendSortButton} ${isDesktop ? styles.desktopRecommendSortButton : ''}`,\n            onClick: () => handleSort('recommend'),\n            children: \"\\uCD94\\uCC9C\\uC21C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.postList,\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.postItem,\n          children: [post.questLike > 10 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.hotTag,\n            children: \"HOT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.postInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.postTitle,\n              onClick: () => navigate(`/quest/${post.id}`),\n              children: post.questTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.postDate,\n              children: new Date(post.questCreatedTime).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: scrapStatus[post.id] ? IconScrap : IconUnscrap,\n            alt: scrapStatus[post.id] ? '스크랩됨' : '스크랩안됨',\n            className: styles.scrapIcon,\n            onClick: () => toggleScrap(post.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.pagination\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionboardPage, \"LqEQtmEgDfXaa7onpIDef5QEfKY=\", false, function () {\n  return [useNavigate, useMediaQuery];\n});\n_c = QuestionboardPage;\nexport default QuestionboardPage;\nvar _c;\n$RefreshReg$(_c, \"QuestionboardPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useMediaQuery","Header","styles","CommunicationRoom_goBack","DownMenu","SearchIcon","IconScrap","IconUnscrap","jsxDEV","_jsxDEV","BASE_URL","getAuthHeaders","accessToken","localStorage","getItem","QuestionboardPage","_s","navigate","menuOpen","setMenuOpen","searchTerm","setSearchTerm","scrapStatus","setScrapStatus","posts","setPosts","sortType","setSortType","isDesktop","query","fetchPosts","params","URLSearchParams","page","size","searchKeyword","response","fetch","toString","method","headers","ok","data","json","console","log","content","reduce","acc","post","id","scrap","error","toggleMenu","handleBoardChange","boardName","toggleScrap","prevState","Error","handleSearchInputChange","event","target","value","handleSearch","trim","handleSort","type","className","container","children","fileName","_jsxFileName","lineNumber","columnNumber","titleContainer","desktopTitleContainer","src","goBackButton","desktopGoBackButton","alt","onClick","pageTitle","desktopPageTitle","downMenuButton","desktopDownMenuButton","dropdownMenu","desktopDropdownMenu","menuItem","desktopMenuItem","controlPanel","desktopControlPanel","writeButton","desktopWriteButton","searchBar","desktopSearchBar","onChange","searchInput","desktopSearchInput","placeholder","searchIcon","desktopSearchIcon","sortButtons","desktopSortButtons","sortButton","latestSortButton","desktopLatestSortButton","recommendSortButton","desktopRecommendSortButton","postList","map","postItem","questLike","hotTag","postInfo","postTitle","questTitle","postDate","Date","questCreatedTime","toLocaleDateString","scrapIcon","pagination","_c","$RefreshReg$"],"sources":["C:/Users/asx12/OneDrive/바탕 화면/react/front/Front-end/src/pages/QuestionboardPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useMediaQuery } from 'react-responsive'; // 반응형 페이지 만들기 위함\r\nimport Header from './_.js';  // 상단바 컴포넌트\r\nimport styles from './QuestionboardPage.module.css';  // BoardPage용 CSS 파일\r\nimport CommunicationRoom_goBack from '../images/왼쪽 나가기 버튼.png';\r\nimport DownMenu from '../images/아래방향메뉴선택.png';\r\nimport SearchIcon from '../images/돋보기아이콘.png';  // 돋보기 아이콘\r\nimport IconScrap from '../images/횃불이스크랩.png';\r\nimport IconUnscrap from '../images/횃불이스크랩X.png';\r\n\r\nconst BASE_URL = 'http://<your-domain>/api/board';  // API Base URL\r\n\r\n// 인증 헤더 설정\r\nconst getAuthHeaders = () => {\r\n  const accessToken = localStorage.getItem('accessToken');  // localStorage에서 accessToken을 가져옴\r\n  return {\r\n    'Authorization': `Bearer ${accessToken}`,\r\n    'Content-Type': 'application/json',\r\n  };\r\n};\r\n\r\nconst QuestionboardPage = () => {\r\n  const navigate = useNavigate();\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [scrapStatus, setScrapStatus] = useState({});\r\n  const [posts, setPosts] = useState([]);\r\n  const [sortType, setSortType] = useState('latest'); // 'latest' or 'recommend'\r\n\r\n  const isDesktop = useMediaQuery({ query: '(min-width: 769px)' });\r\n\r\n  useEffect(() => {\r\n    // 퀘스트 목록 불러오기 (페이지네이션 및 검색 포함)\r\n    const fetchPosts = async () => {\r\n      const params = new URLSearchParams({\r\n        page: 0,  // 기본 페이지 번호\r\n        size: 10,  // 한 페이지 당 항목 수\r\n        searchKeyword: searchTerm,  // 검색어\r\n      });\r\n  \r\n      try {\r\n        const response = await fetch(`${BASE_URL}/quest?${params.toString()}`, {\r\n          method: 'GET',\r\n          headers: getAuthHeaders(),\r\n        });\r\n  \r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          console.log(\"퀘스트 목록:\", data); // 응답 데이터 확인\r\n          setPosts(data.content);  // 받아온 퀘스트 목록을 상태에 저장\r\n          setScrapStatus(data.content.reduce((acc, post) => ({ ...acc, [post.id]: post.scrap === 1 }), {})); // 스크랩 상태 초기화\r\n        } else {\r\n          console.error('퀘스트 목록 불러오기 오류');\r\n        }\r\n      } catch (error) {\r\n        console.error('퀘스트 목록 불러오기 중 오류 발생:', error);\r\n      }\r\n    };\r\n  \r\n    fetchPosts();\r\n  }, [searchTerm]);\r\n  \r\n\r\n  const toggleMenu = () => {\r\n    setMenuOpen(!menuOpen);\r\n  };\r\n\r\n  const handleBoardChange = (boardName) => {\r\n    if (boardName === '자유 게시판') {\r\n      navigate('/FreeboardPage');  // 자유 게시판으로 이동\r\n    }\r\n    setMenuOpen(false);\r\n  };\r\n\r\n  const toggleScrap = async (id) => {\r\n    try {\r\n      const response = await fetch(`${BASE_URL}/quest/${id}/scrap`, {\r\n        method: 'POST',\r\n        headers: getAuthHeaders(),\r\n      });\r\n      if (response.ok) {\r\n        setScrapStatus((prevState) => ({\r\n          ...prevState,\r\n          [id]: !prevState[id],\r\n        }));\r\n      } else {\r\n        throw new Error('스크랩 상태 업데이트 실패');\r\n      }\r\n    } catch (error) {\r\n      console.error('스크랩 상태 업데이트 중 오류 발생:', error);\r\n    }\r\n  };\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    // 검색어를 기반으로 퀘스트 목록 다시 불러오기\r\n    setSearchTerm(searchTerm.trim());\r\n  };\r\n\r\n  const handleSort = (type) => {\r\n    setSortType(type);\r\n    // 서버에서 정렬된 데이터를 불러오거나, 클라이언트에서 정렬할 수 있습니다.\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Header />\r\n      <div className={styles.content}>\r\n        <div className={`${styles.titleContainer} ${isDesktop ? styles.desktopTitleContainer : ''}`}>\r\n          <img\r\n            src={CommunicationRoom_goBack}\r\n            className={`${styles.goBackButton} ${isDesktop ? styles.desktopGoBackButton : ''}`}\r\n            alt=\"뒤로가기\"\r\n            onClick={() => navigate(-1)}\r\n          />\r\n          <h1 className={`${styles.pageTitle} ${isDesktop ? styles.desktopPageTitle : ''}`}>\r\n            질문 게시판\r\n          </h1>\r\n          <img\r\n            src={DownMenu}\r\n            className={`${styles.downMenuButton} ${isDesktop ? styles.desktopDownMenuButton : ''}`}\r\n            alt=\"게시판 선택\"\r\n            onClick={toggleMenu}\r\n          />\r\n        </div>\r\n\r\n        {menuOpen && (\r\n          <div className={`${styles.dropdownMenu} ${isDesktop ? styles.desktopDropdownMenu : ''}`}>\r\n            <div className={`${styles.menuItem} ${isDesktop ? styles.desktopMenuItem : ''}`} onClick={() => handleBoardChange('자유 게시판')}>\r\n              자유 게시판\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className={`${styles.controlPanel} ${isDesktop ? styles.desktopControlPanel : ''}`}>\r\n          <button className={`${styles.writeButton} ${isDesktop ? styles.desktopWriteButton : ''}`} onClick={() => navigate('/QuestionwritePage')}>\r\n            글쓰기\r\n          </button>\r\n          <div className={`${styles.searchBar} ${isDesktop ? styles.desktopSearchBar : ''}`}>\r\n            <input\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={handleSearchInputChange}\r\n              className={`${styles.searchInput} ${isDesktop ? styles.desktopSearchInput : ''}`}\r\n              placeholder=\"검색어 입력\"\r\n            />\r\n            <img\r\n              src={SearchIcon}\r\n              className={`${styles.searchIcon} ${isDesktop ? styles.desktopSearchIcon : ''}`}\r\n              alt=\"검색\"\r\n              onClick={handleSearch}\r\n            />\r\n          </div>\r\n          <div className={`${styles.sortButtons} ${isDesktop ? styles.desktopSortButtons : ''}`}>\r\n            <button className={`${styles.sortButton} ${styles.latestSortButton} ${isDesktop ? styles.desktopLatestSortButton : ''}`} onClick={() => handleSort('latest')}>\r\n              최신순\r\n            </button>\r\n            <button className={`${styles.sortButton} ${styles.recommendSortButton} ${isDesktop ? styles.desktopRecommendSortButton : ''}`} onClick={() => handleSort('recommend')}>\r\n              추천순\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.postList}>\r\n          {posts.map((post) => (\r\n            <div key={post.id} className={styles.postItem}>\r\n              {post.questLike > 10 && <span className={styles.hotTag}>HOT</span>}\r\n              <div className={styles.postInfo}>\r\n                <span className={styles.postTitle} onClick={() => navigate(`/quest/${post.id}`)}>{post.questTitle}</span>\r\n                <span className={styles.postDate}>{new Date(post.questCreatedTime).toLocaleDateString()}</span>\r\n              </div>\r\n              <img\r\n                src={scrapStatus[post.id] ? IconScrap : IconUnscrap}\r\n                alt={scrapStatus[post.id] ? '스크랩됨' : '스크랩안됨'}\r\n                className={styles.scrapIcon}\r\n                onClick={() => toggleScrap(post.id)}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className={styles.pagination}>\r\n          {/* 페이지네이션 처리 */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionboardPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}