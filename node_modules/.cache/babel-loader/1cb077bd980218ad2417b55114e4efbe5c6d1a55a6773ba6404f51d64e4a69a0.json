{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asx12\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\react\\\\front\\\\Front-end\\\\src\\\\pages\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport styles from './ChatRoom.module.css';\nimport Header from './_.js'; // 상단바 컴포넌트\nimport CommunicationRoom_goBack from '../images/왼쪽 나가기 버튼.png';\nimport sendIcon from '../images/메시지전송버튼.png'; // 메시지 전송 아이콘 이미지\nimport heartIcon from '../images/하트횃불이.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // URL에서 동적 방 ID를 가져옵니다.\n  const navigate = useNavigate(); // 뒤로가기 버튼 동작을 위해 사용\n  const [roomData, setRoomData] = useState(null);\n  const [messages, setMessages] = useState([]); // 채팅 메시지 목록 상태 관리\n  const [inputMessage, setInputMessage] = useState(''); // 입력한 메시지 상태 관리\n  const messageListRef = useRef(null);\n  useEffect(() => {\n    // 하드코딩된 방 데이터 (나중에 백엔드와 연동할 때 교체)\n    const dummyData = {\n      1: {\n        username: 'char1',\n        lastMessage: '마지막 내용 1',\n        title: '글 제목 1'\n      },\n      2: {\n        username: 'char4',\n        lastMessage: '마지막 내용 2',\n        title: '글 제목 2'\n      },\n      3: {\n        username: 'float2',\n        lastMessage: '마지막 내용 3',\n        title: '글 제목 3'\n      },\n      4: {\n        username: 'int2',\n        lastMessage: '마지막 내용 4',\n        title: '글 제목 4'\n      },\n      5: {\n        username: 'char3',\n        lastMessage: '마지막 내용 5',\n        title: '글 제목 5'\n      }\n    };\n\n    // 방 ID에 해당하는 데이터 가져오기\n    const currentRoomData = dummyData[id];\n    setRoomData(currentRoomData);\n\n    // 임시 채팅 메시지 초기값 설정 (하드코딩된 값)\n    setMessages([{\n      id: 1,\n      text: '안녕하세요',\n      sender: 'char1',\n      time: '01:01',\n      type: 'received'\n    }, {\n      id: 2,\n      text: '안녕하세요',\n      sender: 'me',\n      time: '01:01',\n      type: 'sent'\n    }, {\n      id: 3,\n      text: '전 임베짱입니다 ㅋ',\n      sender: 'char1',\n      time: '01:01',\n      type: 'received'\n    }]);\n\n    /* 백엔드 연동용 코드 (주석 해제하여 사용)*/\n    /* const fetchRoomData = async () => {\r\n        try {\r\n            const response = await fetch(`https://your-backend-api.com/api/chatrooms/${id}`);\r\n            if (!response.ok) {\r\n                throw new Error('방 정보를 불러오는데 실패했습니다.');\r\n            }\r\n            const data = await response.json();\r\n            setRoomData(data);\r\n        } catch (error) {\r\n            console.error('방 정보를 불러오는 중 오류가 발생했습니다:', error);\r\n        }\r\n    };\r\n      const fetchMessages = async () => {\r\n        try {\r\n            const response = await fetch(`https://your-backend-api.com/api/chatrooms/${id}/messages`);\r\n            if (!response.ok) {\r\n                throw new Error('메시지 목록을 불러오는데 실패했습니다.');\r\n            }\r\n            const data = await response.json();\r\n            setMessages(data);\r\n        } catch (error) {\r\n            console.error('메시지 목록 불러오는 중 오류가 발생했습니다:', error);\r\n        }\r\n    };\r\n      fetchRoomData();\r\n    fetchMessages();\r\n    */\n  }, [id]);\n  useEffect(() => {\n    // 새로운 메시지가 추가되면 스크롤을 가장 하단으로 이동\n    if (messageListRef.current) {\n      messageListRef.current.scrollTop = messageListRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  // 메시지 전송 핸들러\n  const handleSendMessage = async () => {\n    if (inputMessage.trim() !== '') {\n      const newMessage = {\n        text: inputMessage,\n        time: new Date().toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        }),\n        isSentByMe: true\n      };\n      setMessages(prevMessages => [...prevMessages, newMessage]);\n      setInputMessage('');\n\n      /* 백엔드 연동용 코드 (주석 해제하여 사용)*/\n      try {\n        const response = await fetch('https://your-backend-api.com/api/chatrooms/messages', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            roomId: id,\n            text: inputMessage\n          })\n        });\n        if (!response.ok) {\n          throw new Error('메시지 전송에 실패했습니다.');\n        }\n        console.log('메시지가 성공적으로 전송되었습니다.');\n      } catch (error) {\n        console.error('메시지 전송 중 오류가 발생했습니다:', error);\n        alert('메시지 전송에 실패했습니다. 다시 시도해주세요.');\n      }\n    }\n  };\n\n  // 엔터키로 메시지 전송하는 핸들러\n  const handleKeyDown = event => {\n    if (event.key === 'Enter') {\n      handleSendMessage();\n    }\n  };\n  if (!roomData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 16\n    }, this); // 데이터가 없을 때 로딩 상태 표시\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.sectionTitle,\n        children: \"\\uCABD\\uC9C0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.headerRow,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: CommunicationRoom_goBack,\n          className: styles.goBackButton,\n          alt: \"\\uB4A4\\uB85C\\uAC00\\uAE30\",\n          onClick: () => navigate(-1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.roomHeaderInfo,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.roomUsername,\n            children: roomData.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.separator,\n            children: \"|\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.roomTitle,\n            children: roomData.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.messageList,\n        ref: messageListRef,\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${message.isSentByMe ? styles.sentMessage : styles.receivedMessage}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.messageText,\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.messageTime,\n            children: message.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: heartIcon,\n          alt: \"Icon\",\n          className: styles.heartIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputMessage,\n          onChange: e => setInputMessage(e.target.value),\n          onKeyDown: handleKeyDown // 엔터키로 메시지 전송\n          ,\n          placeholder: \"\\uC785\\uB825\\uD558\\uC138\\uC694...\",\n          className: styles.inputField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.sendButton,\n          onClick: handleSendMessage,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: sendIcon,\n            alt: \"\\uC804\\uC1A1\",\n            className: styles.sendIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatRoom, \"Q0s4QqajPWfh9UPbNGZanNSWC/k=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useParams","useNavigate","styles","Header","CommunicationRoom_goBack","sendIcon","heartIcon","jsxDEV","_jsxDEV","ChatRoom","_s","id","navigate","roomData","setRoomData","messages","setMessages","inputMessage","setInputMessage","messageListRef","dummyData","username","lastMessage","title","currentRoomData","text","sender","time","type","current","scrollTop","scrollHeight","handleSendMessage","trim","newMessage","Date","toLocaleTimeString","hour","minute","isSentByMe","prevMessages","response","fetch","method","headers","body","JSON","stringify","roomId","ok","Error","console","log","error","alert","handleKeyDown","event","key","children","fileName","_jsxFileName","lineNumber","columnNumber","className","container","content","sectionTitle","headerRow","src","goBackButton","alt","onClick","roomHeaderInfo","roomUsername","separator","roomTitle","messageList","ref","map","message","index","sentMessage","receivedMessage","messageText","messageTime","inputContainer","value","onChange","e","target","onKeyDown","placeholder","inputField","sendButton","_c","$RefreshReg$"],"sources":["C:/Users/asx12/OneDrive/바탕 화면/react/front/Front-end/src/pages/ChatRoom.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport styles from './ChatRoom.module.css';\r\nimport Header from './_.js'; // 상단바 컴포넌트\r\nimport CommunicationRoom_goBack from '../images/왼쪽 나가기 버튼.png';\r\nimport sendIcon from '../images/메시지전송버튼.png'; // 메시지 전송 아이콘 이미지\r\nimport heartIcon from '../images/하트횃불이.png';\r\n\r\nconst ChatRoom = () => {\r\n    const { id } = useParams(); // URL에서 동적 방 ID를 가져옵니다.\r\n    const navigate = useNavigate(); // 뒤로가기 버튼 동작을 위해 사용\r\n    const [roomData, setRoomData] = useState(null);\r\n    const [messages, setMessages] = useState([]); // 채팅 메시지 목록 상태 관리\r\n    const [inputMessage, setInputMessage] = useState(''); // 입력한 메시지 상태 관리\r\n    const messageListRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        \r\n        // 하드코딩된 방 데이터 (나중에 백엔드와 연동할 때 교체)\r\n        const dummyData = {\r\n            1: { username: 'char1', lastMessage: '마지막 내용 1', title: '글 제목 1' },\r\n            2: { username: 'char4', lastMessage: '마지막 내용 2', title: '글 제목 2' },\r\n            3: { username: 'float2', lastMessage: '마지막 내용 3', title: '글 제목 3' },\r\n            4: { username: 'int2', lastMessage: '마지막 내용 4', title: '글 제목 4' },\r\n            5: { username: 'char3', lastMessage: '마지막 내용 5', title: '글 제목 5' },\r\n        };\r\n\r\n        // 방 ID에 해당하는 데이터 가져오기\r\n        const currentRoomData = dummyData[id];\r\n        setRoomData(currentRoomData);\r\n\r\n        // 임시 채팅 메시지 초기값 설정 (하드코딩된 값)\r\n        setMessages([\r\n            { id: 1, text: '안녕하세요', sender: 'char1', time: '01:01', type: 'received' },\r\n            { id: 2, text: '안녕하세요', sender: 'me', time: '01:01', type: 'sent' },\r\n            { id: 3, text: '전 임베짱입니다 ㅋ', sender: 'char1', time: '01:01', type: 'received' },\r\n        ]);\r\n\r\n        \r\n         /* 백엔드 연동용 코드 (주석 해제하여 사용)*/\r\n        /* const fetchRoomData = async () => {\r\n            try {\r\n                const response = await fetch(`https://your-backend-api.com/api/chatrooms/${id}`);\r\n                if (!response.ok) {\r\n                    throw new Error('방 정보를 불러오는데 실패했습니다.');\r\n                }\r\n                const data = await response.json();\r\n                setRoomData(data);\r\n            } catch (error) {\r\n                console.error('방 정보를 불러오는 중 오류가 발생했습니다:', error);\r\n            }\r\n        };\r\n\r\n        const fetchMessages = async () => {\r\n            try {\r\n                const response = await fetch(`https://your-backend-api.com/api/chatrooms/${id}/messages`);\r\n                if (!response.ok) {\r\n                    throw new Error('메시지 목록을 불러오는데 실패했습니다.');\r\n                }\r\n                const data = await response.json();\r\n                setMessages(data);\r\n            } catch (error) {\r\n                console.error('메시지 목록 불러오는 중 오류가 발생했습니다:', error);\r\n            }\r\n        };\r\n\r\n        fetchRoomData();\r\n        fetchMessages();\r\n        */\r\n    }, [id]); \r\n    \r\n\r\n    useEffect(() => {\r\n        // 새로운 메시지가 추가되면 스크롤을 가장 하단으로 이동\r\n        if (messageListRef.current) {\r\n            messageListRef.current.scrollTop = messageListRef.current.scrollHeight;\r\n        }\r\n    }, [messages]);\r\n\r\n    // 메시지 전송 핸들러\r\n    const handleSendMessage = async () => {\r\n        if (inputMessage.trim() !== '') {\r\n            const newMessage = {\r\n                text: inputMessage,\r\n                time: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }),\r\n                isSentByMe: true,\r\n            };\r\n            setMessages((prevMessages) => [...prevMessages, newMessage]);\r\n            setInputMessage('');\r\n\r\n            /* 백엔드 연동용 코드 (주석 해제하여 사용)*/\r\n            try {\r\n                const response = await fetch('https://your-backend-api.com/api/chatrooms/messages', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        roomId: id,\r\n                        text: inputMessage,\r\n                    }),\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error('메시지 전송에 실패했습니다.');\r\n                }\r\n\r\n                console.log('메시지가 성공적으로 전송되었습니다.');\r\n            } catch (error) {\r\n                console.error('메시지 전송 중 오류가 발생했습니다:', error);\r\n                alert('메시지 전송에 실패했습니다. 다시 시도해주세요.');\r\n            }\r\n            \r\n        }\r\n    };\r\n\r\n    // 엔터키로 메시지 전송하는 핸들러\r\n    const handleKeyDown = (event) => {\r\n        if (event.key === 'Enter') {\r\n            handleSendMessage();\r\n        }\r\n    };\r\n\r\n    if (!roomData) {\r\n        return <div>Loading...</div>; // 데이터가 없을 때 로딩 상태 표시\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <Header />\r\n            <div className={styles.content}>\r\n                <h2 className={styles.sectionTitle}>쪽지</h2>\r\n                <div className={styles.headerRow}>\r\n                    {/* 왼쪽 나가기 버튼 */}\r\n                    <img\r\n                        src={CommunicationRoom_goBack}\r\n                        className={styles.goBackButton}\r\n                        alt=\"뒤로가기\"\r\n                        onClick={() => navigate(-1)}\r\n                    />\r\n                    {/* 사용자 이름 및 글 제목 */}\r\n                    <div className={styles.roomHeaderInfo}>\r\n                        <span className={styles.roomUsername}>{roomData.username}</span>\r\n                        <span className={styles.separator}>|</span>\r\n                        <span className={styles.roomTitle}>{roomData.title}</span>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* 기존 메시지 스타일 유지 */}\r\n                <div className={styles.messageList} ref={messageListRef}>\r\n                    {messages.map((message, index) => (\r\n                        <div\r\n                            key={index}\r\n                            className={`${message.isSentByMe ? styles.sentMessage : styles.receivedMessage}`}\r\n                        >\r\n                            <span className={styles.messageText}>{message.text}</span>\r\n                            <span className={styles.messageTime}>{message.time}</span>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                {/* 채팅 입력창 - 화면 하단 고정 */}\r\n                <div className={styles.inputContainer}>\r\n                    <img src={heartIcon} alt=\"Icon\" className={styles.heartIcon} />\r\n                    <input\r\n                        type=\"text\"\r\n                        value={inputMessage}\r\n                        onChange={(e) => setInputMessage(e.target.value)}\r\n                        onKeyDown={handleKeyDown} // 엔터키로 메시지 전송\r\n                        placeholder=\"입력하세요...\"\r\n                        className={styles.inputField}\r\n                    />\r\n                    <button className={styles.sendButton} onClick={handleSendMessage}>\r\n                        <img src={sendIcon} alt=\"전송\" className={styles.sendIcon} />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}