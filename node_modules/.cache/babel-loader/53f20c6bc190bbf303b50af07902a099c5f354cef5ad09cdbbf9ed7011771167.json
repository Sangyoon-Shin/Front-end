{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asx12\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\react\\\\front\\\\Front-end\\\\src\\\\pages\\\\FreewritePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport styles from \"./FreewritePage.module.css\";\nimport Header from './_.js'; // 상단바 컴포넌트\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode'; // Import 수정\n\n// API에서 사용할 기본 URL과 헤더 설정\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = 'https://cdae-2406-5900-10f0-c886-d1f8-d6cb-d0b5-db04.ngrok-free.app/api/board';\nconst getAuthHeaders = () => {\n  const accessToken = localStorage.getItem('accessToken');\n  if (!accessToken) throw new Error('사용자 인증 정보가 없습니다.');\n  const decodedToken = jwtDecode(accessToken);\n  const userId = decodedToken.userId;\n  return {\n    'Authorization': `Bearer ${accessToken}`,\n    'X-USER-ID': userId\n  };\n};\nconst FreewritePage = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams(); // 게시글 ID를 URL에서 가져옴 (수정 시 사용)\n\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [hashtag, setHashtag] = useState('');\n  const [files, setFiles] = useState(null);\n  const [isEditing, setIsEditing] = useState(false); // 수정 모드 여부\n  const [serverStatus, setServerStatus] = useState(''); // 서버 상태 확인용\n\n  // 서버 연결 상태 확인\n  useEffect(() => {\n    const checkServerConnection = async () => {\n      try {\n        const response = await axios.get(`${BASE_URL}/health`, {\n          headers: {\n            'ngrok-skip-browser-warning': 1\n          }\n        });\n        if (response.status === 200) {\n          setServerStatus('서버와 연결되었습니다.');\n        } else {\n          setServerStatus('서버 상태를 확인할 수 없습니다.');\n        }\n      } catch (error) {\n        setServerStatus('서버와의 연결에 실패했습니다.');\n        console.error('Server connection error:', error);\n      }\n    };\n    checkServerConnection();\n  }, []);\n\n  // 특정 게시글 데이터 가져오기 (수정 모드일 경우)\n  useEffect(() => {\n    if (id) {\n      setIsEditing(true);\n      fetchPostData(id);\n    }\n  }, [id]);\n  const fetchPostData = async postId => {\n    try {\n      const response = await axios.get(`${BASE_URL}/free/update/${postId}`, {\n        headers: {\n          ...getAuthHeaders(),\n          'ngrok-skip-browser-warning': 1\n        }\n      });\n      const {\n        freeTitle,\n        freeContents,\n        freeHashtag\n      } = response.data;\n      setTitle(freeTitle);\n      setContent(freeContents);\n      setHashtag(freeHashtag);\n    } catch (error) {\n      console.error('Error fetching post data:', error);\n      alert('게시글 정보를 불러오는 데 실패했습니다.');\n    }\n  };\n  const handleFileChange = e => setFiles(e.target.files);\n  const handleSubmit = async () => {\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('content', content);\n    formData.append('hashtag', hashtag);\n    if (files) Array.from(files).forEach(file => formData.append('files', file));\n    try {\n      const url = isEditing ? `${BASE_URL}/free/update` : `${BASE_URL}/free/save`;\n      const headers = {\n        ...getAuthHeaders(),\n        'Content-Type': 'multipart/form-data'\n      };\n      const response = await axios.post(url, formData, {\n        headers\n      });\n      if (response.status === 200) {\n        alert('게시글이 성공적으로 처리되었습니다.');\n        navigate('/notices'); // 게시글 목록 페이지로 이동\n      } else {\n        console.error('Failed to save or update data:', response.statusText);\n        alert('게시글 처리 중 오류가 발생했습니다.');\n      }\n    } catch (error) {\n      console.error('Error saving or updating data:', error);\n      alert('요청 처리 중 문제가 발생했습니다.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.app,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: arrow,\n      className: styles[\"app-arrow\"],\n      alt: \"back_arrow\",\n      onClick: () => navigate(-1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles[\"title-text2\"],\n      children: isEditing ? '게시글 수정' : '자유게시글 작성'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: bar,\n      className: styles[\"app-bar\"],\n      alt: \"bar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"input-group\"],\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles[\"title-text3\"],\n        children: \"\\uC81C\\uBAA9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles[\"input\"],\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"input-group\"],\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles[\"title-text5\"],\n        children: \"\\uD574\\uC2DC\\uD0DC\\uADF8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles[\"input\"],\n        type: \"text\",\n        value: hashtag,\n        onChange: e => setHashtag(e.target.value),\n        placeholder: \"#\\uD574\\uC2DC\\uD0DC\\uADF8 \\uC785\\uB825\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"input-group\"],\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles[\"title-text6\"],\n        children: \"\\uB0B4\\uC6A9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: styles[\"textarea\"],\n        value: content,\n        onChange: e => setContent(e.target.value),\n        placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"input-group\"],\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles[\"title-text4\"],\n        children: \"\\uD30C\\uC77C \\uCCA8\\uBD80\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles[\"input\"],\n        type: \"file\",\n        multiple: true,\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"submit-group\"],\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles[\"submit-button\"],\n        onClick: handleSubmit,\n        children: isEditing ? '수정' : '작성'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(FreewritePage, \"gYhgDs0Tq9wcWXizh25f9K9od4k=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = FreewritePage;\nexport default FreewritePage;\nvar _c;\n$RefreshReg$(_c, \"FreewritePage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","styles","Header","axios","jwtDecode","jsxDEV","_jsxDEV","BASE_URL","getAuthHeaders","accessToken","localStorage","getItem","Error","decodedToken","userId","FreewritePage","_s","navigate","id","title","setTitle","content","setContent","hashtag","setHashtag","files","setFiles","isEditing","setIsEditing","serverStatus","setServerStatus","checkServerConnection","response","get","headers","status","error","console","fetchPostData","postId","freeTitle","freeContents","freeHashtag","data","alert","handleFileChange","e","target","handleSubmit","formData","FormData","append","Array","from","forEach","file","url","post","statusText","className","app","children","fileName","_jsxFileName","lineNumber","columnNumber","src","arrow","alt","onClick","bar","type","value","onChange","placeholder","multiple","_c","$RefreshReg$"],"sources":["C:/Users/asx12/OneDrive/바탕 화면/react/front/Front-end/src/pages/FreewritePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport styles from \"./FreewritePage.module.css\";\r\nimport Header from './_.js'; // 상단바 컴포넌트\r\nimport axios from 'axios';\r\nimport jwtDecode from 'jwt-decode'; // Import 수정\r\n\r\n// API에서 사용할 기본 URL과 헤더 설정\r\nconst BASE_URL = 'https://cdae-2406-5900-10f0-c886-d1f8-d6cb-d0b5-db04.ngrok-free.app/api/board';\r\n\r\nconst getAuthHeaders = () => {\r\n  const accessToken = localStorage.getItem('accessToken');\r\n  if (!accessToken) throw new Error('사용자 인증 정보가 없습니다.');\r\n\r\n  const decodedToken = jwtDecode(accessToken);\r\n  const userId = decodedToken.userId;\r\n\r\n  return {\r\n    'Authorization': `Bearer ${accessToken}`,\r\n    'X-USER-ID': userId,\r\n  };\r\n};\r\n\r\nconst FreewritePage = () => {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams(); // 게시글 ID를 URL에서 가져옴 (수정 시 사용)\r\n\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [hashtag, setHashtag] = useState('');\r\n  const [files, setFiles] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false); // 수정 모드 여부\r\n  const [serverStatus, setServerStatus] = useState(''); // 서버 상태 확인용\r\n\r\n  // 서버 연결 상태 확인\r\n  useEffect(() => {\r\n    const checkServerConnection = async () => {\r\n      try {\r\n        const response = await axios.get(`${BASE_URL}/health`, {\r\n          headers: { 'ngrok-skip-browser-warning': 1 },\r\n        });\r\n        if (response.status === 200) {\r\n          setServerStatus('서버와 연결되었습니다.');\r\n        } else {\r\n          setServerStatus('서버 상태를 확인할 수 없습니다.');\r\n        }\r\n      } catch (error) {\r\n        setServerStatus('서버와의 연결에 실패했습니다.');\r\n        console.error('Server connection error:', error);\r\n      }\r\n    };\r\n\r\n    checkServerConnection();\r\n  }, []);\r\n\r\n  // 특정 게시글 데이터 가져오기 (수정 모드일 경우)\r\n  useEffect(() => {\r\n    if (id) {\r\n      setIsEditing(true);\r\n      fetchPostData(id);\r\n    }\r\n  }, [id]);\r\n\r\n  const fetchPostData = async (postId) => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/free/update/${postId}`, {\r\n        headers: { ...getAuthHeaders(), 'ngrok-skip-browser-warning': 1 },\r\n      });\r\n      const { freeTitle, freeContents, freeHashtag } = response.data;\r\n      setTitle(freeTitle);\r\n      setContent(freeContents);\r\n      setHashtag(freeHashtag);\r\n    } catch (error) {\r\n      console.error('Error fetching post data:', error);\r\n      alert('게시글 정보를 불러오는 데 실패했습니다.');\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (e) => setFiles(e.target.files);\r\n\r\n  const handleSubmit = async () => {\r\n    const formData = new FormData();\r\n    formData.append('title', title);\r\n    formData.append('content', content);\r\n    formData.append('hashtag', hashtag);\r\n    if (files) Array.from(files).forEach((file) => formData.append('files', file));\r\n\r\n    try {\r\n      const url = isEditing ? `${BASE_URL}/free/update` : `${BASE_URL}/free/save`;\r\n      const headers = { ...getAuthHeaders(), 'Content-Type': 'multipart/form-data' };\r\n\r\n      const response = await axios.post(url, formData, { headers });\r\n\r\n      if (response.status === 200) {\r\n        alert('게시글이 성공적으로 처리되었습니다.');\r\n        navigate('/notices'); // 게시글 목록 페이지로 이동\r\n      } else {\r\n        console.error('Failed to save or update data:', response.statusText);\r\n        alert('게시글 처리 중 오류가 발생했습니다.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving or updating data:', error);\r\n      alert('요청 처리 중 문제가 발생했습니다.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.app}>\r\n      <Header />\r\n\r\n      <img src={arrow} className={styles[\"app-arrow\"]} alt=\"back_arrow\" onClick={() => navigate(-1)} />\r\n      <h2 className={styles[\"title-text2\"]}>{isEditing ? '게시글 수정' : '자유게시글 작성'}</h2>\r\n\r\n      <img src={bar} className={styles[\"app-bar\"]} alt=\"bar\" />\r\n\r\n      <div className={styles[\"input-group\"]}>\r\n        <h2 className={styles[\"title-text3\"]}>제목</h2>\r\n        <input\r\n          className={styles[\"input\"]}\r\n          type=\"text\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          placeholder=\"제목을 입력하세요.\"\r\n        />\r\n      </div>\r\n\r\n      <div className={styles[\"input-group\"]}>\r\n        <h2 className={styles[\"title-text5\"]}>해시태그</h2>\r\n        <input\r\n          className={styles[\"input\"]}\r\n          type=\"text\"\r\n          value={hashtag}\r\n          onChange={(e) => setHashtag(e.target.value)}\r\n          placeholder=\"#해시태그 입력\"\r\n        />\r\n      </div>\r\n\r\n      <div className={styles[\"input-group\"]}>\r\n        <h2 className={styles[\"title-text6\"]}>내용</h2>\r\n        <textarea\r\n          className={styles[\"textarea\"]}\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n          placeholder=\"내용을 입력하세요.\"\r\n        />\r\n      </div>\r\n\r\n      <div className={styles[\"input-group\"]}>\r\n        <h2 className={styles[\"title-text4\"]}>파일 첨부</h2>\r\n        <input\r\n          className={styles[\"input\"]}\r\n          type=\"file\"\r\n          multiple\r\n          onChange={handleFileChange}\r\n        />\r\n      </div>\r\n\r\n      <div className={styles[\"submit-group\"]}>\r\n        <button className={styles[\"submit-button\"]} onClick={handleSubmit}>\r\n          {isEditing ? '수정' : '작성'}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FreewritePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}