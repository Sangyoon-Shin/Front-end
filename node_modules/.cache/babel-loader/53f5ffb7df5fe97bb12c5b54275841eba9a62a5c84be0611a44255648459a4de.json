{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asx12\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\react\\\\front\\\\Front-end\\\\src\\\\pages\\\\QuestionpostingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styles from \"./QuestionpostingPage.module.css\";\nimport main_mascot from '../images/대학 심볼 횃불이.png';\nimport main_bell from '../images/bell.png';\nimport main_message from '../images/message.png';\nimport main_my from '../images/my.png';\nimport arrow from '../images/arrow.png';\nimport scrab from '../images/스크랩횃불이.png';\nimport heart from '../images/heart.png';\nimport filledHeart from '../images/filledheart.png';\nimport bar from '../images/bar.png';\nimport Header from './_.js'; // 상단바 컴포넌트\n// import Header from './Header'; // import the Header component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionpostingPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const fileInputRef = useRef(null);\n  const [content, setContent] = useState('');\n  const [comments, setComments] = useState([]);\n  const [commentContent, setCommentContent] = useState('');\n  const [replyContents, setReplyContents] = useState([]);\n  const [nickname, setNickname] = useState('');\n  const [nicknameCount, setNicknameCount] = useState({\n    int: 0,\n    short: 0,\n    double: 0,\n    char: 0\n  });\n  const [isHeartFilled, setIsHeartFilled] = useState(false);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [replyVisible, setReplyVisible] = useState(''); // 신고 내용 저장\n\n  const currentDate = new Date();\n  const year = currentDate.getFullYear();\n  const month = String(currentDate.getMonth() + 1).padStart(2, '0');\n  const day = String(currentDate.getDate()).padStart(2, '0');\n  const formattedDate = `${year}.${month}.${day}`;\n  const [reportContent, setReportContent] = useState('');\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\n  const handleBackClick = () => navigate(-1);\n\n  // 새로고침 시 로컬 스토리지에서 상태를 불러옵니다.\n  useEffect(() => {\n    const savedComments = localStorage.getItem('comments');\n    const savedHeartStatus = localStorage.getItem('isHeartFilled');\n    const savedNicknameCount = localStorage.getItem('nicknameCount');\n    const savedReplyVisible = localStorage.getItem('replyVisible');\n    if (savedComments) setComments(JSON.parse(savedComments));\n    if (savedHeartStatus) setIsHeartFilled(JSON.parse(savedHeartStatus));\n    if (savedNicknameCount) setNicknameCount(JSON.parse(savedNicknameCount));\n    if (savedReplyVisible) setReplyVisible(JSON.parse(savedReplyVisible));\n  }, []);\n\n  // 댓글 상태가 변경될 때마다 로컬 스토리지에 저장합니다.\n  useEffect(() => {\n    localStorage.setItem('comments', JSON.stringify(comments));\n  }, [comments]);\n\n  // 좋아요 상태가 변경될 때마다 로컬 스토리지에 저장합니다.\n  useEffect(() => {\n    localStorage.setItem('isHeartFilled', JSON.stringify(isHeartFilled));\n  }, [isHeartFilled]);\n\n  // 닉네임 카운트가 변경될 때마다 로컬 스토리지에 저장합니다.\n  useEffect(() => {\n    localStorage.setItem('nicknameCount', JSON.stringify(nicknameCount));\n  }, [nicknameCount]);\n\n  // 대댓글 입력창 가시성 상태가 변경될 때마다 로컬 스토리지에 저장합니다.\n  useEffect(() => {\n    localStorage.setItem('replyVisible', JSON.stringify(replyVisible));\n  }, [replyVisible]);\n  useEffect(() => {\n    if (!nickname) {\n      const types = ['int', 'short', 'double', 'char'];\n      const randomType = types[Math.floor(Math.random() * types.length)];\n      setNickname(randomType);\n    }\n  }, [nickname]);\n  useEffect(() => {\n    const fetchHeartStatus = async () => {\n      try {\n        const response = await fetch('/api/like-status');\n        if (response.ok) {\n          const data = await response.json();\n          setIsHeartFilled(data.liked); // 서버로부터 불러온 좋아요 상태 반영\n        } else {\n          console.error('좋아요 상태 불러오기에 실패했습니다.');\n        }\n      } catch (error) {\n        console.error('좋아요 상태 불러오는 중 오류 발생:', error);\n      }\n    };\n    fetchHeartStatus();\n  }, []);\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const response = await fetch('/api/comments'); // 서버에서 댓글 가져오기\n        if (response.ok) {\n          const data = await response.json();\n          setComments(data.comments); // 서버에서 가져온 댓글을 상태로 설정\n        } else {\n          console.error('댓글 불러오기에 실패했습니다.');\n        }\n      } catch (error) {\n        console.error('댓글 불러오는 중 오류 발생:', error);\n      }\n    };\n    fetchComments();\n  }, []);\n  const handleContentChange = e => {\n    setContent(e.target.value);\n  };\n  const handleCommentChange = e => {\n    setCommentContent(e.target.value);\n  };\n  const handleReplyChange = (index, e) => {\n    const newReplyContents = [...replyContents];\n    newReplyContents[index] = e.target.value;\n    setReplyContents(newReplyContents);\n  };\n\n  // const handleAddComment = () => {\n  //   if (commentContent.trim() !== '') {\n  //     const newNicknameCount = { ...nicknameCount };\n  //     newNicknameCount[nickname] += 1;\n  //     setNicknameCount(newNicknameCount);\n\n  //     setComments([...comments, { nickname: `${nickname}${newNicknameCount[nickname]}`, content: commentContent, replies: [] }]);\n  //     setReplyContents([...replyContents, '']);\n  //     setCommentContent('');\n  //   }\n  // };\n  const handleAddComment = async () => {\n    if (commentContent.trim() !== '') {\n      const newComment = {\n        nickname: `${nickname}${nicknameCount[nickname] + 1}`,\n        content: commentContent,\n        replies: []\n      };\n      try {\n        const response = await fetch('/api/comments', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newComment)\n        });\n        if (response.ok) {\n          const savedComment = await response.json(); // 서버에서 저장된 댓글 데이터 반환\n          setComments([...comments, savedComment]);\n          setNicknameCount(prev => ({\n            ...prev,\n            [nickname]: prev[nickname] + 1\n          }));\n          setCommentContent('');\n        } else {\n          console.error('댓글 추가에 실패했습니다.');\n        }\n      } catch (error) {\n        console.error('댓글 추가 중 오류 발생:', error);\n      }\n    }\n  };\n\n  // const handleAddReply = (index) => {\n  //   if (replyContents[index].trim() !== '') {\n  //     const updatedComments = [...comments];\n  //     const newNicknameCount = { ...nicknameCount };\n  //     newNicknameCount[nickname] += 1;\n  //     setNicknameCount(newNicknameCount);\n\n  //     updatedComments[index].replies.push({ nickname: `${nickname}${newNicknameCount[nickname]}`, content: replyContents[index] });\n  //     setComments(updatedComments);\n\n  //     const newReplyContents = [...replyContents];\n  //     newReplyContents[index] = '';\n  //     setReplyContents(newReplyContents);\n  //     setReplyVisible((prev) => ({ ...prev, [index]: false }));\n  //   }\n  // };\n  const handleAddReply = async index => {\n    if (replyContents[index].trim() !== '') {\n      const newReply = {\n        nickname: `${nickname}${nicknameCount[nickname] + 1}`,\n        content: replyContents[index]\n      };\n      try {\n        const response = await fetch(`/api/comments/${index}/replies`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newReply)\n        });\n        if (response.ok) {\n          const savedReply = await response.json(); // 서버에서 저장된 대댓글 데이터 반환\n          const updatedComments = [...comments];\n          updatedComments[index].replies.push(savedReply);\n          setComments(updatedComments);\n          setNicknameCount(prev => ({\n            ...prev,\n            [nickname]: prev[nickname] + 1\n          }));\n          const newReplyContents = [...replyContents];\n          newReplyContents[index] = '';\n          setReplyContents(newReplyContents);\n          setReplyVisible(prev => ({\n            ...prev,\n            [index]: false\n          }));\n        } else {\n          console.error('대댓글 추가에 실패했습니다.');\n        }\n      } catch (error) {\n        console.error('대댓글 추가 중 오류 발생:', error);\n      }\n    }\n  };\n  const handleToggleReply = index => {\n    setReplyVisible(prev => ({\n      ...prev,\n      [index]: !prev[index]\n    }));\n  };\n\n  // const handleHeartClick = () => {\n  //   setIsHeartFilled(!isHeartFilled);\n  // };\n\n  const handleHeartClick = async () => {\n    // 현재 좋아요 상태를 토글\n    const newHeartStatus = !isHeartFilled;\n    setIsHeartFilled(newHeartStatus);\n    try {\n      // 서버에 좋아요 상태 업데이트 요청\n      const response = await fetch('/api/like', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          isHeartFilled: newHeartStatus\n        }) // 좋아요 상태 전달\n      });\n      if (!response.ok) {\n        console.error('좋아요 요청에 실패했습니다.');\n        // 요청 실패 시 좋아요 상태를 되돌림\n        setIsHeartFilled(!newHeartStatus);\n      }\n    } catch (error) {\n      console.error('좋아요 요청 중 오류 발생:', error);\n      // 오류 발생 시 좋아요 상태를 되돌림\n      setIsHeartFilled(!newHeartStatus);\n    }\n  };\n  const togglePopup = () => {\n    setIsPopupOpen(!isPopupOpen);\n  };\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      console.log(\"선택된 파일:\", file);\n    }\n  };\n  const submitReport = async () => {\n    try {\n      const response = await fetch('/api/report', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          content: reportContent\n        })\n      });\n      if (response.ok) {\n        setReportContent('');\n        togglePopup();\n        setIsAlertOpen(true);\n        setTimeout(() => {\n          setIsAlertOpen(false);\n        }, 3000);\n      } else {\n        console.error('신고 제출에 실패했습니다.');\n      }\n    } catch (error) {\n      console.error('신고 제출 중 오류 발생:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      className: styles[\"fixed-header\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"content\"],\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"app\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: arrow,\n          className: styles[\"app-arrow\"],\n          alt: \"back_arrow\",\n          onClick: () => navigate(-1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: styles[\"title-text2\"],\n          children: \"\\uC9C8\\uBB38\\uAC8C\\uC2DC\\uD310\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: bar,\n          className: styles[\"app-bar\"],\n          alt: \"bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: styles[\"title-text3\"],\n          children: \"\\uAC8C\\uC2DC\\uD310 \\uC81C\\uBAA9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"right-section\"],\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: main_message,\n            className: styles[\"app-main_message2\"],\n            alt: \"main_message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: scrab,\n            className: styles[\"app-main_message3\"],\n            alt: \"main_message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: styles[\"title-text4\"],\n          children: [\"\\uC791\\uC131\\uC77C: \", formattedDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: togglePopup,\n          className: styles[\"report-button\"],\n          children: \"\\uC2E0\\uACE0\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), isPopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"popup\"],\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"popup-inner\"],\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uC2E0\\uACE0\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uC2E0\\uACE0 \\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: styles[\"popup-textarea\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"popup-button-container\"],\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: togglePopup,\n            className: styles[\"popup-close\"],\n            children: \"\\uB2EB\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: submitReport,\n            className: styles[\"popup-receive\"],\n            children: \"\\uC81C\\uCD9C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 9\n    }, this), isAlertOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"alert-popup\"],\n      children: \"\\uC81C\\uCD9C\\uC774 \\uC644\\uB8CC\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"content-input\"],\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: styles[\"textarea\"],\n        value: content,\n        onChange: handleContentChange,\n        placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: fileInputRef,\n      style: {\n        display: 'none'\n      },\n      accept: \"image/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: isHeartFilled ? filledHeart : heart,\n      className: styles[\"app-heart\"],\n      alt: \"heart\",\n      onClick: handleHeartClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"content-input2\"],\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: styles[\"textarea2\"],\n        value: commentContent,\n        onChange: handleCommentChange,\n        placeholder: \"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddComment,\n      children: \"\\uB313\\uAE00 \\uB2EC\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"comments-section\"],\n      children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"comment-item\"],\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [comment.nickname, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this), \" \", comment.content, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"reply-container\"],\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles[\"toggle-reply-button\"],\n            onClick: () => handleToggleReply(index),\n            children: replyVisible[index] ? '대댓글 숨기기' : '대댓글 달기'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }, this), replyVisible[index] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"reply-input\"],\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: styles[\"textarea_reply\"],\n            value: replyContents[index] || '',\n            onChange: e => handleReplyChange(index, e),\n            placeholder: \"\\uB300\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddReply(index),\n            children: \"\\uB300\\uB313\\uAE00 \\uB2EC\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 15\n        }, this), comment.replies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"replies-section\"],\n          children: comment.replies.map((reply, replyIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"reply-item\"],\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [reply.nickname, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 21\n            }, this), \" \", reply.content]\n          }, replyIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 298,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionpostingPage, \"od6izqsWAOmXASu44YoYZIk+m3M=\", false, function () {\n  return [useNavigate];\n});\n_c = QuestionpostingPage;\nexport default QuestionpostingPage;\nvar _c;\n$RefreshReg$(_c, \"QuestionpostingPage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigate","styles","main_mascot","main_bell","main_message","main_my","arrow","scrab","heart","filledHeart","bar","Header","jsxDEV","_jsxDEV","QuestionpostingPage","_s","navigate","fileInputRef","content","setContent","comments","setComments","commentContent","setCommentContent","replyContents","setReplyContents","nickname","setNickname","nicknameCount","setNicknameCount","int","short","double","char","isHeartFilled","setIsHeartFilled","isPopupOpen","setIsPopupOpen","replyVisible","setReplyVisible","currentDate","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","formattedDate","reportContent","setReportContent","isAlertOpen","setIsAlertOpen","handleBackClick","savedComments","localStorage","getItem","savedHeartStatus","savedNicknameCount","savedReplyVisible","JSON","parse","setItem","stringify","types","randomType","Math","floor","random","length","fetchHeartStatus","response","fetch","ok","data","json","liked","console","error","fetchComments","handleContentChange","e","target","value","handleCommentChange","handleReplyChange","index","newReplyContents","handleAddComment","trim","newComment","replies","method","headers","body","savedComment","prev","handleAddReply","newReply","savedReply","updatedComments","push","handleToggleReply","handleHeartClick","newHeartStatus","togglePopup","handleFileChange","file","files","log","submitReport","setTimeout","children","className","fileName","_jsxFileName","lineNumber","columnNumber","class","src","alt","onClick","onChange","placeholder","type","ref","style","display","accept","map","comment","reply","replyIndex","_c","$RefreshReg$"],"sources":["C:/Users/asx12/OneDrive/바탕 화면/react/front/Front-end/src/pages/QuestionpostingPage.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styles from \"./QuestionpostingPage.module.css\";\r\nimport main_mascot from '../images/대학 심볼 횃불이.png';\r\nimport main_bell from '../images/bell.png';\r\nimport main_message from '../images/message.png';\r\nimport main_my from '../images/my.png';\r\nimport arrow from '../images/arrow.png';\r\nimport scrab from '../images/스크랩횃불이.png';\r\nimport heart from '../images/heart.png';\r\nimport filledHeart from '../images/filledheart.png';\r\nimport bar from '../images/bar.png';\r\nimport Header from './_.js';  // 상단바 컴포넌트\r\n// import Header from './Header'; // import the Header component\r\n\r\nconst QuestionpostingPage = () => {\r\n  const navigate = useNavigate();\r\n  const fileInputRef = useRef(null);\r\n\r\n  const [content, setContent] = useState('');\r\n  const [comments, setComments] = useState([]);\r\n  const [commentContent, setCommentContent] = useState('');\r\n  const [replyContents, setReplyContents] = useState([]);\r\n  const [nickname, setNickname] = useState('');\r\n  const [nicknameCount, setNicknameCount] = useState({ int: 0, short: 0, double: 0, char: 0 });\r\n  const [isHeartFilled, setIsHeartFilled] = useState(false);\r\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\r\n  const [replyVisible, setReplyVisible] = useState(''); // 신고 내용 저장\r\n\r\n  const currentDate = new Date();\r\n  const year = currentDate.getFullYear();\r\n  const month = String(currentDate.getMonth() + 1).padStart(2, '0');\r\n  const day = String(currentDate.getDate()).padStart(2, '0');\r\n  const formattedDate = `${year}.${month}.${day}`;\r\n  const [reportContent, setReportContent] = useState('');\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const handleBackClick = () => navigate(-1);\r\n\r\n  // 새로고침 시 로컬 스토리지에서 상태를 불러옵니다.\r\n  useEffect(() => {\r\n    const savedComments = localStorage.getItem('comments');\r\n    const savedHeartStatus = localStorage.getItem('isHeartFilled');\r\n    const savedNicknameCount = localStorage.getItem('nicknameCount');\r\n    const savedReplyVisible = localStorage.getItem('replyVisible');\r\n\r\n    if (savedComments) setComments(JSON.parse(savedComments));\r\n    if (savedHeartStatus) setIsHeartFilled(JSON.parse(savedHeartStatus));\r\n    if (savedNicknameCount) setNicknameCount(JSON.parse(savedNicknameCount));\r\n    if (savedReplyVisible) setReplyVisible(JSON.parse(savedReplyVisible));\r\n  }, []);\r\n\r\n  // 댓글 상태가 변경될 때마다 로컬 스토리지에 저장합니다.\r\n  useEffect(() => {\r\n    localStorage.setItem('comments', JSON.stringify(comments));\r\n  }, [comments]);\r\n\r\n  // 좋아요 상태가 변경될 때마다 로컬 스토리지에 저장합니다.\r\n  useEffect(() => {\r\n    localStorage.setItem('isHeartFilled', JSON.stringify(isHeartFilled));\r\n  }, [isHeartFilled]);\r\n\r\n  // 닉네임 카운트가 변경될 때마다 로컬 스토리지에 저장합니다.\r\n  useEffect(() => {\r\n    localStorage.setItem('nicknameCount', JSON.stringify(nicknameCount));\r\n  }, [nicknameCount]);\r\n\r\n  // 대댓글 입력창 가시성 상태가 변경될 때마다 로컬 스토리지에 저장합니다.\r\n  useEffect(() => {\r\n    localStorage.setItem('replyVisible', JSON.stringify(replyVisible));\r\n  }, [replyVisible]);\r\n\r\n  useEffect(() => {\r\n    if (!nickname) {\r\n      const types = ['int', 'short', 'double', 'char'];\r\n      const randomType = types[Math.floor(Math.random() * types.length)];\r\n      setNickname(randomType);\r\n    }\r\n  }, [nickname]);\r\n\r\n  useEffect(() => {\r\n    const fetchHeartStatus = async () => {\r\n      try {\r\n        const response = await fetch('/api/like-status');\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setIsHeartFilled(data.liked); // 서버로부터 불러온 좋아요 상태 반영\r\n        } else {\r\n          console.error('좋아요 상태 불러오기에 실패했습니다.');\r\n        }\r\n      } catch (error) {\r\n        console.error('좋아요 상태 불러오는 중 오류 발생:', error);\r\n      }\r\n    };\r\n\r\n    fetchHeartStatus();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchComments = async () => {\r\n      try {\r\n        const response = await fetch('/api/comments'); // 서버에서 댓글 가져오기\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setComments(data.comments); // 서버에서 가져온 댓글을 상태로 설정\r\n        } else {\r\n          console.error('댓글 불러오기에 실패했습니다.');\r\n        }\r\n      } catch (error) {\r\n        console.error('댓글 불러오는 중 오류 발생:', error);\r\n      }\r\n    };\r\n\r\n    fetchComments();\r\n  }, []);\r\n\r\n  const handleContentChange = (e) => {\r\n    setContent(e.target.value);\r\n  };\r\n\r\n  const handleCommentChange = (e) => {\r\n    setCommentContent(e.target.value);\r\n  };\r\n\r\n  const handleReplyChange = (index, e) => {\r\n    const newReplyContents = [...replyContents];\r\n    newReplyContents[index] = e.target.value;\r\n    setReplyContents(newReplyContents);\r\n  };\r\n\r\n  // const handleAddComment = () => {\r\n  //   if (commentContent.trim() !== '') {\r\n  //     const newNicknameCount = { ...nicknameCount };\r\n  //     newNicknameCount[nickname] += 1;\r\n  //     setNicknameCount(newNicknameCount);\r\n\r\n  //     setComments([...comments, { nickname: `${nickname}${newNicknameCount[nickname]}`, content: commentContent, replies: [] }]);\r\n  //     setReplyContents([...replyContents, '']);\r\n  //     setCommentContent('');\r\n  //   }\r\n  // };\r\n  const handleAddComment = async () => {\r\n    if (commentContent.trim() !== '') {\r\n      const newComment = {\r\n        nickname: `${nickname}${nicknameCount[nickname] + 1}`,\r\n        content: commentContent,\r\n        replies: []\r\n      };\r\n\r\n      try {\r\n        const response = await fetch('/api/comments', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(newComment),\r\n        });\r\n\r\n        if (response.ok) {\r\n          const savedComment = await response.json(); // 서버에서 저장된 댓글 데이터 반환\r\n          setComments([...comments, savedComment]);\r\n          setNicknameCount((prev) => ({ ...prev, [nickname]: prev[nickname] + 1 }));\r\n          setCommentContent('');\r\n        } else {\r\n          console.error('댓글 추가에 실패했습니다.');\r\n        }\r\n      } catch (error) {\r\n        console.error('댓글 추가 중 오류 발생:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // const handleAddReply = (index) => {\r\n  //   if (replyContents[index].trim() !== '') {\r\n  //     const updatedComments = [...comments];\r\n  //     const newNicknameCount = { ...nicknameCount };\r\n  //     newNicknameCount[nickname] += 1;\r\n  //     setNicknameCount(newNicknameCount);\r\n\r\n  //     updatedComments[index].replies.push({ nickname: `${nickname}${newNicknameCount[nickname]}`, content: replyContents[index] });\r\n  //     setComments(updatedComments);\r\n\r\n  //     const newReplyContents = [...replyContents];\r\n  //     newReplyContents[index] = '';\r\n  //     setReplyContents(newReplyContents);\r\n  //     setReplyVisible((prev) => ({ ...prev, [index]: false }));\r\n  //   }\r\n  // };\r\n  const handleAddReply = async (index) => {\r\n    if (replyContents[index].trim() !== '') {\r\n      const newReply = {\r\n        nickname: `${nickname}${nicknameCount[nickname] + 1}`,\r\n        content: replyContents[index],\r\n      };\r\n\r\n      try {\r\n        const response = await fetch(`/api/comments/${index}/replies`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(newReply),\r\n        });\r\n\r\n        if (response.ok) {\r\n          const savedReply = await response.json(); // 서버에서 저장된 대댓글 데이터 반환\r\n          const updatedComments = [...comments];\r\n          updatedComments[index].replies.push(savedReply);\r\n          setComments(updatedComments);\r\n          setNicknameCount((prev) => ({ ...prev, [nickname]: prev[nickname] + 1 }));\r\n\r\n          const newReplyContents = [...replyContents];\r\n          newReplyContents[index] = '';\r\n          setReplyContents(newReplyContents);\r\n          setReplyVisible((prev) => ({ ...prev, [index]: false }));\r\n        } else {\r\n          console.error('대댓글 추가에 실패했습니다.');\r\n        }\r\n      } catch (error) {\r\n        console.error('대댓글 추가 중 오류 발생:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  const handleToggleReply = (index) => {\r\n    setReplyVisible((prev) => ({ ...prev, [index]: !prev[index] }));\r\n  };\r\n\r\n\r\n  // const handleHeartClick = () => {\r\n  //   setIsHeartFilled(!isHeartFilled);\r\n  // };\r\n\r\n  const handleHeartClick = async () => {\r\n    // 현재 좋아요 상태를 토글\r\n    const newHeartStatus = !isHeartFilled;\r\n    setIsHeartFilled(newHeartStatus);\r\n\r\n    try {\r\n      // 서버에 좋아요 상태 업데이트 요청\r\n      const response = await fetch('/api/like', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ isHeartFilled: newHeartStatus }), // 좋아요 상태 전달\r\n      });\r\n\r\n      if (!response.ok) {\r\n        console.error('좋아요 요청에 실패했습니다.');\r\n        // 요청 실패 시 좋아요 상태를 되돌림\r\n        setIsHeartFilled(!newHeartStatus);\r\n      }\r\n    } catch (error) {\r\n      console.error('좋아요 요청 중 오류 발생:', error);\r\n      // 오류 발생 시 좋아요 상태를 되돌림\r\n      setIsHeartFilled(!newHeartStatus);\r\n    }\r\n  };\r\n\r\n  const togglePopup = () => {\r\n    setIsPopupOpen(!isPopupOpen);\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      console.log(\"선택된 파일:\", file);\r\n    }\r\n  };\r\n  const submitReport = async () => {\r\n    try {\r\n      const response = await fetch('/api/report', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ content: reportContent }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setReportContent('');\r\n        togglePopup();\r\n        setIsAlertOpen(true);\r\n\r\n        setTimeout(() => {\r\n          setIsAlertOpen(false);\r\n        }, 3000);\r\n      } else {\r\n        console.error('신고 제출에 실패했습니다.');\r\n      }\r\n    } catch (error) {\r\n      console.error('신고 제출 중 오류 발생:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header className={styles[\"fixed-header\"]} />\r\n      <div className={styles[\"content\"]}>\r\n\r\n      \r\n      <div class='app'>\r\n        <img src={arrow} className={styles[\"app-arrow\"]} alt=\"back_arrow\" onClick={() => navigate(-1)} />\r\n        <h1 className={styles[\"title-text2\"]}>질문게시판</h1>\r\n\r\n        <img src={bar} className={styles[\"app-bar\"]} alt=\"bar\" />\r\n\r\n        <h1 className={styles[\"title-text3\"]}>게시판 제목</h1>\r\n\r\n        <div className={styles[\"right-section\"]}>\r\n          <img src={main_message} className={styles[\"app-main_message2\"]} alt=\"main_message\" />\r\n          <img src={scrab} className={styles[\"app-main_message3\"]} alt=\"main_message\" />\r\n        </div>\r\n\r\n        <h2 className={styles[\"title-text4\"]}>작성일: {formattedDate}</h2>\r\n\r\n        <button onClick={togglePopup} className={styles[\"report-button\"]}>\r\n          신고하기\r\n        </button>\r\n      </div>\r\n      </div>\r\n      {isPopupOpen && (\r\n        <div className={styles[\"popup\"]}>\r\n          <div className={styles[\"popup-inner\"]}>\r\n            <h3>신고하기</h3>\r\n            <p>신고 내용을 입력하세요:</p>\r\n\r\n            <textarea className={styles[\"popup-textarea\"]} />\r\n\r\n            <div className={styles[\"popup-button-container\"]}>\r\n              <button onClick={togglePopup} className={styles[\"popup-close\"]}>닫기</button>\r\n              <button onClick={submitReport} className={styles[\"popup-receive\"]}>제출</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {isAlertOpen && (\r\n        <div className={styles[\"alert-popup\"]}>\r\n          제출이 완료되었습니다.\r\n        </div>\r\n      )}\r\n\r\n      <div className={styles[\"content-input\"]}>\r\n        <textarea\r\n          className={styles[\"textarea\"]}\r\n          value={content}\r\n          onChange={handleContentChange}\r\n          placeholder=\"내용을 입력하세요.\"\r\n        />\r\n      </div>\r\n\r\n      <input\r\n        type=\"file\"\r\n        ref={fileInputRef}\r\n        style={{ display: 'none' }}\r\n        accept=\"image/*\"\r\n        onChange={handleFileChange}\r\n      />\r\n\r\n      <img\r\n        src={isHeartFilled ? filledHeart : heart}\r\n        className={styles[\"app-heart\"]}\r\n        alt=\"heart\"\r\n        onClick={handleHeartClick}\r\n      />\r\n\r\n      <div className={styles[\"content-input2\"]}>\r\n        <textarea\r\n          className={styles[\"textarea2\"]}\r\n          value={commentContent}\r\n          onChange={handleCommentChange}\r\n          placeholder=\"댓글을 입력하세요.\"\r\n        />\r\n      </div>\r\n\r\n      <button onClick={handleAddComment}>\r\n        댓글 달기\r\n      </button>\r\n\r\n      <div className={styles[\"comments-section\"]}>\r\n        {comments.map((comment, index) => (\r\n          <div key={index} className={styles[\"comment-item\"]}>\r\n            <strong>{comment.nickname}:</strong> {comment.content}\r\n\r\n            <div className={styles[\"reply-container\"]}>\r\n              <button className={styles[\"toggle-reply-button\"]} onClick={() => handleToggleReply(index)}>\r\n                {replyVisible[index] ? '대댓글 숨기기' : '대댓글 달기'}\r\n              </button>\r\n            </div>\r\n\r\n            {replyVisible[index] && (\r\n              <div className={styles[\"reply-input\"]}>\r\n                <textarea\r\n                  className={styles[\"textarea_reply\"]}\r\n                  value={replyContents[index] || ''}\r\n                  onChange={(e) => handleReplyChange(index, e)}\r\n                  placeholder=\"대댓글을 입력하세요.\"\r\n                />\r\n                <button onClick={() => handleAddReply(index)}>대댓글 달기</button>\r\n              </div>\r\n            )}\r\n\r\n            {comment.replies.length > 0 && (\r\n              <div className={styles[\"replies-section\"]}>\r\n                {comment.replies.map((reply, replyIndex) => (\r\n                  <div key={replyIndex} className={styles[\"reply-item\"]}>\r\n                    <strong>{reply.nickname}:</strong> {reply.content}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionpostingPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}