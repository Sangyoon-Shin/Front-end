{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asx12\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\react\\\\front\\\\Front-end\\\\src\\\\pages\\\\NoticeBoot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styles from \"./NoticeBoard.module.css\";\nimport main_mascot from '../images/대학 심볼 횃불이.png';\nimport main_bell from '../images/bell.png';\nimport main_message from '../images/message.png';\nimport main_my from '../images/my.png';\nimport arrow from '../images/arrow.png';\nimport scrab from '../images/스크랩횃불이.png';\nimport heart from '../images/heart.png';\nimport filledHeart from '../images/filledheart.png';\nimport bar from '../images/bar.png';\nimport Header from './_.js'; // 상단바 컴포넌트\n// import Header from './Header'; // import the Header component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoticeBoard = () => {\n  _s();\n  const navigate = useNavigate();\n  const fileInputRef = useRef(null);\n  const [content, setContent] = useState('');\n  const [comments, setComments] = useState([]);\n  const [commentContent, setCommentContent] = useState('');\n  const [replyContents, setReplyContents] = useState([]);\n  const [nickname, setNickname] = useState('');\n  const [nicknameCount, setNicknameCount] = useState({\n    int: 0,\n    short: 0,\n    double: 0,\n    char: 0\n  });\n  const [isHeartFilled, setIsHeartFilled] = useState(false);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [replyVisible, setReplyVisible] = useState(''); // 신고 내용 저장\n\n  const currentDate = new Date();\n  const year = currentDate.getFullYear();\n  const month = String(currentDate.getMonth() + 1).padStart(2, '0');\n  const day = String(currentDate.getDate()).padStart(2, '0');\n  const formattedDate = `${year}.${month}.${day}`;\n  const [reportContent, setReportContent] = useState('');\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\n  const handleBackClick = () => navigate(-1);\n\n  // 새로고침 시 로컬 스토리지에서 상태를 불러옵니다.\n  useEffect(() => {\n    const savedComments = localStorage.getItem('comments');\n    const savedHeartStatus = localStorage.getItem('isHeartFilled');\n    const savedNicknameCount = localStorage.getItem('nicknameCount');\n    const savedReplyVisible = localStorage.getItem('replyVisible');\n    if (savedComments) setComments(JSON.parse(savedComments));\n    if (savedHeartStatus) setIsHeartFilled(JSON.parse(savedHeartStatus));\n    if (savedNicknameCount) setNicknameCount(JSON.parse(savedNicknameCount));\n    if (savedReplyVisible) setReplyVisible(JSON.parse(savedReplyVisible));\n  }, []);\n\n  // 댓글 상태가 변경될 때마다 로컬 스토리지에 저장합니다.\n  useEffect(() => {\n    localStorage.setItem('comments', JSON.stringify(comments));\n  }, [comments]);\n\n  // 좋아요 상태가 변경될 때마다 로컬 스토리지에 저장합니다.\n  useEffect(() => {\n    localStorage.setItem('isHeartFilled', JSON.stringify(isHeartFilled));\n  }, [isHeartFilled]);\n\n  // 닉네임 카운트가 변경될 때마다 로컬 스토리지에 저장합니다.\n  useEffect(() => {\n    localStorage.setItem('nicknameCount', JSON.stringify(nicknameCount));\n  }, [nicknameCount]);\n\n  // 대댓글 입력창 가시성 상태가 변경될 때마다 로컬 스토리지에 저장합니다.\n  useEffect(() => {\n    localStorage.setItem('replyVisible', JSON.stringify(replyVisible));\n  }, [replyVisible]);\n  useEffect(() => {\n    if (!nickname) {\n      const types = ['int', 'short', 'double', 'char'];\n      const randomType = types[Math.floor(Math.random() * types.length)];\n      setNickname(randomType);\n    }\n  }, [nickname]);\n  useEffect(() => {\n    const fetchHeartStatus = async () => {\n      try {\n        const response = await fetch('/api/like-status');\n        if (response.ok) {\n          const data = await response.json();\n          setIsHeartFilled(data.liked); // 서버로부터 불러온 좋아요 상태 반영\n        } else {\n          console.error('좋아요 상태 불러오기에 실패했습니다.');\n        }\n      } catch (error) {\n        console.error('좋아요 상태 불러오는 중 오류 발생:', error);\n      }\n    };\n    fetchHeartStatus();\n  }, []);\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const response = await fetch('/api/comments'); // 서버에서 댓글 가져오기\n        if (response.ok) {\n          const data = await response.json();\n          setComments(data.comments); // 서버에서 가져온 댓글을 상태로 설정\n        } else {\n          console.error('댓글 불러오기에 실패했습니다.');\n        }\n      } catch (error) {\n        console.error('댓글 불러오는 중 오류 발생:', error);\n      }\n    };\n    fetchComments();\n  }, []);\n  const handleContentChange = e => {\n    setContent(e.target.value);\n  };\n  const handleCommentChange = e => {\n    setCommentContent(e.target.value);\n  };\n  const handleReplyChange = (index, e) => {\n    const newReplyContents = [...replyContents];\n    newReplyContents[index] = e.target.value;\n    setReplyContents(newReplyContents);\n  };\n  const handleAddComment = () => {\n    if (commentContent.trim() !== '') {\n      const newNicknameCount = {\n        ...nicknameCount\n      };\n      newNicknameCount[nickname] += 1;\n      setNicknameCount(newNicknameCount);\n      setComments([...comments, {\n        nickname: `${nickname}${newNicknameCount[nickname]}`,\n        content: commentContent,\n        replies: []\n      }]);\n      setReplyContents([...replyContents, '']);\n      setCommentContent('');\n    }\n  };\n  // const handleAddComment = async () => {\n  //   if (commentContent.trim() !== '') {\n  //     const newComment = {\n  //       nickname: `${nickname}${nicknameCount[nickname] + 1}`,\n  //       content: commentContent,\n  //       replies: []\n  //     };\n\n  //     try {\n  //       const response = await fetch('/api/comments', {\n  //         method: 'POST',\n  //         headers: {\n  //           'Content-Type': 'application/json',\n  //         },\n  //         body: JSON.stringify(newComment),\n  //       });\n\n  //       if (response.ok) {\n  //         const savedComment = await response.json(); // 서버에서 저장된 댓글 데이터 반환\n  //         setComments([...comments, savedComment]);\n  //         setNicknameCount((prev) => ({ ...prev, [nickname]: prev[nickname] + 1 }));\n  //         setCommentContent('');\n  //       } else {\n  //         console.error('댓글 추가에 실패했습니다.');\n  //       }\n  //     } catch (error) {\n  //       console.error('댓글 추가 중 오류 발생:', error);\n  //     }\n  //   }\n  // };\n\n  const handleAddReply = index => {\n    if (replyContents[index].trim() !== '') {\n      const updatedComments = [...comments];\n      const newNicknameCount = {\n        ...nicknameCount\n      };\n      newNicknameCount[nickname] += 1;\n      setNicknameCount(newNicknameCount);\n      updatedComments[index].replies.push({\n        nickname: `${nickname}${newNicknameCount[nickname]}`,\n        content: replyContents[index]\n      });\n      setComments(updatedComments);\n      const newReplyContents = [...replyContents];\n      newReplyContents[index] = '';\n      setReplyContents(newReplyContents);\n      setReplyVisible(prev => ({\n        ...prev,\n        [index]: false\n      }));\n    }\n  };\n  // const handleAddReply = async (index) => {\n  //   if (replyContents[index].trim() !== '') {\n  //     const newReply = {\n  //       nickname: `${nickname}${nicknameCount[nickname] + 1}`,\n  //       content: replyContents[index],\n  //     };\n\n  //     try {\n  //       const response = await fetch(`/api/comments/${index}/replies`, {\n  //         method: 'POST',\n  //         headers: {\n  //           'Content-Type': 'application/json',\n  //         },\n  //         body: JSON.stringify(newReply),\n  //       });\n\n  //       if (response.ok) {\n  //         const savedReply = await response.json(); // 서버에서 저장된 대댓글 데이터 반환\n  //         const updatedComments = [...comments];\n  //         updatedComments[index].replies.push(savedReply);\n  //         setComments(updatedComments);\n  //         setNicknameCount((prev) => ({ ...prev, [nickname]: prev[nickname] + 1 }));\n\n  //         const newReplyContents = [...replyContents];\n  //         newReplyContents[index] = '';\n  //         setReplyContents(newReplyContents);\n  //         setReplyVisible((prev) => ({ ...prev, [index]: false }));\n  //       } else {\n  //         console.error('대댓글 추가에 실패했습니다.');\n  //       }\n  //     } catch (error) {\n  //       console.error('대댓글 추가 중 오류 발생:', error);\n  //     }\n  //   }\n  // };\n\n  const handleToggleReply = index => {\n    setReplyVisible(prev => ({\n      ...prev,\n      [index]: !prev[index]\n    }));\n  };\n  const handleHeartClick = () => {\n    setIsHeartFilled(!isHeartFilled);\n  };\n\n  // const handleHeartClick = async () => {\n  //   // 현재 좋아요 상태를 토글\n  //   const newHeartStatus = !isHeartFilled;\n  //   setIsHeartFilled(newHeartStatus);\n\n  //   try {\n  //     // 서버에 좋아요 상태 업데이트 요청\n  //     const response = await fetch('/api/like', {\n  //       method: 'POST',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //       },\n  //       body: JSON.stringify({ isHeartFilled: newHeartStatus }), // 좋아요 상태 전달\n  //     });\n\n  //     if (!response.ok) {\n  //       console.error('좋아요 요청에 실패했습니다.');\n  //       // 요청 실패 시 좋아요 상태를 되돌림\n  //       setIsHeartFilled(!newHeartStatus);\n  //     }\n  //   } catch (error) {\n  //     console.error('좋아요 요청 중 오류 발생:', error);\n  //     // 오류 발생 시 좋아요 상태를 되돌림\n  //     setIsHeartFilled(!newHeartStatus);\n  //   }\n  // };\n\n  const togglePopup = () => {\n    setIsPopupOpen(!isPopupOpen);\n  };\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      console.log(\"선택된 파일:\", file);\n    }\n  };\n  const submitReport = async () => {\n    try {\n      const response = await fetch('/api/report', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          content: reportContent\n        })\n      });\n      if (response.ok) {\n        setReportContent('');\n        togglePopup();\n        setIsAlertOpen(true);\n        setTimeout(() => {\n          setIsAlertOpen(false);\n        }, 3000);\n      } else {\n        console.error('신고 제출에 실패했습니다.');\n      }\n    } catch (error) {\n      console.error('신고 제출 중 오류 발생:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"content\"],\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: arrow,\n        className: styles[\"app-arrow\"],\n        alt: \"back_arrow\",\n        onClick: () => navigate(-1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles[\"title-text2\"],\n        children: \"\\uBD80\\uD2B8\\uCEA0\\uD504 \\uAC8C\\uC2DC\\uD310\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: bar,\n        className: styles[\"app-bar\"],\n        alt: \"bar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles[\"title-text3\"],\n        children: \"\\uAC8C\\uC2DC\\uD310 \\uC81C\\uBAA9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"right-section\"],\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: main_message,\n          className: styles[\"app-main_message2\"],\n          alt: \"main_message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: scrab,\n          className: styles[\"app-main_message3\"],\n          alt: \"main_message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles[\"title-text4\"],\n        children: [\"\\uC791\\uC131\\uC77C: \", formattedDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"report\"],\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: togglePopup,\n          className: styles[\"report-button\"],\n          children: \"\\uC2E0\\uACE0\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), isPopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"popup\"],\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"popup-inner\"],\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uC2E0\\uACE0\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uC2E0\\uACE0 \\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: styles[\"popup-textarea\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"popup-button-container\"],\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: togglePopup,\n            className: styles[\"popup-close\"],\n            children: \"\\uB2EB\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: submitReport,\n            className: styles[\"popup-receive\"],\n            children: \"\\uC81C\\uCD9C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 9\n    }, this), isAlertOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"alert-popup\"],\n      children: \"\\uC81C\\uCD9C\\uC774 \\uC644\\uB8CC\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"content-input\"],\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: styles[\"textarea\"],\n        value: content,\n        onChange: handleContentChange,\n        placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: fileInputRef,\n      style: {\n        display: 'none'\n      },\n      accept: \"image/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"heart\"],\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: isHeartFilled ? filledHeart : heart,\n        className: styles[\"app-heart\"],\n        alt: \"heart\",\n        onClick: handleHeartClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"content-input2\"],\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: styles[\"textarea2\"],\n        value: commentContent,\n        onChange: handleCommentChange,\n        placeholder: \"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"reply-button\"],\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddComment,\n        children: \"\\uB313\\uAE00 \\uB2EC\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"comments-section\"],\n      children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"comment-item\"],\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [comment.nickname, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }, this), \" \", comment.content, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"reply-container\"],\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles[\"toggle-reply-button\"],\n            onClick: () => handleToggleReply(index),\n            children: replyVisible[index] ? '대댓글 숨기기' : '대댓글 달기'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this), replyVisible[index] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"reply-input\"],\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: styles[\"textarea_reply\"],\n            value: replyContents[index] || '',\n            onChange: e => handleReplyChange(index, e),\n            placeholder: \"\\uB300\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddReply(index),\n            children: \"\\uB300\\uB313\\uAE00 \\uB2EC\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 15\n        }, this), comment.replies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"replies-section\"],\n          children: comment.replies.map((reply, replyIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"reply-item\"],\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [reply.nickname, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 21\n            }, this), \" \", reply.content]\n          }, replyIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 298,\n    columnNumber: 5\n  }, this);\n};\n_s(NoticeBoard, \"od6izqsWAOmXASu44YoYZIk+m3M=\", false, function () {\n  return [useNavigate];\n});\n_c = NoticeBoard;\nexport default NoticeBoard;\nvar _c;\n$RefreshReg$(_c, \"NoticeBoard\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigate","styles","main_mascot","main_bell","main_message","main_my","arrow","scrab","heart","filledHeart","bar","Header","jsxDEV","_jsxDEV","NoticeBoard","_s","navigate","fileInputRef","content","setContent","comments","setComments","commentContent","setCommentContent","replyContents","setReplyContents","nickname","setNickname","nicknameCount","setNicknameCount","int","short","double","char","isHeartFilled","setIsHeartFilled","isPopupOpen","setIsPopupOpen","replyVisible","setReplyVisible","currentDate","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","formattedDate","reportContent","setReportContent","isAlertOpen","setIsAlertOpen","handleBackClick","savedComments","localStorage","getItem","savedHeartStatus","savedNicknameCount","savedReplyVisible","JSON","parse","setItem","stringify","types","randomType","Math","floor","random","length","fetchHeartStatus","response","fetch","ok","data","json","liked","console","error","fetchComments","handleContentChange","e","target","value","handleCommentChange","handleReplyChange","index","newReplyContents","handleAddComment","trim","newNicknameCount","replies","handleAddReply","updatedComments","push","prev","handleToggleReply","handleHeartClick","togglePopup","handleFileChange","file","files","log","submitReport","method","headers","body","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","onClick","onChange","placeholder","type","ref","style","display","accept","map","comment","reply","replyIndex","_c","$RefreshReg$"],"sources":["C:/Users/asx12/OneDrive/바탕 화면/react/front/Front-end/src/pages/NoticeBoot.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styles from \"./NoticeBoard.module.css\";\nimport main_mascot from '../images/대학 심볼 횃불이.png';\nimport main_bell from '../images/bell.png';\nimport main_message from '../images/message.png';\nimport main_my from '../images/my.png';\nimport arrow from '../images/arrow.png';\nimport scrab from '../images/스크랩횃불이.png';\nimport heart from '../images/heart.png';\nimport filledHeart from '../images/filledheart.png';\nimport bar from '../images/bar.png';\nimport Header from './_.js';  // 상단바 컴포넌트\n// import Header from './Header'; // import the Header component\n\nconst NoticeBoard = () => {\n  const navigate = useNavigate();\n  const fileInputRef = useRef(null);\n\n  const [content, setContent] = useState('');\n  const [comments, setComments] = useState([]);\n  const [commentContent, setCommentContent] = useState('');\n  const [replyContents, setReplyContents] = useState([]);\n  const [nickname, setNickname] = useState('');\n  const [nicknameCount, setNicknameCount] = useState({ int: 0, short: 0, double: 0, char: 0 });\n  const [isHeartFilled, setIsHeartFilled] = useState(false);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [replyVisible, setReplyVisible] = useState(''); // 신고 내용 저장\n\n  const currentDate = new Date();\n  const year = currentDate.getFullYear();\n  const month = String(currentDate.getMonth() + 1).padStart(2, '0');\n  const day = String(currentDate.getDate()).padStart(2, '0');\n  const formattedDate = `${year}.${month}.${day}`;\n  const [reportContent, setReportContent] = useState('');\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\n  const handleBackClick = () => navigate(-1);\n\n  // 새로고침 시 로컬 스토리지에서 상태를 불러옵니다.\n  useEffect(() => {\n    const savedComments = localStorage.getItem('comments');\n    const savedHeartStatus = localStorage.getItem('isHeartFilled');\n    const savedNicknameCount = localStorage.getItem('nicknameCount');\n    const savedReplyVisible = localStorage.getItem('replyVisible');\n\n    if (savedComments) setComments(JSON.parse(savedComments));\n    if (savedHeartStatus) setIsHeartFilled(JSON.parse(savedHeartStatus));\n    if (savedNicknameCount) setNicknameCount(JSON.parse(savedNicknameCount));\n    if (savedReplyVisible) setReplyVisible(JSON.parse(savedReplyVisible));\n  }, []);\n\n  // 댓글 상태가 변경될 때마다 로컬 스토리지에 저장합니다.\n  useEffect(() => {\n    localStorage.setItem('comments', JSON.stringify(comments));\n  }, [comments]);\n\n  // 좋아요 상태가 변경될 때마다 로컬 스토리지에 저장합니다.\n  useEffect(() => {\n    localStorage.setItem('isHeartFilled', JSON.stringify(isHeartFilled));\n  }, [isHeartFilled]);\n\n  // 닉네임 카운트가 변경될 때마다 로컬 스토리지에 저장합니다.\n  useEffect(() => {\n    localStorage.setItem('nicknameCount', JSON.stringify(nicknameCount));\n  }, [nicknameCount]);\n\n  // 대댓글 입력창 가시성 상태가 변경될 때마다 로컬 스토리지에 저장합니다.\n  useEffect(() => {\n    localStorage.setItem('replyVisible', JSON.stringify(replyVisible));\n  }, [replyVisible]);\n\n  useEffect(() => {\n    if (!nickname) {\n      const types = ['int', 'short', 'double', 'char'];\n      const randomType = types[Math.floor(Math.random() * types.length)];\n      setNickname(randomType);\n    }\n  }, [nickname]);\n\n  useEffect(() => {\n    const fetchHeartStatus = async () => {\n      try {\n        const response = await fetch('/api/like-status');\n        if (response.ok) {\n          const data = await response.json();\n          setIsHeartFilled(data.liked); // 서버로부터 불러온 좋아요 상태 반영\n        } else {\n          console.error('좋아요 상태 불러오기에 실패했습니다.');\n        }\n      } catch (error) {\n        console.error('좋아요 상태 불러오는 중 오류 발생:', error);\n      }\n    };\n\n    fetchHeartStatus();\n  }, []);\n\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const response = await fetch('/api/comments'); // 서버에서 댓글 가져오기\n        if (response.ok) {\n          const data = await response.json();\n          setComments(data.comments); // 서버에서 가져온 댓글을 상태로 설정\n        } else {\n          console.error('댓글 불러오기에 실패했습니다.');\n        }\n      } catch (error) {\n        console.error('댓글 불러오는 중 오류 발생:', error);\n      }\n    };\n\n    fetchComments();\n  }, []);\n\n  const handleContentChange = (e) => {\n    setContent(e.target.value);\n  };\n\n  const handleCommentChange = (e) => {\n    setCommentContent(e.target.value);\n  };\n\n  const handleReplyChange = (index, e) => {\n    const newReplyContents = [...replyContents];\n    newReplyContents[index] = e.target.value;\n    setReplyContents(newReplyContents);\n  };\n\n  const handleAddComment = () => {\n    if (commentContent.trim() !== '') {\n      const newNicknameCount = { ...nicknameCount };\n      newNicknameCount[nickname] += 1;\n      setNicknameCount(newNicknameCount);\n\n      setComments([...comments, { nickname: `${nickname}${newNicknameCount[nickname]}`, content: commentContent, replies: [] }]);\n      setReplyContents([...replyContents, '']);\n      setCommentContent('');\n    }\n  };\n  // const handleAddComment = async () => {\n  //   if (commentContent.trim() !== '') {\n  //     const newComment = {\n  //       nickname: `${nickname}${nicknameCount[nickname] + 1}`,\n  //       content: commentContent,\n  //       replies: []\n  //     };\n\n  //     try {\n  //       const response = await fetch('/api/comments', {\n  //         method: 'POST',\n  //         headers: {\n  //           'Content-Type': 'application/json',\n  //         },\n  //         body: JSON.stringify(newComment),\n  //       });\n\n  //       if (response.ok) {\n  //         const savedComment = await response.json(); // 서버에서 저장된 댓글 데이터 반환\n  //         setComments([...comments, savedComment]);\n  //         setNicknameCount((prev) => ({ ...prev, [nickname]: prev[nickname] + 1 }));\n  //         setCommentContent('');\n  //       } else {\n  //         console.error('댓글 추가에 실패했습니다.');\n  //       }\n  //     } catch (error) {\n  //       console.error('댓글 추가 중 오류 발생:', error);\n  //     }\n  //   }\n  // };\n\n  const handleAddReply = (index) => {\n    if (replyContents[index].trim() !== '') {\n      const updatedComments = [...comments];\n      const newNicknameCount = { ...nicknameCount };\n      newNicknameCount[nickname] += 1;\n      setNicknameCount(newNicknameCount);\n\n      updatedComments[index].replies.push({ nickname: `${nickname}${newNicknameCount[nickname]}`, content: replyContents[index] });\n      setComments(updatedComments);\n\n      const newReplyContents = [...replyContents];\n      newReplyContents[index] = '';\n      setReplyContents(newReplyContents);\n      setReplyVisible((prev) => ({ ...prev, [index]: false }));\n    }\n  };\n  // const handleAddReply = async (index) => {\n  //   if (replyContents[index].trim() !== '') {\n  //     const newReply = {\n  //       nickname: `${nickname}${nicknameCount[nickname] + 1}`,\n  //       content: replyContents[index],\n  //     };\n\n  //     try {\n  //       const response = await fetch(`/api/comments/${index}/replies`, {\n  //         method: 'POST',\n  //         headers: {\n  //           'Content-Type': 'application/json',\n  //         },\n  //         body: JSON.stringify(newReply),\n  //       });\n\n  //       if (response.ok) {\n  //         const savedReply = await response.json(); // 서버에서 저장된 대댓글 데이터 반환\n  //         const updatedComments = [...comments];\n  //         updatedComments[index].replies.push(savedReply);\n  //         setComments(updatedComments);\n  //         setNicknameCount((prev) => ({ ...prev, [nickname]: prev[nickname] + 1 }));\n\n  //         const newReplyContents = [...replyContents];\n  //         newReplyContents[index] = '';\n  //         setReplyContents(newReplyContents);\n  //         setReplyVisible((prev) => ({ ...prev, [index]: false }));\n  //       } else {\n  //         console.error('대댓글 추가에 실패했습니다.');\n  //       }\n  //     } catch (error) {\n  //       console.error('대댓글 추가 중 오류 발생:', error);\n  //     }\n  //   }\n  // };\n\n\n  const handleToggleReply = (index) => {\n    setReplyVisible((prev) => ({ ...prev, [index]: !prev[index] }));\n  };\n\n\n  const handleHeartClick = () => {\n    setIsHeartFilled(!isHeartFilled);\n  };\n\n  // const handleHeartClick = async () => {\n  //   // 현재 좋아요 상태를 토글\n  //   const newHeartStatus = !isHeartFilled;\n  //   setIsHeartFilled(newHeartStatus);\n\n  //   try {\n  //     // 서버에 좋아요 상태 업데이트 요청\n  //     const response = await fetch('/api/like', {\n  //       method: 'POST',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //       },\n  //       body: JSON.stringify({ isHeartFilled: newHeartStatus }), // 좋아요 상태 전달\n  //     });\n\n  //     if (!response.ok) {\n  //       console.error('좋아요 요청에 실패했습니다.');\n  //       // 요청 실패 시 좋아요 상태를 되돌림\n  //       setIsHeartFilled(!newHeartStatus);\n  //     }\n  //   } catch (error) {\n  //     console.error('좋아요 요청 중 오류 발생:', error);\n  //     // 오류 발생 시 좋아요 상태를 되돌림\n  //     setIsHeartFilled(!newHeartStatus);\n  //   }\n  // };\n\n  const togglePopup = () => {\n    setIsPopupOpen(!isPopupOpen);\n  };\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      console.log(\"선택된 파일:\", file);\n    }\n  };\n  const submitReport = async () => {\n    try {\n      const response = await fetch('/api/report', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ content: reportContent }),\n      });\n\n      if (response.ok) {\n        setReportContent('');\n        togglePopup();\n        setIsAlertOpen(true);\n\n        setTimeout(() => {\n          setIsAlertOpen(false);\n        }, 3000);\n      } else {\n        console.error('신고 제출에 실패했습니다.');\n      }\n    } catch (error) {\n      console.error('신고 제출 중 오류 발생:', error);\n    }\n  };\n\n  return (\n    <div>\n      <Header />\n      <div className={styles[\"content\"]}>\n\n        <img src={arrow} className={styles[\"app-arrow\"]} alt=\"back_arrow\" onClick={() => navigate(-1)} />\n        <h1 className={styles[\"title-text2\"]}>부트캠프 게시판</h1>\n\n        <img src={bar} className={styles[\"app-bar\"]} alt=\"bar\" />\n\n        <h1 className={styles[\"title-text3\"]}>게시판 제목</h1>\n\n        <div className={styles[\"right-section\"]}>\n          <img src={main_message} className={styles[\"app-main_message2\"]} alt=\"main_message\" />\n          <img src={scrab} className={styles[\"app-main_message3\"]} alt=\"main_message\" />\n        </div>\n\n        <h2 className={styles[\"title-text4\"]}>작성일: {formattedDate}</h2>\n\n        <div className={styles[\"report\"]}>\n          <button onClick={togglePopup} className={styles[\"report-button\"]}>\n          신고하기\n          </button>\n        </div>\n        \n      </div>\n      {isPopupOpen && (\n        <div className={styles[\"popup\"]}>\n          <div className={styles[\"popup-inner\"]}>\n            <h3>신고하기</h3>\n            <p>신고 내용을 입력하세요:</p>\n\n            <textarea className={styles[\"popup-textarea\"]} />\n\n            <div className={styles[\"popup-button-container\"]}>\n              <button onClick={togglePopup} className={styles[\"popup-close\"]}>닫기</button>\n              <button onClick={submitReport} className={styles[\"popup-receive\"]}>제출</button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {isAlertOpen && (\n        <div className={styles[\"alert-popup\"]}>\n          제출이 완료되었습니다.\n        </div>\n      )}\n\n      <div className={styles[\"content-input\"]}>\n        <textarea\n          className={styles[\"textarea\"]}\n          value={content}\n          onChange={handleContentChange}\n          placeholder=\"내용을 입력하세요.\"\n        />\n      </div>\n\n      <input\n        type=\"file\"\n        ref={fileInputRef}\n        style={{ display: 'none' }}\n        accept=\"image/*\"\n        onChange={handleFileChange}\n      />\n\n      <div className={styles[\"heart\"]}>\n      <img\n        src={isHeartFilled ? filledHeart : heart}\n        className={styles[\"app-heart\"]}\n        alt=\"heart\"\n        onClick={handleHeartClick}\n      />\n      </div>\n\n\n      <div className={styles[\"content-input2\"]}>\n        <textarea\n          className={styles[\"textarea2\"]}\n          value={commentContent}\n          onChange={handleCommentChange}\n          placeholder=\"댓글을 입력하세요.\"\n        />\n      </div>\n\n\n\n      <div className={styles[\"reply-button\"]}>\n        <button onClick={handleAddComment}>\n          댓글 달기\n        </button>\n      </div>\n\n      <div className={styles[\"comments-section\"]}>\n        {comments.map((comment, index) => (\n          <div key={index} className={styles[\"comment-item\"]}>\n            <strong>{comment.nickname}:</strong> {comment.content}\n\n            <div className={styles[\"reply-container\"]}>\n              <button className={styles[\"toggle-reply-button\"]} onClick={() => handleToggleReply(index)}>\n                {replyVisible[index] ? '대댓글 숨기기' : '대댓글 달기'}\n              </button>\n            </div>\n\n            {replyVisible[index] && (\n              <div className={styles[\"reply-input\"]}>\n                <textarea\n                  className={styles[\"textarea_reply\"]}\n                  value={replyContents[index] || ''}\n                  onChange={(e) => handleReplyChange(index, e)}\n                  placeholder=\"대댓글을 입력하세요.\"\n                />\n                <button onClick={() => handleAddReply(index)}>대댓글 달기</button>\n              </div>\n            )}\n\n            {comment.replies.length > 0 && (\n              <div className={styles[\"replies-section\"]}>\n                {comment.replies.map((reply, replyIndex) => (\n                  <div key={replyIndex} className={styles[\"reply-item\"]}>\n                    <strong>{reply.nickname}:</strong> {reply.content}\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n\n    </div>\n  );\n};\n\nexport default NoticeBoard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,WAAW,MAAM,yBAAyB;AACjD,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,YAAY,MAAM,uBAAuB;AAChD,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,KAAK,MAAM,sBAAsB;AACxC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,MAAM,MAAM,QAAQ,CAAC,CAAE;AAC9B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAC9B,MAAMiB,YAAY,GAAGnB,MAAM,CAAC,IAAI,CAAC;EAEjC,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACyB,cAAc,EAAEC,iBAAiB,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC2B,aAAa,EAAEC,gBAAgB,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC6B,QAAQ,EAAEC,WAAW,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC+B,aAAa,EAAEC,gBAAgB,CAAC,GAAGhC,QAAQ,CAAC;IAAEiC,GAAG,EAAE,CAAC;IAAEC,KAAK,EAAE,CAAC;IAAEC,MAAM,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAE,CAAC,CAAC;EAC5F,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGtC,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACuC,WAAW,EAAEC,cAAc,CAAC,GAAGxC,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACyC,YAAY,EAAEC,eAAe,CAAC,GAAG1C,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEtD,MAAM2C,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC;EAC9B,MAAMC,IAAI,GAAGF,WAAW,CAACG,WAAW,CAAC,CAAC;EACtC,MAAMC,KAAK,GAAGC,MAAM,CAACL,WAAW,CAACM,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACjE,MAAMC,GAAG,GAAGH,MAAM,CAACL,WAAW,CAACS,OAAO,CAAC,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAC1D,MAAMG,aAAa,GAAG,GAAGR,IAAI,IAAIE,KAAK,IAAII,GAAG,EAAE;EAC/C,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGvD,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACwD,WAAW,EAAEC,cAAc,CAAC,GAAGzD,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM0D,eAAe,GAAGA,CAAA,KAAMvC,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAE1C;EACAjB,SAAS,CAAC,MAAM;IACd,MAAMyD,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACtD,MAAMC,gBAAgB,GAAGF,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;IAC9D,MAAME,kBAAkB,GAAGH,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;IAChE,MAAMG,iBAAiB,GAAGJ,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAE9D,IAAIF,aAAa,EAAEnC,WAAW,CAACyC,IAAI,CAACC,KAAK,CAACP,aAAa,CAAC,CAAC;IACzD,IAAIG,gBAAgB,EAAExB,gBAAgB,CAAC2B,IAAI,CAACC,KAAK,CAACJ,gBAAgB,CAAC,CAAC;IACpE,IAAIC,kBAAkB,EAAE/B,gBAAgB,CAACiC,IAAI,CAACC,KAAK,CAACH,kBAAkB,CAAC,CAAC;IACxE,IAAIC,iBAAiB,EAAEtB,eAAe,CAACuB,IAAI,CAACC,KAAK,CAACF,iBAAiB,CAAC,CAAC;EACvE,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA9D,SAAS,CAAC,MAAM;IACd0D,YAAY,CAACO,OAAO,CAAC,UAAU,EAAEF,IAAI,CAACG,SAAS,CAAC7C,QAAQ,CAAC,CAAC;EAC5D,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;;EAEd;EACArB,SAAS,CAAC,MAAM;IACd0D,YAAY,CAACO,OAAO,CAAC,eAAe,EAAEF,IAAI,CAACG,SAAS,CAAC/B,aAAa,CAAC,CAAC;EACtE,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;;EAEnB;EACAnC,SAAS,CAAC,MAAM;IACd0D,YAAY,CAACO,OAAO,CAAC,eAAe,EAAEF,IAAI,CAACG,SAAS,CAACrC,aAAa,CAAC,CAAC;EACtE,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;;EAEnB;EACA7B,SAAS,CAAC,MAAM;IACd0D,YAAY,CAACO,OAAO,CAAC,cAAc,EAAEF,IAAI,CAACG,SAAS,CAAC3B,YAAY,CAAC,CAAC;EACpE,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElBvC,SAAS,CAAC,MAAM;IACd,IAAI,CAAC2B,QAAQ,EAAE;MACb,MAAMwC,KAAK,GAAG,CAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAC;MAChD,MAAMC,UAAU,GAAGD,KAAK,CAACE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGJ,KAAK,CAACK,MAAM,CAAC,CAAC;MAClE5C,WAAW,CAACwC,UAAU,CAAC;IACzB;EACF,CAAC,EAAE,CAACzC,QAAQ,CAAC,CAAC;EAEd3B,SAAS,CAAC,MAAM;IACd,MAAMyE,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkB,CAAC;QAChD,IAAID,QAAQ,CAACE,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UAClC1C,gBAAgB,CAACyC,IAAI,CAACE,KAAK,CAAC,CAAC,CAAC;QAChC,CAAC,MAAM;UACLC,OAAO,CAACC,KAAK,CAAC,sBAAsB,CAAC;QACvC;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDR,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAENzE,SAAS,CAAC,MAAM;IACd,MAAMkF,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC;QAC/C,IAAID,QAAQ,CAACE,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UAClCxD,WAAW,CAACuD,IAAI,CAACxD,QAAQ,CAAC,CAAC,CAAC;QAC9B,CAAC,MAAM;UACL2D,OAAO,CAACC,KAAK,CAAC,kBAAkB,CAAC;QACnC;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MAC1C;IACF,CAAC;IAEDC,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,mBAAmB,GAAIC,CAAC,IAAK;IACjChE,UAAU,CAACgE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMC,mBAAmB,GAAIH,CAAC,IAAK;IACjC5D,iBAAiB,CAAC4D,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAME,iBAAiB,GAAGA,CAACC,KAAK,EAAEL,CAAC,KAAK;IACtC,MAAMM,gBAAgB,GAAG,CAAC,GAAGjE,aAAa,CAAC;IAC3CiE,gBAAgB,CAACD,KAAK,CAAC,GAAGL,CAAC,CAACC,MAAM,CAACC,KAAK;IACxC5D,gBAAgB,CAACgE,gBAAgB,CAAC;EACpC,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIpE,cAAc,CAACqE,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAChC,MAAMC,gBAAgB,GAAG;QAAE,GAAGhE;MAAc,CAAC;MAC7CgE,gBAAgB,CAAClE,QAAQ,CAAC,IAAI,CAAC;MAC/BG,gBAAgB,CAAC+D,gBAAgB,CAAC;MAElCvE,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;QAAEM,QAAQ,EAAE,GAAGA,QAAQ,GAAGkE,gBAAgB,CAAClE,QAAQ,CAAC,EAAE;QAAER,OAAO,EAAEI,cAAc;QAAEuE,OAAO,EAAE;MAAG,CAAC,CAAC,CAAC;MAC1HpE,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAE,EAAE,CAAC,CAAC;MACxCD,iBAAiB,CAAC,EAAE,CAAC;IACvB;EACF,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMuE,cAAc,GAAIN,KAAK,IAAK;IAChC,IAAIhE,aAAa,CAACgE,KAAK,CAAC,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACtC,MAAMI,eAAe,GAAG,CAAC,GAAG3E,QAAQ,CAAC;MACrC,MAAMwE,gBAAgB,GAAG;QAAE,GAAGhE;MAAc,CAAC;MAC7CgE,gBAAgB,CAAClE,QAAQ,CAAC,IAAI,CAAC;MAC/BG,gBAAgB,CAAC+D,gBAAgB,CAAC;MAElCG,eAAe,CAACP,KAAK,CAAC,CAACK,OAAO,CAACG,IAAI,CAAC;QAAEtE,QAAQ,EAAE,GAAGA,QAAQ,GAAGkE,gBAAgB,CAAClE,QAAQ,CAAC,EAAE;QAAER,OAAO,EAAEM,aAAa,CAACgE,KAAK;MAAE,CAAC,CAAC;MAC5HnE,WAAW,CAAC0E,eAAe,CAAC;MAE5B,MAAMN,gBAAgB,GAAG,CAAC,GAAGjE,aAAa,CAAC;MAC3CiE,gBAAgB,CAACD,KAAK,CAAC,GAAG,EAAE;MAC5B/D,gBAAgB,CAACgE,gBAAgB,CAAC;MAClClD,eAAe,CAAE0D,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAE,CAACT,KAAK,GAAG;MAAM,CAAC,CAAC,CAAC;IAC1D;EACF,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA,MAAMU,iBAAiB,GAAIV,KAAK,IAAK;IACnCjD,eAAe,CAAE0D,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACT,KAAK,GAAG,CAACS,IAAI,CAACT,KAAK;IAAE,CAAC,CAAC,CAAC;EACjE,CAAC;EAGD,MAAMW,gBAAgB,GAAGA,CAAA,KAAM;IAC7BhE,gBAAgB,CAAC,CAACD,aAAa,CAAC;EAClC,CAAC;;EAED;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMkE,WAAW,GAAGA,CAAA,KAAM;IACxB/D,cAAc,CAAC,CAACD,WAAW,CAAC;EAC9B,CAAC;EAED,MAAMiE,gBAAgB,GAAIlB,CAAC,IAAK;IAC9B,MAAMmB,IAAI,GAAGnB,CAAC,CAACC,MAAM,CAACmB,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAID,IAAI,EAAE;MACRvB,OAAO,CAACyB,GAAG,CAAC,SAAS,EAAEF,IAAI,CAAC;IAC9B;EACF,CAAC;EACD,MAAMG,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMhC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,EAAE;QAC1CgC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAE9C,IAAI,CAACG,SAAS,CAAC;UAAE/C,OAAO,EAAEiC;QAAc,CAAC;MACjD,CAAC,CAAC;MAEF,IAAIsB,QAAQ,CAACE,EAAE,EAAE;QACfvB,gBAAgB,CAAC,EAAE,CAAC;QACpBgD,WAAW,CAAC,CAAC;QACb9C,cAAc,CAAC,IAAI,CAAC;QAEpBuD,UAAU,CAAC,MAAM;UACfvD,cAAc,CAAC,KAAK,CAAC;QACvB,CAAC,EAAE,IAAI,CAAC;MACV,CAAC,MAAM;QACLyB,OAAO,CAACC,KAAK,CAAC,gBAAgB,CAAC;MACjC;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACxC;EACF,CAAC;EAED,oBACEnE,OAAA;IAAAiG,QAAA,gBACEjG,OAAA,CAACF,MAAM;MAAAoG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVrG,OAAA;MAAKsG,SAAS,EAAElH,MAAM,CAAC,SAAS,CAAE;MAAA6G,QAAA,gBAEhCjG,OAAA;QAAKuG,GAAG,EAAE9G,KAAM;QAAC6G,SAAS,EAAElH,MAAM,CAAC,WAAW,CAAE;QAACoH,GAAG,EAAC,YAAY;QAACC,OAAO,EAAEA,CAAA,KAAMtG,QAAQ,CAAC,CAAC,CAAC;MAAE;QAAA+F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjGrG,OAAA;QAAIsG,SAAS,EAAElH,MAAM,CAAC,aAAa,CAAE;QAAA6G,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEnDrG,OAAA;QAAKuG,GAAG,EAAE1G,GAAI;QAACyG,SAAS,EAAElH,MAAM,CAAC,SAAS,CAAE;QAACoH,GAAG,EAAC;MAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEzDrG,OAAA;QAAIsG,SAAS,EAAElH,MAAM,CAAC,aAAa,CAAE;QAAA6G,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEjDrG,OAAA;QAAKsG,SAAS,EAAElH,MAAM,CAAC,eAAe,CAAE;QAAA6G,QAAA,gBACtCjG,OAAA;UAAKuG,GAAG,EAAEhH,YAAa;UAAC+G,SAAS,EAAElH,MAAM,CAAC,mBAAmB,CAAE;UAACoH,GAAG,EAAC;QAAc;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACrFrG,OAAA;UAAKuG,GAAG,EAAE7G,KAAM;UAAC4G,SAAS,EAAElH,MAAM,CAAC,mBAAmB,CAAE;UAACoH,GAAG,EAAC;QAAc;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3E,CAAC,eAENrG,OAAA;QAAIsG,SAAS,EAAElH,MAAM,CAAC,aAAa,CAAE;QAAA6G,QAAA,GAAC,sBAAK,EAAC5D,aAAa;MAAA;QAAA6D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAE/DrG,OAAA;QAAKsG,SAAS,EAAElH,MAAM,CAAC,QAAQ,CAAE;QAAA6G,QAAA,eAC/BjG,OAAA;UAAQyG,OAAO,EAAElB,WAAY;UAACe,SAAS,EAAElH,MAAM,CAAC,eAAe,CAAE;UAAA6G,QAAA,EAAC;QAElE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEH,CAAC,EACL9E,WAAW,iBACVvB,OAAA;MAAKsG,SAAS,EAAElH,MAAM,CAAC,OAAO,CAAE;MAAA6G,QAAA,eAC9BjG,OAAA;QAAKsG,SAAS,EAAElH,MAAM,CAAC,aAAa,CAAE;QAAA6G,QAAA,gBACpCjG,OAAA;UAAAiG,QAAA,EAAI;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACbrG,OAAA;UAAAiG,QAAA,EAAG;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAEpBrG,OAAA;UAAUsG,SAAS,EAAElH,MAAM,CAAC,gBAAgB;QAAE;UAAA8G,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAEjDrG,OAAA;UAAKsG,SAAS,EAAElH,MAAM,CAAC,wBAAwB,CAAE;UAAA6G,QAAA,gBAC/CjG,OAAA;YAAQyG,OAAO,EAAElB,WAAY;YAACe,SAAS,EAAElH,MAAM,CAAC,aAAa,CAAE;YAAA6G,QAAA,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC3ErG,OAAA;YAAQyG,OAAO,EAAEb,YAAa;YAACU,SAAS,EAAElH,MAAM,CAAC,eAAe,CAAE;YAAA6G,QAAA,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3E,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAEA7D,WAAW,iBACVxC,OAAA;MAAKsG,SAAS,EAAElH,MAAM,CAAC,aAAa,CAAE;MAAA6G,QAAA,EAAC;IAEvC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACN,eAEDrG,OAAA;MAAKsG,SAAS,EAAElH,MAAM,CAAC,eAAe,CAAE;MAAA6G,QAAA,eACtCjG,OAAA;QACEsG,SAAS,EAAElH,MAAM,CAAC,UAAU,CAAE;QAC9BoF,KAAK,EAAEnE,OAAQ;QACfqG,QAAQ,EAAErC,mBAAoB;QAC9BsC,WAAW,EAAC;MAAY;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENrG,OAAA;MACE4G,IAAI,EAAC,MAAM;MACXC,GAAG,EAAEzG,YAAa;MAClB0G,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAC3BC,MAAM,EAAC,SAAS;MAChBN,QAAQ,EAAElB;IAAiB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eAEFrG,OAAA;MAAKsG,SAAS,EAAElH,MAAM,CAAC,OAAO,CAAE;MAAA6G,QAAA,eAChCjG,OAAA;QACEuG,GAAG,EAAElF,aAAa,GAAGzB,WAAW,GAAGD,KAAM;QACzC2G,SAAS,EAAElH,MAAM,CAAC,WAAW,CAAE;QAC/BoH,GAAG,EAAC,OAAO;QACXC,OAAO,EAAEnB;MAAiB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eAGNrG,OAAA;MAAKsG,SAAS,EAAElH,MAAM,CAAC,gBAAgB,CAAE;MAAA6G,QAAA,eACvCjG,OAAA;QACEsG,SAAS,EAAElH,MAAM,CAAC,WAAW,CAAE;QAC/BoF,KAAK,EAAE/D,cAAe;QACtBiG,QAAQ,EAAEjC,mBAAoB;QAC9BkC,WAAW,EAAC;MAAY;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAINrG,OAAA;MAAKsG,SAAS,EAAElH,MAAM,CAAC,cAAc,CAAE;MAAA6G,QAAA,eACrCjG,OAAA;QAAQyG,OAAO,EAAE5B,gBAAiB;QAAAoB,QAAA,EAAC;MAEnC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAENrG,OAAA;MAAKsG,SAAS,EAAElH,MAAM,CAAC,kBAAkB,CAAE;MAAA6G,QAAA,EACxC1F,QAAQ,CAAC0G,GAAG,CAAC,CAACC,OAAO,EAAEvC,KAAK,kBAC3B3E,OAAA;QAAiBsG,SAAS,EAAElH,MAAM,CAAC,cAAc,CAAE;QAAA6G,QAAA,gBACjDjG,OAAA;UAAAiG,QAAA,GAASiB,OAAO,CAACrG,QAAQ,EAAC,GAAC;QAAA;UAAAqF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACa,OAAO,CAAC7G,OAAO,eAErDL,OAAA;UAAKsG,SAAS,EAAElH,MAAM,CAAC,iBAAiB,CAAE;UAAA6G,QAAA,eACxCjG,OAAA;YAAQsG,SAAS,EAAElH,MAAM,CAAC,qBAAqB,CAAE;YAACqH,OAAO,EAAEA,CAAA,KAAMpB,iBAAiB,CAACV,KAAK,CAAE;YAAAsB,QAAA,EACvFxE,YAAY,CAACkD,KAAK,CAAC,GAAG,SAAS,GAAG;UAAQ;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,EAEL5E,YAAY,CAACkD,KAAK,CAAC,iBAClB3E,OAAA;UAAKsG,SAAS,EAAElH,MAAM,CAAC,aAAa,CAAE;UAAA6G,QAAA,gBACpCjG,OAAA;YACEsG,SAAS,EAAElH,MAAM,CAAC,gBAAgB,CAAE;YACpCoF,KAAK,EAAE7D,aAAa,CAACgE,KAAK,CAAC,IAAI,EAAG;YAClC+B,QAAQ,EAAGpC,CAAC,IAAKI,iBAAiB,CAACC,KAAK,EAAEL,CAAC,CAAE;YAC7CqC,WAAW,EAAC;UAAa;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B,CAAC,eACFrG,OAAA;YAAQyG,OAAO,EAAEA,CAAA,KAAMxB,cAAc,CAACN,KAAK,CAAE;YAAAsB,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1D,CACN,EAEAa,OAAO,CAAClC,OAAO,CAACtB,MAAM,GAAG,CAAC,iBACzB1D,OAAA;UAAKsG,SAAS,EAAElH,MAAM,CAAC,iBAAiB,CAAE;UAAA6G,QAAA,EACvCiB,OAAO,CAAClC,OAAO,CAACiC,GAAG,CAAC,CAACE,KAAK,EAAEC,UAAU,kBACrCpH,OAAA;YAAsBsG,SAAS,EAAElH,MAAM,CAAC,YAAY,CAAE;YAAA6G,QAAA,gBACpDjG,OAAA;cAAAiG,QAAA,GAASkB,KAAK,CAACtG,QAAQ,EAAC,GAAC;YAAA;cAAAqF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACc,KAAK,CAAC9G,OAAO;UAAA,GADzC+G,UAAU;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEf,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CACN;MAAA,GA7BO1B,KAAK;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA8BV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEV,CAAC;AAACnG,EAAA,CA3ZID,WAAW;EAAA,QACEd,WAAW;AAAA;AAAAkI,EAAA,GADxBpH,WAAW;AA6ZjB,eAAeA,WAAW;AAAC,IAAAoH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}