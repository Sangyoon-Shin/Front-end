{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asx12\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\react\\\\front\\\\Front-end\\\\src\\\\pages\\\\FreeboardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useMediaQuery } from 'react-responsive'; // 반응형 페이지 만들기 위함\nimport Header from './_.js'; // 상단바 컴포넌트\nimport styles from './FreeboardPage.module.css'; // BoardPage용 CSS 파일\nimport CommunicationRoom_goBack from '../images/왼쪽 나가기 버튼.png';\nimport DownMenu from '../images/아래방향메뉴선택.png';\nimport SearchIcon from '../images/돋보기아이콘.png'; // 돋보기 아이콘\nimport IconScrap from '../images/횃불이스크랩.png';\nimport IconUnscrap from '../images/횃불이스크랩X.png';\n\n// API에서 사용할 기본 URL과 헤더 설정\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = 'https://e937-106-101-137-133.ngrok-free.app/';\n// 실제 Bearer 토큰을 코드에 하드코딩해서 사용\nconst getAuthHeaders = () => {\n  // 실제 Bearer 토큰 값으로 수정\n  const accessToken = \"eyJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IjIwMjIwMTY1OSIsInJvbGUiOiJTVFVERU5UIiwiaWF0IjoxNzM1MjEwNTcxLCJleHAiOjE3Mzg0NTA1NzF9.AkO3lrnl3Kh86nWp04xs8LTE1EQbu1RGjfu8aV_3LPA\";\n  const userId = localStorage.getItem('userId'); // 사용자 ID를 로컬스토리지에서 가져옴\n  return {\n    'Authorization': `Bearer ${accessToken}`,\n    // Bearer 토큰을 Authorization 헤더에 포함\n    'X-USER-ID': userId,\n    // 사용자 ID를 X-USER-ID 헤더에 포함\n    'Content-Type': 'application/json'\n  };\n};\nconst FreeboardPage = () => {\n  _s();\n  const [menuOpen, setMenuOpen] = useState(false); // 드롭다운 상태 관리\n  const [searchTerm, setSearchTerm] = useState(''); // 검색어 상태 관리\n  const [scrapStatus, setScrapStatus] = useState({}); // 각 게시물의 스크랩 상태 관리\n  const [posts, setPosts] = useState([]); // 게시물 목록 상태 관리\n  const [sortType, setSortType] = useState('latest'); // 초기 정렬 상태는 'latest'\n  const navigate = useNavigate(); // useNavigate 훅을 컴포넌트 내부에서 호출\n\n  // 반응형 처리를 위한 useMediaQuery 사용\n  const isDesktop = useMediaQuery({\n    query: '(min-width: 769px)'\n  });\n\n  // 백엔드에서 게시물 목록 불러오기\n  useEffect(() => {\n    // 페이지 로드 시 백엔드에서 게시물 목록을 불러옴\n    const fetchPosts = async () => {\n      try {\n        const response = await fetch('https://8ae3-106-101-137-133.ngrok-free.app/api/board/free', {\n          headers: {\n            'ngrok-skip-browser-warning': 1\n          }\n        });\n        if (!response.ok) {\n          throw new Error('게시물 목록을 불러오는데 실패했습니다.');\n        }\n        // 'response.json()'으로 데이터를 받아옴\n        const data = await response.json(); // 여기가 수정된 부분입니다.\n        console.log(data);\n        setPosts(data.content); // 게시물 목록 상태 업데이트\n      } catch (error) {\n        console.error('게시물 목록을 불러오는 중 오류가 발생했습니다:', error);\n      }\n    };\n    fetchPosts();\n  }, []);\n  const toggleMenu = () => {\n    setMenuOpen(!menuOpen); // 드롭다운 토글\n  };\n  const handleBoardChange = boardName => {\n    if (boardName === '질문 게시판') {\n      navigate('/QuestionboardPage/'); // 질문 게시판으로 이동\n    }\n    setMenuOpen(false); // 메뉴 닫기\n  };\n  const toggleScrap = async id => {\n    // 스크랩 상태를 업데이트하는 요청을 보냄\n    try {\n      const response = await fetch(`${BASE_URL}/free/scrap`, {\n        method: 'PATCH',\n        headers: getAuthHeaders(),\n        body: JSON.stringify({\n          postId: id,\n          scrapStatus: !scrapStatus[id] // 새로운 스크랩 상태 전송\n        })\n      });\n      if (!response.ok) {\n        throw new Error('스크랩 상태 업데이트에 실패했습니다.');\n      }\n\n      // 서버 응답이 성공적일 경우 상태 업데이트\n      setScrapStatus(prevState => ({\n        ...prevState,\n        [id]: !prevState[id] // 기존 스크랩 상태를 반전\n      }));\n      console.log('스크랩 상태가 성공적으로 업데이트되었습니다.');\n    } catch (error) {\n      console.error('스크랩 상태 업데이트 중 오류가 발생했습니다:', error);\n      alert('스크랩 상태 업데이트에 실패했습니다. 다시 시도해주세요.');\n    }\n  };\n\n  // 검색 입력값을 변경하는 함수\n  const handleSearchInputChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  // 검색 버튼을 클릭했을 때 호출되는 함수\n  const handleSearch = async () => {\n    if (searchTerm.trim() !== '') {\n      try {\n        const response = await fetch(`${BASE_URL}/free/search?query=${encodeURIComponent(searchTerm)}`, {\n          method: 'GET',\n          headers: getAuthHeaders() // 인증 헤더를 포함\n        });\n        if (!response.ok) {\n          throw new Error('검색 결과를 불러오는데 실패했습니다.');\n        }\n        const data = await response.json();\n        setPosts(data.content); // 검색 결과 업데이트\n        alert('검색이 완료되었습니다. 결과가 화면에 표시됩니다.');\n      } catch (error) {\n        console.error('검색 결과를 불러오는 중 오류가 발생했습니다:', error);\n        alert('검색 결과를 불러오는 중 오류가 발생했습니다.');\n      }\n    } else {\n      alert('검색어를 입력해주세요.');\n    }\n  };\n  const handlePostClick = postId => {\n    navigate(`/post/${postId}`); // 해당 게시물 상세 페이지로 이동\n  };\n  // 정렬 버튼 클릭 시 정렬 상태 업데이트\n  const handleSort = type => {\n    setSortType(type);\n    if (type === 'latest') {\n      // 최신순으로 정렬\n      setPosts(prevPosts => {\n        const sortedPosts = [...prevPosts].sort((a, b) => new Date(b.freeCreatedTime) - new Date(a.freeCreatedTime));\n\n        // 좋아요 10개 이상인 게시물은 먼저 오도록 정렬\n        const hotPosts = sortedPosts.filter(post => post.freeLike >= 10); // 좋아요 10개 이상\n        const regularPosts = sortedPosts.filter(post => post.freeLike < 10); // 좋아요 10개 미만\n\n        // 좋아요 10개 이상인 게시물은 위로, 나머지는 아래로\n        return [...hotPosts, ...regularPosts];\n      });\n    } else if (type === 'recommend') {\n      // 추천순으로 정렬 (좋아요 개수 기준)\n      setPosts(prevPosts => [...prevPosts].sort((a, b) => b.freeLike - a.freeLike));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.titleContainer} ${isDesktop ? styles.desktopTitleContainer : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: CommunicationRoom_goBack,\n          className: `${styles.goBackButton} ${isDesktop ? styles.desktopGoBackButton : ''}`,\n          alt: \"\\uB4A4\\uB85C\\uAC00\\uAE30\",\n          onClick: () => navigate(-1) /* 뒤로 가기 동작 추가 */\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: `${styles.pageTitle} ${isDesktop ? styles.desktopPageTitle : ''}`,\n          children: \"\\uC790\\uC720 \\uAC8C\\uC2DC\\uD310\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: DownMenu,\n          className: `${styles.downMenuButton} ${isDesktop ? styles.desktopDownMenuButton : ''}`,\n          alt: \"\\uAC8C\\uC2DC\\uD310 \\uC120\\uD0DD\",\n          onClick: toggleMenu\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), menuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.dropdownMenu} ${isDesktop ? styles.desktopDropdownMenu : ''}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.menuItem} ${isDesktop ? styles.desktopMenuItem : ''}`,\n          onClick: () => handleBoardChange('질문 게시판'),\n          children: \"\\uC9C8\\uBB38 \\uAC8C\\uC2DC\\uD310\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.controlPanel} ${isDesktop ? styles.desktopControlPanel : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${styles.writeButton} ${isDesktop ? styles.desktopWriteButton : ''}`,\n          onClick: () => navigate('/FreewritePage'),\n          children: \"\\uAE00\\uC4F0\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.searchBar} ${isDesktop ? styles.desktopSearchBar : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: searchTerm,\n            onChange: handleSearchInputChange,\n            className: `${styles.searchInput} ${isDesktop ? styles.desktopSearchInput : ''}`,\n            placeholder: \"\\uAC80\\uC0C9\\uC5B4 \\uC785\\uB825\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: SearchIcon,\n            className: `${styles.searchIcon} ${isDesktop ? styles.desktopSearchIcon : ''}`,\n            alt: \"\\uAC80\\uC0C9\",\n            onClick: handleSearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.sortButtons} ${isDesktop ? styles.desktopSortButtons : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${styles.sortButton} ${styles.latestSortButton} ${isDesktop ? styles.desktopLatestSortButton : ''}`,\n            onClick: () => handleSort('latest'),\n            children: \"\\uCD5C\\uC2E0\\uC21C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${styles.sortButton} ${styles.recommendSortButton} ${isDesktop ? styles.desktopRecommendSortButton : ''}`,\n            onClick: () => handleSort('recommend'),\n            children: \"\\uCD94\\uCC9C\\uC21C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.postList,\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.postItem,\n          children: [post.id <= 3 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.hotTag,\n            children: \"HOT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.postInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.postTitle,\n              onClick: () => handlePostClick(post.id),\n              children: post.freeTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.postDate,\n              children: post.freeCreatedTime.slice(0, 10)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: scrapStatus[post.id] ? IconScrap : IconUnscrap,\n            alt: scrapStatus[post.id] ? '스크랩됨' : '스크랩안됨',\n            className: styles.scrapIcon,\n            onClick: () => toggleScrap(post.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.pagination,\n        children: [1, 2, 3, 4, 5].map(pageNumber => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.pageButton,\n          onClick: () => navigate(`/board/page/${pageNumber}`),\n          children: pageNumber\n        }, pageNumber, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s(FreeboardPage, \"gE9yxjUr4hqRCONmIUEvZ4ZeinQ=\", false, function () {\n  return [useNavigate, useMediaQuery];\n});\n_c = FreeboardPage;\nexport default FreeboardPage;\nvar _c;\n$RefreshReg$(_c, \"FreeboardPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useMediaQuery","Header","styles","CommunicationRoom_goBack","DownMenu","SearchIcon","IconScrap","IconUnscrap","jsxDEV","_jsxDEV","BASE_URL","getAuthHeaders","accessToken","userId","localStorage","getItem","FreeboardPage","_s","menuOpen","setMenuOpen","searchTerm","setSearchTerm","scrapStatus","setScrapStatus","posts","setPosts","sortType","setSortType","navigate","isDesktop","query","fetchPosts","response","fetch","headers","ok","Error","data","json","console","log","content","error","toggleMenu","handleBoardChange","boardName","toggleScrap","id","method","body","JSON","stringify","postId","prevState","alert","handleSearchInputChange","event","target","value","handleSearch","trim","encodeURIComponent","handlePostClick","handleSort","type","prevPosts","sortedPosts","sort","a","b","Date","freeCreatedTime","hotPosts","filter","post","freeLike","regularPosts","className","container","children","fileName","_jsxFileName","lineNumber","columnNumber","titleContainer","desktopTitleContainer","src","goBackButton","desktopGoBackButton","alt","onClick","pageTitle","desktopPageTitle","downMenuButton","desktopDownMenuButton","dropdownMenu","desktopDropdownMenu","menuItem","desktopMenuItem","controlPanel","desktopControlPanel","writeButton","desktopWriteButton","searchBar","desktopSearchBar","onChange","searchInput","desktopSearchInput","placeholder","searchIcon","desktopSearchIcon","sortButtons","desktopSortButtons","sortButton","latestSortButton","desktopLatestSortButton","recommendSortButton","desktopRecommendSortButton","postList","map","postItem","hotTag","postInfo","postTitle","freeTitle","postDate","slice","scrapIcon","pagination","pageNumber","pageButton","_c","$RefreshReg$"],"sources":["C:/Users/asx12/OneDrive/바탕 화면/react/front/Front-end/src/pages/FreeboardPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useMediaQuery } from 'react-responsive'; // 반응형 페이지 만들기 위함\r\nimport Header from './_.js';  // 상단바 컴포넌트\r\nimport styles from './FreeboardPage.module.css';  // BoardPage용 CSS 파일\r\nimport CommunicationRoom_goBack from '../images/왼쪽 나가기 버튼.png';\r\nimport DownMenu from '../images/아래방향메뉴선택.png';\r\nimport SearchIcon from '../images/돋보기아이콘.png';  // 돋보기 아이콘\r\nimport IconScrap from '../images/횃불이스크랩.png';\r\nimport IconUnscrap from '../images/횃불이스크랩X.png';\r\n\r\n// API에서 사용할 기본 URL과 헤더 설정\r\nconst BASE_URL = 'https://e937-106-101-137-133.ngrok-free.app/';\r\n// 실제 Bearer 토큰을 코드에 하드코딩해서 사용\r\nconst getAuthHeaders = () => {\r\n  // 실제 Bearer 토큰 값으로 수정\r\n  const accessToken = \"eyJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IjIwMjIwMTY1OSIsInJvbGUiOiJTVFVERU5UIiwiaWF0IjoxNzM1MjEwNTcxLCJleHAiOjE3Mzg0NTA1NzF9.AkO3lrnl3Kh86nWp04xs8LTE1EQbu1RGjfu8aV_3LPA\";\r\n  const userId = localStorage.getItem('userId'); // 사용자 ID를 로컬스토리지에서 가져옴\r\n  return {\r\n    'Authorization': `Bearer ${accessToken}`,  // Bearer 토큰을 Authorization 헤더에 포함\r\n    'X-USER-ID': userId, // 사용자 ID를 X-USER-ID 헤더에 포함\r\n    'Content-Type': 'application/json',\r\n  };\r\n};\r\n\r\n\r\n\r\nconst FreeboardPage = () => {\r\n  const [menuOpen, setMenuOpen] = useState(false);  // 드롭다운 상태 관리\r\n  const [searchTerm, setSearchTerm] = useState(''); // 검색어 상태 관리\r\n  const [scrapStatus, setScrapStatus] = useState({}); // 각 게시물의 스크랩 상태 관리\r\n  const [posts, setPosts] = useState([]); // 게시물 목록 상태 관리\r\n  const [sortType, setSortType] = useState('latest'); // 초기 정렬 상태는 'latest'\r\n  const navigate = useNavigate();  // useNavigate 훅을 컴포넌트 내부에서 호출\r\n\r\n  // 반응형 처리를 위한 useMediaQuery 사용\r\n  const isDesktop = useMediaQuery({ query: '(min-width: 769px)' });\r\n\r\n  // 백엔드에서 게시물 목록 불러오기\r\n  useEffect(() => {\r\n    // 페이지 로드 시 백엔드에서 게시물 목록을 불러옴\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const response = await fetch('https://8ae3-106-101-137-133.ngrok-free.app/api/board/free', { headers: { 'ngrok-skip-browser-warning': 1 } });\r\n        if (!response.ok) {\r\n          throw new Error('게시물 목록을 불러오는데 실패했습니다.');\r\n        }\r\n        // 'response.json()'으로 데이터를 받아옴\r\n        const data = await response.json(); // 여기가 수정된 부분입니다.\r\n        console.log(data);\r\n        setPosts(data.content);  // 게시물 목록 상태 업데이트\r\n      } catch (error) {\r\n        console.error('게시물 목록을 불러오는 중 오류가 발생했습니다:', error);\r\n      }\r\n    };\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  const toggleMenu = () => {\r\n    setMenuOpen(!menuOpen);  // 드롭다운 토글\r\n  };\r\n\r\n  const handleBoardChange = (boardName) => {\r\n    if (boardName === '질문 게시판') {\r\n      navigate('/QuestionboardPage/'); // 질문 게시판으로 이동\r\n    }\r\n    setMenuOpen(false);  // 메뉴 닫기\r\n  };\r\n\r\n  const toggleScrap = async (id) => {\r\n    // 스크랩 상태를 업데이트하는 요청을 보냄\r\n    try {\r\n      const response = await fetch(`${BASE_URL}/free/scrap`, {\r\n        method: 'PATCH',\r\n        headers: getAuthHeaders(),\r\n        body: JSON.stringify({\r\n          postId: id,\r\n          scrapStatus: !scrapStatus[id], // 새로운 스크랩 상태 전송\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('스크랩 상태 업데이트에 실패했습니다.');\r\n      }\r\n\r\n      // 서버 응답이 성공적일 경우 상태 업데이트\r\n      setScrapStatus((prevState) => ({\r\n        ...prevState,\r\n        [id]: !prevState[id], // 기존 스크랩 상태를 반전\r\n      }));\r\n\r\n      console.log('스크랩 상태가 성공적으로 업데이트되었습니다.');\r\n    } catch (error) {\r\n      console.error('스크랩 상태 업데이트 중 오류가 발생했습니다:', error);\r\n      alert('스크랩 상태 업데이트에 실패했습니다. 다시 시도해주세요.');\r\n    }\r\n  };\r\n\r\n  // 검색 입력값을 변경하는 함수\r\n  const handleSearchInputChange = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  // 검색 버튼을 클릭했을 때 호출되는 함수\r\n  const handleSearch = async () => {\r\n    if (searchTerm.trim() !== '') {\r\n      try {\r\n        const response = await fetch(`${BASE_URL}/free/search?query=${encodeURIComponent(searchTerm)}`, {\r\n          method: 'GET',\r\n          headers: getAuthHeaders(),  // 인증 헤더를 포함\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('검색 결과를 불러오는데 실패했습니다.');\r\n        }\r\n\r\n        const data = await response.json();\r\n        setPosts(data.content);  // 검색 결과 업데이트\r\n        alert('검색이 완료되었습니다. 결과가 화면에 표시됩니다.');\r\n      } catch (error) {\r\n        console.error('검색 결과를 불러오는 중 오류가 발생했습니다:', error);\r\n        alert('검색 결과를 불러오는 중 오류가 발생했습니다.');\r\n      }\r\n    } else {\r\n      alert('검색어를 입력해주세요.');\r\n    }\r\n  };\r\n\r\n\r\n  const handlePostClick = (postId) => {\r\n    navigate(`/post/${postId}`);  // 해당 게시물 상세 페이지로 이동\r\n  };\r\n// 정렬 버튼 클릭 시 정렬 상태 업데이트\r\nconst handleSort = (type) => {\r\n  setSortType(type);\r\n\r\n  if (type === 'latest') {\r\n    // 최신순으로 정렬\r\n    setPosts((prevPosts) => {\r\n      const sortedPosts = [...prevPosts].sort((a, b) => new Date(b.freeCreatedTime) - new Date(a.freeCreatedTime));\r\n      \r\n      // 좋아요 10개 이상인 게시물은 먼저 오도록 정렬\r\n      const hotPosts = sortedPosts.filter(post => post.freeLike >= 10);  // 좋아요 10개 이상\r\n      const regularPosts = sortedPosts.filter(post => post.freeLike < 10); // 좋아요 10개 미만\r\n\r\n      // 좋아요 10개 이상인 게시물은 위로, 나머지는 아래로\r\n      return [...hotPosts, ...regularPosts];\r\n    });\r\n  } else if (type === 'recommend') {\r\n    // 추천순으로 정렬 (좋아요 개수 기준)\r\n    setPosts((prevPosts) =>\r\n      [...prevPosts].sort((a, b) => b.freeLike - a.freeLike)\r\n    );\r\n  }\r\n};\r\n\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Header />\r\n      <div className={styles.content}>\r\n        <div className={`${styles.titleContainer} ${isDesktop ? styles.desktopTitleContainer : ''}`}>\r\n          <img\r\n            src={CommunicationRoom_goBack}\r\n            className={`${styles.goBackButton} ${isDesktop ? styles.desktopGoBackButton : ''}`}\r\n            alt=\"뒤로가기\"\r\n            onClick={() => navigate(-1)}  /* 뒤로 가기 동작 추가 */\r\n          />\r\n          <h1 className={`${styles.pageTitle} ${isDesktop ? styles.desktopPageTitle : ''}`}>자유 게시판</h1>\r\n          <img\r\n            src={DownMenu}\r\n            className={`${styles.downMenuButton} ${isDesktop ? styles.desktopDownMenuButton : ''}`}\r\n            alt=\"게시판 선택\"\r\n            onClick={toggleMenu}\r\n          />\r\n        </div>\r\n\r\n        {menuOpen && (\r\n          <div\r\n            className={`${styles.dropdownMenu} ${isDesktop ? styles.desktopDropdownMenu : ''}`}\r\n          >\r\n            <div\r\n              className={`${styles.menuItem} ${isDesktop ? styles.desktopMenuItem : ''}`}\r\n              onClick={() => handleBoardChange('질문 게시판')}\r\n            >\r\n              질문 게시판\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className={`${styles.controlPanel} ${isDesktop ? styles.desktopControlPanel : ''}`}>\r\n          <button\r\n            className={`${styles.writeButton} ${isDesktop ? styles.desktopWriteButton : ''}`}\r\n            onClick={() => navigate('/FreewritePage')}\r\n          >\r\n            글쓰기\r\n          </button>\r\n\r\n          <div className={`${styles.searchBar} ${isDesktop ? styles.desktopSearchBar : ''}`}>\r\n            <input\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={handleSearchInputChange}\r\n              className={`${styles.searchInput} ${isDesktop ? styles.desktopSearchInput : ''}`}\r\n              placeholder=\"검색어 입력\"\r\n            />\r\n            <img\r\n              src={SearchIcon}\r\n              className={`${styles.searchIcon} ${isDesktop ? styles.desktopSearchIcon : ''}`}\r\n              alt=\"검색\"\r\n              onClick={handleSearch}\r\n            />\r\n          </div>\r\n\r\n          <div className={`${styles.sortButtons} ${isDesktop ? styles.desktopSortButtons : ''}`}>\r\n            <button\r\n              className={`${styles.sortButton} ${styles.latestSortButton} ${isDesktop ? styles.desktopLatestSortButton : ''}`}\r\n              onClick={() => handleSort('latest')}\r\n            >\r\n              최신순\r\n            </button>\r\n            <button\r\n              className={`${styles.sortButton} ${styles.recommendSortButton} ${isDesktop ? styles.desktopRecommendSortButton : ''}`}\r\n              onClick={() => handleSort('recommend')}\r\n            >\r\n              추천순\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.postList}>\r\n          {posts.map((post) => (\r\n            <div key={post.id} className={styles.postItem}>\r\n              {post.id <= 3 && <span className={styles.hotTag}>HOT</span>}\r\n              <div className={styles.postInfo}>\r\n                <span\r\n                  className={styles.postTitle}\r\n                  onClick={() => handlePostClick(post.id)}\r\n                >\r\n                  {post.freeTitle}\r\n                </span>\r\n                <span className={styles.postDate}>{post.freeCreatedTime.slice(0, 10)}</span>\r\n              </div>\r\n              <img\r\n                src={scrapStatus[post.id] ? IconScrap : IconUnscrap}\r\n                alt={scrapStatus[post.id] ? '스크랩됨' : '스크랩안됨'}\r\n                className={styles.scrapIcon}\r\n                onClick={() => toggleScrap(post.id)}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className={styles.pagination}>\r\n          {[1, 2, 3, 4, 5].map((pageNumber) => (\r\n            <button\r\n              key={pageNumber}\r\n              className={styles.pageButton}\r\n              onClick={() => navigate(`/board/page/${pageNumber}`)}\r\n            >\r\n              {pageNumber}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FreeboardPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}