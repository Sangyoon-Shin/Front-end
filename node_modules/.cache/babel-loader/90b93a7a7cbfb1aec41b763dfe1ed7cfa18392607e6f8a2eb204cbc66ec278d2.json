{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asx12\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\react\\\\front\\\\Front-end\\\\src\\\\pages\\\\RoomPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useMediaQuery } from 'react-responsive'; // 반응형 페이지 만들기 위함\nimport Header from './_.js'; // 상단바 컴포넌트\nimport styles from './RoomPage.module.css';\nimport CommunicationRoom_goBack from '../images/왼쪽 나가기 버튼.png';\nimport menuIcon from '../images/메뉴버튼.png';\nimport Icon1 from '../images/하트이모지.png'; // 방 1의 아이콘\nimport Icon2 from '../images/눈이모지.png'; // 방 2의 아이콘\nimport Icon3 from '../images/폭죽이모지.png'; // 방 3의 아이콘\nimport Icon4 from '../images/내가속한방 횃불이.png'; // 하단바 아이콘들\nimport Icon5 from '../images/수업소통방 횃불이.png';\nimport Icon6 from '../images/자유소통방 횃불이.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst roomsData = [{\n  id: 1,\n  title: '내가 속한 방 제목 1',\n  lastMessage: '마지막 내용',\n  icon: Icon1,\n  selected: false\n}, {\n  id: 2,\n  title: '내가 속한 방 제목 2',\n  lastMessage: '마지막 내용',\n  icon: Icon2,\n  selected: false\n}, {\n  id: 3,\n  title: '내가 속한 방 제목 3',\n  lastMessage: '마지막 내용',\n  icon: Icon3,\n  selected: false\n}];\nconst RoomPage = () => {\n  _s();\n  const [rooms, setRooms] = useState(roomsData); // 여기는 하드코딩 되어있는 상태\n  // const [rooms, setRooms] = useState([]); // 방 목록 상태를 빈 배열로 초기화 --> 백엔드에서 가져오려면 이 코드로 \n  const [menuOpen, setMenuOpen] = useState(false); // 메뉴 열림/닫힘 상태\n  const [isSelectingForReport, setIsSelectingForReport] = useState(false); // 방 신고 모드 여부\n  const [isSelectingForEdit, setIsSelectingForEdit] = useState(false); // 방 편집 모드 여부\n  const [selectedRooms, setSelectedRooms] = useState([]); // 신고 및 편집을 위해 선택된 방 목록\n  const [isModalOpen, setIsModalOpen] = useState(false); // 신고 모달 열림/닫힘 상태\n  const [reportReason, setReportReason] = useState(''); // 신고 사유 상태\n  const navigate = useNavigate();\n\n  // 반응형 페이지 처리를 위한 useMediaQuery 사용\n  const isDesktop = useMediaQuery({\n    query: '(min-width: 769px)'\n  });\n  {/*\r\n   // 방 목록을 백엔드에서 가져오기 위한 useEffect\r\n   useEffect(() => {\r\n    const fetchRooms = async () => {\r\n      try {\r\n        const response = await fetch('https://your-backend-api.com/rooms');\r\n        if (!response.ok) {\r\n          throw new Error('방 목록을 가져오는 데 실패했습니다.');\r\n        }\r\n        const data = await response.json();\r\n        setRooms(data); // 방 목록 상태 업데이트\r\n      } catch (error) {\r\n        console.error('방 목록을 가져오는 중 오류 발생:', error);\r\n        alert('방 목록을 가져오는 데 문제가 발생했습니다.');\r\n      }\r\n    };\r\n      fetchRooms();\r\n   }, []);\r\n   */}\n\n  // 방 ID에 맞는 페이지로 이동하기\n  const handleRoomClick = id => {\n    navigate(`/room/${id}`); // 방 ID에 맞는 페이지로 이동\n  };\n  const toggleMenu = () => {\n    setMenuOpen(!menuOpen); // 메뉴 토글\n  };\n\n  // 신고하기 버튼 클릭 시 방 신고 선택 모드로 전환\n  const handleReportClick = () => {\n    setIsSelectingForReport(true);\n    setIsSelectingForEdit(false);\n    setMenuOpen(false);\n  };\n\n  // 편집하기 버튼 클릭 시 방 편집 선택 모드로 전환\n  const handleEditClick = () => {\n    setIsSelectingForEdit(true);\n    setIsSelectingForReport(false);\n    setMenuOpen(false);\n  };\n\n  // 방 신고 또는 편집 모드에서 체크박스 클릭 시 선택된 방 관리\n  const handleSelectRoom = id => {\n    if (selectedRooms.includes(id)) {\n      setSelectedRooms(selectedRooms.filter(roomId => roomId !== id));\n    } else {\n      setSelectedRooms([...selectedRooms, id]);\n    }\n  };\n\n  // 신고 모드 취소 함수\n  const handleCancelReport = () => {\n    setIsSelectingForReport(false); // 신고 모드 종료\n    setSelectedRooms([]); // 선택된 방 초기화\n  };\n\n  // 편집 모드 취소 함수\n  const handleCancelEdit = () => {\n    setIsSelectingForEdit(false); // 편집 모드 종료\n    setSelectedRooms([]); // 선택된 방 초기화\n  };\n\n  // 신고 버튼 클릭 시 신고 팝업 열기\n  const handleOpenReportModal = () => {\n    if (selectedRooms.length !== 1) {\n      alert(\"신고할 방을 하나만 선택하세요.\");\n    } else {\n      setReportReason(''); // 신고 모달을 열기 전에 신고 사유를 빈 문자열로 초기화\n      setIsModalOpen(true);\n    }\n  };\n\n  // 신고 팝업에서 신고하기 버튼 클릭 - fetch 사용 추가\n  const handleSubmitReport = async () => {\n    if (reportReason.trim() === '') {\n      alert('신고 사유를 입력해주세요.');\n      return;\n    }\n    const reportedRoomId = selectedRooms[0];\n    const reportData = {\n      roomId: reportedRoomId,\n      reason: reportReason\n    };\n    try {\n      // fetch API 호출\n      const response = await fetch('https://your-backend-api.com/reports', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(reportData)\n      });\n      if (!response.ok) {\n        throw new Error('신고 요청이 실패했습니다.');\n      }\n      alert('신고가 성공적으로 접수되었습니다.');\n\n      // 상태 초기화\n      setReportReason('');\n      setIsModalOpen(false);\n      setSelectedRooms([]);\n      setIsSelectingForReport(false);\n    } catch (error) {\n      console.error('신고하는 동안 오류가 발생했습니다:', error);\n      alert('신고에 실패했습니다. 다시 시도해주세요.');\n    }\n  };\n\n  // 신고 팝업에서 취소 버튼 클릭\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedRooms([]);\n    setIsSelectingForReport(false);\n    setReportReason(''); // 신고 사유 초기화\n  };\n  {/* 백엔드 연동하기 전 코드\r\n   // 선택된 방 삭제 함수\r\n   const handleDeleteRooms = () => {\r\n    if (selectedRooms.length === 0) {\r\n      alert(\"삭제할 방을 선택하세요.\");\r\n    } else {\r\n      setRooms(rooms.filter((room) => !selectedRooms.includes(room.id)));\r\n      setSelectedRooms([]);\r\n      setIsSelectingForEdit(false);\r\n      alert(\"선택된 방이 삭제되었습니다.\");\r\n    }\r\n   };\r\n   */}\n\n  // 선택된 방 삭제 함수 (백엔드 연동)\n  const handleDeleteRooms = async () => {\n    if (selectedRooms.length === 0) {\n      alert(\"삭제할 방을 선택하세요.\");\n    } else {\n      try {\n        // 각 선택된 방에 대해 DELETE 요청을 보냄\n        for (const roomId of selectedRooms) {\n          const response = await fetch(`https://your-backend-api.com/rooms/${roomId}`, {\n            method: 'DELETE'\n          });\n          if (!response.ok) {\n            throw new Error(`방 ID ${roomId}을(를) 삭제하는 데 실패했습니다.`);\n          }\n        }\n\n        // 상태 업데이트: 클라이언트 측에서도 방 삭제\n        setRooms(rooms.filter(room => !selectedRooms.includes(room.id)));\n        setSelectedRooms([]);\n        setIsSelectingForEdit(false);\n        alert(\"선택된 방이 삭제되었습니다.\");\n      } catch (error) {\n        console.error('방 삭제 중 오류 발생:', error);\n        alert('방 삭제 중 문제가 발생했습니다.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.titleContainer} ${isDesktop ? styles.desktopTitleContainer : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: CommunicationRoom_goBack,\n          className: `${styles.goBackButton} ${isDesktop ? styles.desktopGoBackButton : ''}`,\n          alt: \"\\uB4A4\\uB85C\\uAC00\\uAE30\",\n          onClick: () => navigate(-1) /* 뒤로 가기 동작 추가 */\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: `${styles.pageTitle} ${isDesktop ? styles.desktopPageTitle : ''}`,\n          children: \"\\uB0B4\\uAC00 \\uC18D\\uD55C \\uBC29\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: menuIcon,\n        className: `${styles.menuButton} ${isDesktop ? styles.desktopMenuButton : ''}`,\n        alt: \"\\uBA54\\uB274\",\n        onClick: toggleMenu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), menuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.dropdownMenu,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.menuItem,\n          onClick: handleEditClick,\n          children: \"\\uD3B8\\uC9D1\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.menuItem,\n          onClick: handleReportClick,\n          children: \"\\uC2E0\\uACE0\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.roomsList} ${isDesktop ? styles.desktopRoomsList : ''}`,\n        children: rooms.map(room => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.roomItem} ${isDesktop ? styles.desktopRoomItem : ''} ${room.selected ? styles.selected : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: room.icon,\n            alt: `방 아이콘 ${room.id}`,\n            className: styles.roomIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${styles.roomInfo} ${isDesktop ? styles.desktopRoomInfo : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${styles.roomTitle} ${isDesktop ? styles.desktopRoomTitle : ''}`,\n              children: room.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.roomMessage,\n              children: room.lastMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), isSelectingForReport || isSelectingForEdit ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedRooms.includes(room.id),\n            onChange: () => handleSelectRoom(room.id),\n            className: styles.reportCheckbox\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.joinButton,\n            onClick: () => handleRoomClick(room.id),\n            children: \"\\uCC38\\uC5EC\\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 17\n          }, this)]\n        }, room.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), isSelectingForReport && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.reportActions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.reportButton,\n          onClick: handleOpenReportModal,\n          children: \"\\uC120\\uD0DD\\uB41C \\uBC29 \\uC2E0\\uACE0\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.cancelButton,\n          onClick: handleCancelReport,\n          children: \"\\uC2E0\\uACE0 \\uBAA8\\uB4DC \\uCDE8\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this), isSelectingForEdit && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.reportActions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.reportButton,\n          onClick: handleDeleteRooms,\n          children: \"\\uC120\\uD0DD\\uB41C \\uBC29 \\uC0AD\\uC81C\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.cancelButton,\n          onClick: handleCancelEdit,\n          children: \"\\uD3B8\\uC9D1 \\uBAA8\\uB4DC \\uCDE8\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.modalOverlay,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.modalContent,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uC2E0\\uACE0\\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: styles.reportTextarea,\n            value: reportReason,\n            onChange: e => setReportReason(e.target.value),\n            placeholder: \"\\uC2E0\\uACE0 \\uC0AC\\uC720\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.modalButtons,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSubmitReport,\n              className: styles.reportButton,\n              children: \"\\uC2E0\\uACE0\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCloseModal,\n              className: styles.cancelButton,\n              children: \"\\uCDE8\\uC18C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.bottomNav,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.navItem,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: Icon4,\n            alt: \"\\uB0B4\\uAC00 \\uC18D\\uD55C \\uBC29\",\n            className: styles.navIcon,\n            onClick: () => handleRoomClick(\"내가속한방\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.navText,\n            children: \"\\uB0B4\\uAC00 \\uC18D\\uD55C \\uBC29\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.navItem,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: Icon5,\n            alt: \"\\uC218\\uC5C5 \\uC18C\\uD1B5 \\uBC29\",\n            className: styles.navIcon,\n            onClick: () => handleRoomClick(\"수업소통방\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.navText,\n            children: \"\\uC218\\uC5C5 \\uC18C\\uD1B5 \\uBC29\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.navItem,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: Icon6,\n            alt: \"\\uC790\\uC720 \\uC18C\\uD1B5 \\uBC29\",\n            className: styles.navIcon,\n            onClick: () => handleRoomClick(\"자유소통방\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.navText,\n            children: \"\\uC790\\uC720 \\uC18C\\uD1B5 \\uBC29\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomPage, \"jIntNVzmbDMBQ3Ube8U7kwdxenk=\", false, function () {\n  return [useNavigate, useMediaQuery];\n});\n_c = RoomPage;\nexport default RoomPage;\nvar _c;\n$RefreshReg$(_c, \"RoomPage\");","map":{"version":3,"names":["React","useState","useNavigate","useMediaQuery","Header","styles","CommunicationRoom_goBack","menuIcon","Icon1","Icon2","Icon3","Icon4","Icon5","Icon6","jsxDEV","_jsxDEV","roomsData","id","title","lastMessage","icon","selected","RoomPage","_s","rooms","setRooms","menuOpen","setMenuOpen","isSelectingForReport","setIsSelectingForReport","isSelectingForEdit","setIsSelectingForEdit","selectedRooms","setSelectedRooms","isModalOpen","setIsModalOpen","reportReason","setReportReason","navigate","isDesktop","query","handleRoomClick","toggleMenu","handleReportClick","handleEditClick","handleSelectRoom","includes","filter","roomId","handleCancelReport","handleCancelEdit","handleOpenReportModal","length","alert","handleSubmitReport","trim","reportedRoomId","reportData","reason","response","fetch","method","headers","body","JSON","stringify","ok","Error","error","console","handleCloseModal","handleDeleteRooms","room","className","container","children","fileName","_jsxFileName","lineNumber","columnNumber","content","titleContainer","desktopTitleContainer","src","goBackButton","desktopGoBackButton","alt","onClick","pageTitle","desktopPageTitle","menuButton","desktopMenuButton","dropdownMenu","menuItem","roomsList","desktopRoomsList","map","roomItem","desktopRoomItem","roomIcon","roomInfo","desktopRoomInfo","roomTitle","desktopRoomTitle","roomMessage","type","checked","onChange","reportCheckbox","joinButton","reportActions","reportButton","cancelButton","modalOverlay","modalContent","reportTextarea","value","e","target","placeholder","modalButtons","bottomNav","navItem","navIcon","navText","_c","$RefreshReg$"],"sources":["C:/Users/asx12/OneDrive/바탕 화면/react/front/Front-end/src/pages/RoomPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useMediaQuery } from 'react-responsive'; // 반응형 페이지 만들기 위함\r\nimport Header from './_.js';  // 상단바 컴포넌트\r\nimport styles from './RoomPage.module.css';\r\nimport CommunicationRoom_goBack from '../images/왼쪽 나가기 버튼.png';\r\nimport menuIcon from '../images/메뉴버튼.png';\r\nimport Icon1 from '../images/하트이모지.png';  // 방 1의 아이콘\r\nimport Icon2 from '../images/눈이모지.png';   // 방 2의 아이콘\r\nimport Icon3 from '../images/폭죽이모지.png'; // 방 3의 아이콘\r\nimport Icon4 from '../images/내가속한방 횃불이.png';  // 하단바 아이콘들\r\nimport Icon5 from '../images/수업소통방 횃불이.png';\r\nimport Icon6 from '../images/자유소통방 횃불이.png';\r\n\r\nconst roomsData = [\r\n  { id: 1, title: '내가 속한 방 제목 1', lastMessage: '마지막 내용', icon: Icon1, selected: false },\r\n  { id: 2, title: '내가 속한 방 제목 2', lastMessage: '마지막 내용', icon: Icon2, selected: false },\r\n  { id: 3, title: '내가 속한 방 제목 3', lastMessage: '마지막 내용', icon: Icon3, selected: false },\r\n];\r\n\r\nconst RoomPage = () => {\r\n  const [rooms, setRooms] = useState(roomsData); // 여기는 하드코딩 되어있는 상태\r\n  // const [rooms, setRooms] = useState([]); // 방 목록 상태를 빈 배열로 초기화 --> 백엔드에서 가져오려면 이 코드로 \r\n  const [menuOpen, setMenuOpen] = useState(false);  // 메뉴 열림/닫힘 상태\r\n  const [isSelectingForReport, setIsSelectingForReport] = useState(false); // 방 신고 모드 여부\r\n  const [isSelectingForEdit, setIsSelectingForEdit] = useState(false); // 방 편집 모드 여부\r\n  const [selectedRooms, setSelectedRooms] = useState([]); // 신고 및 편집을 위해 선택된 방 목록\r\n  const [isModalOpen, setIsModalOpen] = useState(false); // 신고 모달 열림/닫힘 상태\r\n  const [reportReason, setReportReason] = useState(''); // 신고 사유 상태\r\n  const navigate = useNavigate();\r\n\r\n  // 반응형 페이지 처리를 위한 useMediaQuery 사용\r\n  const isDesktop = useMediaQuery({ query: '(min-width: 769px)' });\r\n\r\n  {/*\r\n   // 방 목록을 백엔드에서 가져오기 위한 useEffect\r\n   useEffect(() => {\r\n    const fetchRooms = async () => {\r\n      try {\r\n        const response = await fetch('https://your-backend-api.com/rooms');\r\n        if (!response.ok) {\r\n          throw new Error('방 목록을 가져오는 데 실패했습니다.');\r\n        }\r\n        const data = await response.json();\r\n        setRooms(data); // 방 목록 상태 업데이트\r\n      } catch (error) {\r\n        console.error('방 목록을 가져오는 중 오류 발생:', error);\r\n        alert('방 목록을 가져오는 데 문제가 발생했습니다.');\r\n      }\r\n    };\r\n\r\n    fetchRooms();\r\n  }, []);\r\n  */}\r\n\r\n  // 방 ID에 맞는 페이지로 이동하기\r\n  const handleRoomClick = (id) => {\r\n    navigate(`/room/${id}`);  // 방 ID에 맞는 페이지로 이동\r\n  };\r\n\r\n  const toggleMenu = () => {\r\n    setMenuOpen(!menuOpen);  // 메뉴 토글\r\n  };\r\n\r\n  // 신고하기 버튼 클릭 시 방 신고 선택 모드로 전환\r\n  const handleReportClick = () => {\r\n    setIsSelectingForReport(true);\r\n    setIsSelectingForEdit(false);\r\n    setMenuOpen(false);\r\n  };\r\n\r\n  // 편집하기 버튼 클릭 시 방 편집 선택 모드로 전환\r\n  const handleEditClick = () => {\r\n    setIsSelectingForEdit(true);\r\n    setIsSelectingForReport(false);\r\n    setMenuOpen(false);\r\n  };\r\n\r\n  // 방 신고 또는 편집 모드에서 체크박스 클릭 시 선택된 방 관리\r\n  const handleSelectRoom = (id) => {\r\n    if (selectedRooms.includes(id)) {\r\n      setSelectedRooms(selectedRooms.filter((roomId) => roomId !== id));\r\n    } else {\r\n      setSelectedRooms([...selectedRooms, id]);\r\n    }\r\n  };\r\n\r\n  // 신고 모드 취소 함수\r\n  const handleCancelReport = () => {\r\n    setIsSelectingForReport(false); // 신고 모드 종료\r\n    setSelectedRooms([]); // 선택된 방 초기화\r\n  };\r\n\r\n  // 편집 모드 취소 함수\r\n  const handleCancelEdit = () => {\r\n    setIsSelectingForEdit(false); // 편집 모드 종료\r\n    setSelectedRooms([]); // 선택된 방 초기화\r\n  };\r\n\r\n  // 신고 버튼 클릭 시 신고 팝업 열기\r\n  const handleOpenReportModal = () => {\r\n    if (selectedRooms.length !== 1) {\r\n      alert(\"신고할 방을 하나만 선택하세요.\");\r\n    } else {\r\n      setReportReason('');  // 신고 모달을 열기 전에 신고 사유를 빈 문자열로 초기화\r\n      setIsModalOpen(true);\r\n    }\r\n  };\r\n\r\n  // 신고 팝업에서 신고하기 버튼 클릭 - fetch 사용 추가\r\n  const handleSubmitReport = async () => {\r\n    if (reportReason.trim() === '') {\r\n      alert('신고 사유를 입력해주세요.');\r\n      return;\r\n    }\r\n\r\n    const reportedRoomId = selectedRooms[0];\r\n    const reportData = {\r\n      roomId: reportedRoomId,\r\n      reason: reportReason,\r\n    };\r\n\r\n    try {\r\n      // fetch API 호출\r\n      const response = await fetch('https://your-backend-api.com/reports', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(reportData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('신고 요청이 실패했습니다.');\r\n      }\r\n\r\n      alert('신고가 성공적으로 접수되었습니다.');\r\n\r\n      // 상태 초기화\r\n      setReportReason('');\r\n      setIsModalOpen(false);\r\n      setSelectedRooms([]);\r\n      setIsSelectingForReport(false);\r\n    } catch (error) {\r\n      console.error('신고하는 동안 오류가 발생했습니다:', error);\r\n      alert('신고에 실패했습니다. 다시 시도해주세요.');\r\n    }\r\n  };\r\n\r\n  // 신고 팝업에서 취소 버튼 클릭\r\n  const handleCloseModal = () => {\r\n    setIsModalOpen(false);\r\n    setSelectedRooms([]);\r\n    setIsSelectingForReport(false);\r\n    setReportReason('');  // 신고 사유 초기화\r\n  };\r\n\r\n  {/* 백엔드 연동하기 전 코드\r\n  // 선택된 방 삭제 함수\r\n  const handleDeleteRooms = () => {\r\n    if (selectedRooms.length === 0) {\r\n      alert(\"삭제할 방을 선택하세요.\");\r\n    } else {\r\n      setRooms(rooms.filter((room) => !selectedRooms.includes(room.id)));\r\n      setSelectedRooms([]);\r\n      setIsSelectingForEdit(false);\r\n      alert(\"선택된 방이 삭제되었습니다.\");\r\n    }\r\n  };\r\n  */}\r\n\r\n  // 선택된 방 삭제 함수 (백엔드 연동)\r\n  const handleDeleteRooms = async () => {\r\n    if (selectedRooms.length === 0) {\r\n      alert(\"삭제할 방을 선택하세요.\");\r\n    } else {\r\n      try {\r\n        // 각 선택된 방에 대해 DELETE 요청을 보냄\r\n        for (const roomId of selectedRooms) {\r\n          const response = await fetch(`https://your-backend-api.com/rooms/${roomId}`, {\r\n            method: 'DELETE',\r\n          });\r\n\r\n          if (!response.ok) {\r\n            throw new Error(`방 ID ${roomId}을(를) 삭제하는 데 실패했습니다.`);\r\n          }\r\n        }\r\n\r\n        // 상태 업데이트: 클라이언트 측에서도 방 삭제\r\n        setRooms(rooms.filter((room) => !selectedRooms.includes(room.id)));\r\n        setSelectedRooms([]);\r\n        setIsSelectingForEdit(false);\r\n        alert(\"선택된 방이 삭제되었습니다.\");\r\n\r\n      } catch (error) {\r\n        console.error('방 삭제 중 오류 발생:', error);\r\n        alert('방 삭제 중 문제가 발생했습니다.');\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Header />\r\n      <div className={styles.content}>\r\n        <div className={`${styles.titleContainer} ${isDesktop ? styles.desktopTitleContainer : ''}`}>\r\n          <img\r\n            src={CommunicationRoom_goBack}\r\n            className={`${styles.goBackButton} ${isDesktop ? styles.desktopGoBackButton : ''}`}\r\n            alt=\"뒤로가기\"\r\n            onClick={() => navigate(-1)}  /* 뒤로 가기 동작 추가 */\r\n          />\r\n          <h1 className={`${styles.pageTitle} ${isDesktop ? styles.desktopPageTitle : ''}`}>\r\n            내가 속한 방\r\n          </h1>\r\n        </div>\r\n\r\n        {/* 메뉴 버튼 */}\r\n        <img\r\n          src={menuIcon}\r\n          className={`${styles.menuButton} ${isDesktop ? styles.desktopMenuButton : ''}`}\r\n          alt=\"메뉴\"\r\n          onClick={toggleMenu}\r\n        />\r\n        {menuOpen && (\r\n          <div className={styles.dropdownMenu}>\r\n            <div className={styles.menuItem} onClick={handleEditClick}>편집하기</div>\r\n            <div className={styles.menuItem} onClick={handleReportClick}>신고하기</div>\r\n          </div>\r\n        )}\r\n\r\n        {/* 방 목록 추가 */}\r\n        <div className={`${styles.roomsList} ${isDesktop ? styles.desktopRoomsList : ''}`}>\r\n          {rooms.map((room) => (\r\n            <div\r\n              key={room.id}\r\n              className={`${styles.roomItem} ${isDesktop ? styles.desktopRoomItem : ''} ${room.selected ? styles.selected : ''\r\n                }`}\r\n            >\r\n              <img src={room.icon} alt={`방 아이콘 ${room.id}`} className={styles.roomIcon} />\r\n              <div className={`${styles.roomInfo} ${isDesktop ? styles.desktopRoomInfo : ''}`}>\r\n                <div className={`${styles.roomTitle} ${isDesktop ? styles.desktopRoomTitle : ''}`}>{room.title}</div>\r\n                <div className={styles.roomMessage}>{room.lastMessage}</div>\r\n              </div>\r\n\r\n              {(isSelectingForReport || isSelectingForEdit) ? (\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={selectedRooms.includes(room.id)}\r\n                  onChange={() => handleSelectRoom(room.id)}\r\n                  className={styles.reportCheckbox}\r\n                />\r\n              ) : (\r\n                <button\r\n                  className={styles.joinButton}\r\n                  onClick={() => handleRoomClick(room.id)}\r\n                >\r\n                  참여하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* 방 신고 및 취소 버튼 */}\r\n        {isSelectingForReport && (\r\n          <div className={styles.reportActions}>\r\n            <button className={styles.reportButton} onClick={handleOpenReportModal}>\r\n              선택된 방 신고하기\r\n            </button>\r\n            <button className={styles.cancelButton} onClick={handleCancelReport}>\r\n              신고 모드 취소\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {/* 방 삭제 및 취소 버튼 */}\r\n        {isSelectingForEdit && (\r\n          <div className={styles.reportActions}>\r\n            <button className={styles.reportButton} onClick={handleDeleteRooms}>\r\n              선택된 방 삭제하기\r\n            </button>\r\n            <button className={styles.cancelButton} onClick={handleCancelEdit}>\r\n              편집 모드 취소\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {/* 신고 모달 */}\r\n        {isModalOpen && (\r\n          <div className={styles.modalOverlay}>\r\n            <div className={styles.modalContent}>\r\n              <h4>신고하기</h4>\r\n              <textarea\r\n                className={styles.reportTextarea}\r\n                value={reportReason}\r\n                onChange={(e) => setReportReason(e.target.value)}\r\n                placeholder=\"신고 사유를 입력하세요\"\r\n              />\r\n              <div className={styles.modalButtons}>\r\n                <button onClick={handleSubmitReport} className={styles.reportButton}>\r\n                  신고하기\r\n                </button>\r\n                <button onClick={handleCloseModal} className={styles.cancelButton}>\r\n                  취소\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* 하단바 */}\r\n        <div className={styles.bottomNav}>\r\n          <div className={styles.navItem}>\r\n            <img\r\n              src={Icon4}\r\n              alt=\"내가 속한 방\"\r\n              className={styles.navIcon}\r\n              onClick={() => handleRoomClick(\"내가속한방\")}\r\n            />\r\n            <span className={styles.navText}>내가 속한 방</span>\r\n          </div>\r\n          <div className={styles.navItem}>\r\n            <img\r\n              src={Icon5}\r\n              alt=\"수업 소통 방\"\r\n              className={styles.navIcon}\r\n              onClick={() => handleRoomClick(\"수업소통방\")}\r\n            />\r\n            <span className={styles.navText}>수업 소통 방</span>\r\n          </div>\r\n          <div className={styles.navItem}>\r\n            <img\r\n              src={Icon6}\r\n              alt=\"자유 소통 방\"\r\n              className={styles.navIcon}\r\n              onClick={() => handleRoomClick(\"자유소통방\")}\r\n            />\r\n            <span className={styles.navText}>자유 소통 방</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}