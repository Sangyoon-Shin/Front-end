{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asx12\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\react\\\\front\\\\Front-end\\\\src\\\\pages\\\\JoinPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './JoinPage.module.css';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport back_logo from '../images/뒷모습 횃불이.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"https://8d48-117-16-196-138.ngrok-free.app\";\nconst JoinPage = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [studentId, setStudentId] = useState('');\n  const [email, setEmail] = useState('');\n  const [enteredCode, setEnteredCode] = useState('');\n  const [isCodeSent, setIsCodeSent] = useState(false);\n  const [isCodeVerified, setIsCodeVerified] = useState(false);\n  const [passwordPopup, setPasswordPopup] = useState(false);\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [passwordMatch, setPasswordMatch] = useState(null);\n  const [tempToken, setTempToken] = useState('');\n  const [error, setError] = useState(''); // 에러 메시지 상태\n  const [isStudent, setIsStudent] = useState(true); // 재학생 상태 추가\n\n  const navigate = useNavigate();\n  const handleSendVerificationCode = async () => {\n    try {\n      const response = await axios.post(`${BASE_URL}/api/auth/send-email`, null, {\n        params: {\n          email\n        }\n      });\n      alert(response.data);\n      setIsCodeSent(true);\n    } catch (error) {\n      console.error('Failed to send verification code:', error);\n      alert('인증번호 전송에 실패했습니다.');\n    }\n  };\n  const handleVerifyCode = async () => {\n    try {\n      const response = await axios.post(`${BASE_URL}/api/auth/verify-code`, null, {\n        params: {\n          email,\n          code: enteredCode\n        }\n      });\n\n      // 응답 데이터와 헤더를 콘솔에 출력하여 토큰의 위치를 확인\n      console.log('Response Data:', response.data);\n      console.log('Response Headers:', response.headers);\n      alert(response.data.message || '인증에 성공했습니다.');\n      setIsCodeVerified(true);\n      setPasswordPopup(true); // 비밀번호 변경 팝업 열기\n\n      // 토큰을 응답 헤더에서 추출 (예: 'Authorization' 헤더)\n      const tokenFromHeader = response.headers['authorization'] || response.headers['Authorization'];\n      if (tokenFromHeader && tokenFromHeader.startsWith('Bearer ')) {\n        setTempToken(tokenFromHeader.substring(7)); // 'Bearer ' 접두사 제거\n        console.log('Extracted Token:', tokenFromHeader.substring(7));\n      } else {\n        console.error('Token not found in response headers');\n        alert('토큰을 응답에서 찾을 수 없습니다. 백엔드 팀에 문의하세요.');\n      }\n    } catch (error) {\n      console.error('Verification failed:', error);\n      alert('인증번호가 올바르지 않습니다.');\n    }\n  };\n  const handlePasswordChange = e => {\n    setNewPassword(e.target.value);\n    checkPasswordMatch(e.target.value, confirmPassword);\n  };\n  const handleConfirmPasswordChange = e => {\n    setConfirmPassword(e.target.value);\n    checkPasswordMatch(newPassword, e.target.value);\n  };\n  const checkPasswordMatch = (password1, password2) => {\n    setPasswordMatch(password1 === password2);\n  };\n\n  // 비밀번호 변경 함수\n  const changePassword = async () => {\n    if (!newPassword || !confirmPassword) {\n      setError(\"모든 필드를 입력해 주세요.\");\n      return;\n    }\n    if (newPassword !== confirmPassword) {\n      alert(\"비밀번호가 일치하지 않습니다.\");\n      return;\n    }\n\n    // 비밀번호 규칙 검증\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/;\n    if (!passwordRegex.test(newPassword)) {\n      alert(\"비밀번호는 최소 8자 이상, 대문자, 소문자, 숫자, 특수문자를 포함해야 합니다.\");\n      return;\n    }\n\n    // studentId가 정확히 9자리인지 검증\n    if (studentId.length !== 9) {\n      alert(\"학번은 정확히 9자리여야 합니다.\");\n      return;\n    }\n    try {\n      // URLSearchParams를 사용하여 데이터를 URL 인코딩 형식으로 변환\n      const params = new URLSearchParams();\n      params.append('username', studentId); // 'username'을 'studentId'로 설정\n      params.append('password', newPassword); // 'password' 필드 추가\n      params.append('email', email);\n      params.append('name', name);\n      params.append('role', isStudent ? 'STUDENT' : 'GRADUATE');\n\n      // 사용자 정보와 비밀번호를 한 번에 전송\n      const response = await axios.post(`${BASE_URL}/join`, params, {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'Authorization': tempToken ? `Bearer ${tempToken}` : '' // tempToken이 있을 때만 설정\n        }\n      });\n      alert(\"비밀번호가 성공적으로 설정되었습니다.\");\n      setPasswordPopup(false);\n      setNewPassword('');\n      setConfirmPassword('');\n      setIsCodeSent(false);\n      setIsCodeVerified(false);\n      setEnteredCode('');\n      setTempToken('');\n      navigate('/LoginPage'); // 비밀번호 변경 후 로그인 페이지로 이동\n    } catch (error) {\n      if (error.response && error.response.status === 400) {\n        alert(\"비밀번호 유효성 검사 실패 또는 인증 코드가 유효하지 않습니다.\");\n      } else if (error.response && error.response.status === 401) {\n        alert(\"인증되지 않은 요청입니다.\");\n      } else {\n        alert(\"비밀번호 변경 실패: 다시 시도해 주세요.\");\n      }\n      console.error('비밀번호 변경 실패:', error);\n    }\n  };\n  const handleSubmit = async () => {\n    // 현재 흐름에서는 필요하지 않을 수 있습니다.\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: styles.header,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.logoSection,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"group-info\"],\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: back_logo,\n            className: styles[\"app-back_logo\"],\n            alt: \"back_logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"INFO!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.loginBox,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"\\uC774\\uB984\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            placeholder: \"\\uC774\\uB984 \\uC785\\uB825\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"studentId\",\n            children: \"\\uD559\\uBC88\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"studentId\",\n            placeholder: \"\\uD559\\uBC88 \\uC785\\uB825 (9\\uC790\\uB9AC)\",\n            value: studentId,\n            onChange: e => setStudentId(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: styles.mainLabel,\n            children: \"\\uC7AC\\uD559\\uC0DD / \\uC878\\uC5C5\\uC0DD \\uC120\\uD0DD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.radioContainer,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.radioOption,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"student\",\n                children: \"\\uC7AC\\uD559\\uC0DD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: \"student\",\n                name: \"status\",\n                value: \"student\",\n                checked: isStudent,\n                onChange: () => setIsStudent(true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.radioOption,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"graduate\",\n                children: \"\\uC878\\uC5C5\\uC0DD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: \"graduate\",\n                name: \"status\",\n                value: \"graduate\",\n                checked: !isStudent,\n                onChange: () => setIsStudent(false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"\\uC774\\uBA54\\uC77C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.inputWrapper,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              placeholder: \"\\uC774\\uBA54\\uC77C \\uC785\\uB825 (@inu.ac.kr)\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.inputBtn,\n              onClick: handleSendVerificationCode,\n              disabled: isCodeSent,\n              children: \"\\uC778\\uC99D\\uBC88\\uD638 \\uBC1B\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), isCodeSent && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"verificationCode\",\n            children: \"\\uC778\\uC99D\\uBC88\\uD638 \\uD655\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.inputWrapper,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"verificationCode\",\n              placeholder: \"\\uC778\\uC99D\\uBC88\\uD638 \\uC785\\uB825\",\n              value: enteredCode,\n              onChange: e => setEnteredCode(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.inputBtn,\n              onClick: handleVerifyCode,\n              disabled: isCodeVerified,\n              children: \"\\uC778\\uC99D\\uBC88\\uD638 \\uD655\\uC778\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.loginButton,\n        onClick: () => navigate('/LoginPage'),\n        children: \"\\uB2EB\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), passwordPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.popup,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC124\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"\\uC0C8 \\uBE44\\uBC00\\uBC88\\uD638\",\n        value: newPassword,\n        onChange: handlePasswordChange,\n        className: styles.inputField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n        value: confirmPassword,\n        onChange: handleConfirmPasswordChange,\n        className: styles.inputField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.changeBtn,\n        onClick: changePassword,\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC124\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }, this), (!newPassword || !confirmPassword) && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 25\n      }, this), newPassword && confirmPassword && passwordMatch === false && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 25\n      }, this), newPassword && confirmPassword && passwordMatch && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'green'\n        },\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD569\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.popupRow,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: styles.closeButton,\n          onClick: () => setPasswordPopup(false),\n          children: \"\\uB2EB\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 9\n  }, this);\n};\n_s(JoinPage, \"1nKHjvNTN3vOG+E3Ll2/9z+cuCE=\", false, function () {\n  return [useNavigate];\n});\n_c = JoinPage;\nexport default JoinPage;\nvar _c;\n$RefreshReg$(_c, \"JoinPage\");","map":{"version":3,"names":["React","useState","styles","useNavigate","axios","back_logo","jsxDEV","_jsxDEV","BASE_URL","JoinPage","_s","name","setName","studentId","setStudentId","email","setEmail","enteredCode","setEnteredCode","isCodeSent","setIsCodeSent","isCodeVerified","setIsCodeVerified","passwordPopup","setPasswordPopup","newPassword","setNewPassword","confirmPassword","setConfirmPassword","passwordMatch","setPasswordMatch","tempToken","setTempToken","error","setError","isStudent","setIsStudent","navigate","handleSendVerificationCode","response","post","params","alert","data","console","handleVerifyCode","code","log","headers","message","tokenFromHeader","startsWith","substring","handlePasswordChange","e","target","value","checkPasswordMatch","handleConfirmPasswordChange","password1","password2","changePassword","passwordRegex","test","length","URLSearchParams","append","status","handleSubmit","className","container","children","header","logoSection","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","loginBox","formContainer","formGroup","htmlFor","type","id","placeholder","onChange","mainLabel","radioContainer","radioOption","checked","inputWrapper","inputBtn","onClick","disabled","loginButton","popup","inputField","changeBtn","style","color","popupRow","closeButton","_c","$RefreshReg$"],"sources":["C:/Users/asx12/OneDrive/바탕 화면/react/front/Front-end/src/pages/JoinPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styles from './JoinPage.module.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport back_logo from '../images/뒷모습 횃불이.png';\r\n\r\nconst BASE_URL = \"https://8d48-117-16-196-138.ngrok-free.app\";\r\n\r\nconst JoinPage = () => {\r\n    const [name, setName] = useState('');\r\n    const [studentId, setStudentId] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [enteredCode, setEnteredCode] = useState('');\r\n    const [isCodeSent, setIsCodeSent] = useState(false);\r\n    const [isCodeVerified, setIsCodeVerified] = useState(false);\r\n\r\n    const [passwordPopup, setPasswordPopup] = useState(false);\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [passwordMatch, setPasswordMatch] = useState(null);\r\n    const [tempToken, setTempToken] = useState('');\r\n    const [error, setError] = useState(''); // 에러 메시지 상태\r\n    const [isStudent, setIsStudent] = useState(true); // 재학생 상태 추가\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleSendVerificationCode = async () => {\r\n        try {\r\n            const response = await axios.post(`${BASE_URL}/api/auth/send-email`, null, {\r\n                params: { email }\r\n            });\r\n            alert(response.data);\r\n            setIsCodeSent(true);\r\n        } catch (error) {\r\n            console.error('Failed to send verification code:', error);\r\n            alert('인증번호 전송에 실패했습니다.');\r\n        }\r\n    };\r\n\r\n    const handleVerifyCode = async () => {\r\n        try {\r\n            const response = await axios.post(`${BASE_URL}/api/auth/verify-code`, null, {\r\n                params: { email, code: enteredCode }\r\n            });\r\n\r\n            // 응답 데이터와 헤더를 콘솔에 출력하여 토큰의 위치를 확인\r\n            console.log('Response Data:', response.data);\r\n            console.log('Response Headers:', response.headers);\r\n\r\n            alert(response.data.message || '인증에 성공했습니다.');\r\n            setIsCodeVerified(true);\r\n            setPasswordPopup(true); // 비밀번호 변경 팝업 열기\r\n\r\n            // 토큰을 응답 헤더에서 추출 (예: 'Authorization' 헤더)\r\n            const tokenFromHeader = response.headers['authorization'] || response.headers['Authorization'];\r\n            if (tokenFromHeader && tokenFromHeader.startsWith('Bearer ')) {\r\n                setTempToken(tokenFromHeader.substring(7)); // 'Bearer ' 접두사 제거\r\n                console.log('Extracted Token:', tokenFromHeader.substring(7));\r\n            } else {\r\n                console.error('Token not found in response headers');\r\n                alert('토큰을 응답에서 찾을 수 없습니다. 백엔드 팀에 문의하세요.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Verification failed:', error);\r\n            alert('인증번호가 올바르지 않습니다.');\r\n        }\r\n    };\r\n\r\n    const handlePasswordChange = (e) => {\r\n        setNewPassword(e.target.value);\r\n        checkPasswordMatch(e.target.value, confirmPassword);\r\n    };\r\n\r\n    const handleConfirmPasswordChange = (e) => {\r\n        setConfirmPassword(e.target.value);\r\n        checkPasswordMatch(newPassword, e.target.value);\r\n    };\r\n\r\n    const checkPasswordMatch = (password1, password2) => {\r\n        setPasswordMatch(password1 === password2);\r\n    };\r\n\r\n    // 비밀번호 변경 함수\r\n    const changePassword = async () => {\r\n        if (!newPassword || !confirmPassword) {\r\n            setError(\"모든 필드를 입력해 주세요.\");\r\n            return;\r\n        }\r\n\r\n        if (newPassword !== confirmPassword) {\r\n            alert(\"비밀번호가 일치하지 않습니다.\");\r\n            return;\r\n        }\r\n\r\n        // 비밀번호 규칙 검증\r\n        const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/;\r\n        if (!passwordRegex.test(newPassword)) {\r\n            alert(\"비밀번호는 최소 8자 이상, 대문자, 소문자, 숫자, 특수문자를 포함해야 합니다.\");\r\n            return;\r\n        }\r\n\r\n        // studentId가 정확히 9자리인지 검증\r\n        if (studentId.length !== 9) {\r\n            alert(\"학번은 정확히 9자리여야 합니다.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // URLSearchParams를 사용하여 데이터를 URL 인코딩 형식으로 변환\r\n            const params = new URLSearchParams();\r\n            params.append('username', studentId); // 'username'을 'studentId'로 설정\r\n            params.append('password', newPassword); // 'password' 필드 추가\r\n            params.append('email', email);\r\n            params.append('name', name);\r\n            params.append('role', isStudent ? 'STUDENT' : 'GRADUATE');\r\n\r\n            // 사용자 정보와 비밀번호를 한 번에 전송\r\n            const response = await axios.post(`${BASE_URL}/join`, params, {\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                    'Authorization': tempToken ? `Bearer ${tempToken}` : '' // tempToken이 있을 때만 설정\r\n                }\r\n            });\r\n\r\n            alert(\"비밀번호가 성공적으로 설정되었습니다.\");\r\n            setPasswordPopup(false);\r\n            setNewPassword('');\r\n            setConfirmPassword('');\r\n            setIsCodeSent(false);\r\n            setIsCodeVerified(false);\r\n            setEnteredCode('');\r\n            setTempToken('');\r\n            navigate('/LoginPage'); // 비밀번호 변경 후 로그인 페이지로 이동\r\n        } catch (error) {\r\n            if (error.response && error.response.status === 400) {\r\n                alert(\"비밀번호 유효성 검사 실패 또는 인증 코드가 유효하지 않습니다.\");\r\n            } else if (error.response && error.response.status === 401) {\r\n                alert(\"인증되지 않은 요청입니다.\");\r\n            } else {\r\n                alert(\"비밀번호 변경 실패: 다시 시도해 주세요.\");\r\n            }\r\n            console.error('비밀번호 변경 실패:', error);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        // 현재 흐름에서는 필요하지 않을 수 있습니다.\r\n    };\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <header className={styles.header}>\r\n                <div className={styles.logoSection}>\r\n                    <div className={styles[\"group-info\"]}>\r\n                        <img src={back_logo} className={styles[\"app-back_logo\"]} alt=\"back_logo\" />\r\n                        <h2>INFO!</h2>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n            <h1>회원가입</h1>\r\n\r\n            <div className={styles.loginBox}>\r\n                <div className={styles.formContainer}>\r\n                    <div className={styles.formGroup}>\r\n                        <label htmlFor=\"name\">이름</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"name\"\r\n                            placeholder=\"이름 입력\"\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={styles.formGroup}>\r\n                        <label htmlFor=\"studentId\">학번</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"studentId\"\r\n                            placeholder=\"학번 입력 (9자리)\"\r\n                            value={studentId}\r\n                            onChange={(e) => setStudentId(e.target.value)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={styles.formGroup}>\r\n                        <label className={styles.mainLabel}>재학생 / 졸업생 선택</label>\r\n                        <div className={styles.radioContainer}>\r\n                            <div className={styles.radioOption}>\r\n                                <label htmlFor=\"student\">재학생</label>\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    id=\"student\"\r\n                                    name=\"status\"\r\n                                    value=\"student\"\r\n                                    checked={isStudent}\r\n                                    onChange={() => setIsStudent(true)}\r\n                                />\r\n                            </div>\r\n                            <div className={styles.radioOption}>\r\n                                <label htmlFor=\"graduate\">졸업생</label>\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    id=\"graduate\"\r\n                                    name=\"status\"\r\n                                    value=\"graduate\"\r\n                                    checked={!isStudent}\r\n                                    onChange={() => setIsStudent(false)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={styles.formGroup}>\r\n                        <label htmlFor=\"email\">이메일</label>\r\n                        <div className={styles.inputWrapper}>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email\"\r\n                                placeholder=\"이메일 입력 (@inu.ac.kr)\"\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                            <button\r\n                                className={styles.inputBtn}\r\n                                onClick={handleSendVerificationCode}\r\n                                disabled={isCodeSent}\r\n                            >\r\n                                인증번호 받기\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {isCodeSent && (\r\n                        <div className={styles.formGroup}>\r\n                            <label htmlFor=\"verificationCode\">인증번호 확인</label>\r\n                            <div className={styles.inputWrapper}>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    id=\"verificationCode\"\r\n                                    placeholder=\"인증번호 입력\"\r\n                                    value={enteredCode}\r\n                                    onChange={(e) => setEnteredCode(e.target.value)}\r\n                                />\r\n                                <button\r\n                                    className={styles.inputBtn}\r\n                                    onClick={handleVerifyCode}\r\n                                    disabled={isCodeVerified}\r\n                                >\r\n                                    인증번호 확인\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <button\r\n                    type=\"button\"\r\n                    className={styles.loginButton}\r\n                    onClick={() => navigate('/LoginPage')}\r\n                >\r\n                    닫기\r\n                </button>\r\n            </div>\r\n            {/* 비밀번호 변경 팝업 */}\r\n            {passwordPopup && (\r\n                <div className={styles.popup}>\r\n                    <h4>비밀번호 설정</h4>\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"새 비밀번호\"\r\n                        value={newPassword}\r\n                        onChange={handlePasswordChange}\r\n                        className={styles.inputField}\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"비밀번호 확인\"\r\n                        value={confirmPassword}\r\n                        onChange={handleConfirmPasswordChange}\r\n                        className={styles.inputField}\r\n                    />\r\n                    <button\r\n                        type=\"button\"\r\n                        className={styles.changeBtn}\r\n                        onClick={changePassword}\r\n                    >\r\n                        비밀번호 설정\r\n                    </button>\r\n\r\n                    {(!newPassword || !confirmPassword) && (\r\n                        <p style={{ color: 'red' }}>비밀번호를 입력해 주세요.</p>\r\n                    )}\r\n                    {newPassword && confirmPassword && passwordMatch === false && (\r\n                        <p style={{ color: 'red' }}>비밀번호가 일치하지 않습니다.</p>\r\n                    )}\r\n                    {newPassword && confirmPassword && passwordMatch && (\r\n                        <p style={{ color: 'green' }}>비밀번호가 일치합니다.</p>\r\n                    )}\r\n                    <div className={styles.popupRow}>\r\n                        <button\r\n                            type=\"button\"\r\n                            className={styles.closeButton}\r\n                            onClick={() => setPasswordPopup(false)}\r\n                        >\r\n                            닫기\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default JoinPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}