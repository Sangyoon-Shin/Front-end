{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asx12\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\react\\\\front\\\\Front-end\\\\src\\\\pages\\\\InformationCode.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useMediaQuery } from 'react-responsive'; // 반응형 페이지 만들기 위함\nimport axiosInstance from '../utils/api';\nimport Header from './_.js'; // 상단바 컴포넌트\nimport styles from './InformationCode.module.css'; // InformationCode용 CSS 파일\nimport CommunicationRoom_goBack from '../images/왼쪽 나가기 버튼.png';\nimport DownMenu from '../images/아래방향메뉴선택.png';\nimport SearchIcon from '../images/돋보기아이콘.png'; // 돋보기 아이콘\nimport IconScrap from '../images/횃불이스크랩.png';\nimport IconUnscrap from '../images/횃불이스크랩X.png';\n\n// import { useLocation } from 'react-router-dom';\n// const location = useLocation();\n// const { postId } = location.state || {};\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InformationCode = () => {\n  _s();\n  const [menuOpen, setMenuOpen] = useState(false); // 드롭다운 상태 관리\n  const [searchTerm, setSearchTerm] = useState(''); // 검색어 상태 관리\n  const [scrapStatus, setScrapStatus] = useState({}); // 각 게시물의 스크랩 상태 관리\n  const [posts, setPosts] = useState([]); // 게시물 목록 상태 관리\n  const [sortType, setSortType] = useState('latest'); // 초기 정렬 상태는 'latest'\n  const [selectedLanguage, setSelectedLanguage] = useState('전체'); // 선택된 언어 필터\n\n  // 페이징 및 추가 필터링 상태\n  const [page, setPage] = useState(0); // 현재 페이지 번호\n  const [size, setSize] = useState(10); // 페이지당 항목 수\n  const [totalPages, setTotalPages] = useState(0); // 전체 페이지 수\n  const [hashtagKeyword, setHashtagKeyword] = useState(''); // 해시태그 필터\n  const [typeKeyword, setTypeKeyword] = useState(''); // 타입 필터\n\n  // 로딩 상태 관리\n  const [isLoading, setIsLoading] = useState(false); // 데이터 로딩 상태\n\n  const navigate = useNavigate(); // useNavigate 훅을 컴포넌트 내부에서 호출\n\n  // 반응형 처리를 위한 useMediaQuery 사용\n  const isDesktop = useMediaQuery({\n    query: '(min-width: 1024px)'\n  });\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setIsLoading(true); // 로딩 시작\n      try {\n        const response = await axiosInstance.get('/api/board/coding', {\n          params: {\n            page,\n            size\n          } // 페이지와 사이즈를 쿼리 파라미터로 추가\n        });\n        const data = response.data; // Axios는 자동으로 JSON을 파싱합니다.\n        setPosts(data.content); // 게시물 데이터 설정\n        setTotalPages(data.totalPages); // 전체 페이지 수 설정\n        console.log(data);\n        if (!data.content || data.content.length === 0) {\n          console.warn('게시물이 없습니다.');\n          return;\n        }\n      } catch (error) {\n        console.error('게시물 목록을 불러오는 중 오류가 발생했습니다:', error);\n        alert('게시물 데이터를 불러오는데 문제가 발생했습니다. 다시 시도해주세요.');\n      } finally {\n        setIsLoading(false); // 로딩 종료\n      }\n    };\n    fetchPosts();\n  }, [page, size]); // page와 size 변경 시 재호출\n\n  // 페이지 번호 변경 시 호출\n  const handlePageChange = async pageNumber => {\n    setPage(pageNumber); // 페이지 번호 업데이트\n\n    try {\n      const response = await axiosInstance.get('/coding', {\n        params: {\n          page: pageNumber,\n          size: 10\n        }\n      });\n      const data = response.data;\n      setPosts(data.content); // 새로운 페이지 데이터로 업데이트\n      setTotalPages(data.totalPages); // 전체 페이지 수 업데이트\n    } catch (error) {\n      console.error('페이지 변경 중 오류 발생:', error);\n    }\n  };\n  const toggleMenu = () => {\n    setMenuOpen(!menuOpen); // 드롭다운 토글\n  };\n  const handleLanguageChange = async language => {\n    setSelectedLanguage(language);\n    setMenuOpen(false); // 메뉴 닫기\n\n    try {\n      const response = await axiosInstance.get('/coding', {\n        params: {\n          typeKeyword: language,\n          // 선택된 언어 전달\n          page: 0,\n          size: 10\n        }\n      });\n      const data = response.data;\n      setPosts(data.content); // 필터링된 게시물 업데이트\n    } catch (error) {\n      console.error('언어별 게시물 필터링 중 오류 발생:', error);\n    }\n  };\n  const toggleScrap = async id => {\n    try {\n      const response = await axiosInstance.post(`/coding/${id}/scrap`);\n\n      // 성공적으로 응답을 받은 경우 상태를 업데이트\n      setScrapStatus(prevState => ({\n        ...prevState,\n        [id]: !prevState[id] // 현재 상태를 토글\n      }));\n      console.log('스크랩 상태가 성공적으로 업데이트되었습니다.');\n    } catch (error) {\n      console.error('스크랩 상태 업데이트 중 오류가 발생했습니다:', error);\n      alert('스크랩 상태 업데이트에 실패했습니다. 다시 시도해주세요.');\n    }\n  };\n\n  // 검색 입력값을 변경하는 함수\n  const handleSearch = async () => {\n    console.log('검색 버튼 클릭됨');\n    if (searchTerm.trim() !== '') {\n      try {\n        console.log(`검색어: ${searchTerm}`);\n        const response = await axiosInstance.get('/coding', {\n          params: {\n            searchKeyword: searchTerm,\n            // 검색어 전달\n            page: 0,\n            size: 10\n          }\n        });\n        const data = response.data;\n        console.log('검색 결과:', data);\n\n        // 검색 결과를 게시물 목록으로 업데이트 (명세서에 따른 구조 반영)\n        setPosts(data.content); // 'content' 필드가 검색 결과로 가정\n\n        alert('검색이 완료되었습니다. 결과가 화면에 표시됩니다.');\n      } catch (error) {\n        console.error('검색 결과를 불러오는 중 오류가 발생했습니다:', error);\n        alert('검색 결과를 불러오는 중 오류가 발생했습니다.');\n      }\n    } else {\n      alert('검색어를 입력해주세요.');\n    }\n  };\n  const handleSearchChange = event => {\n    setSearchTerm(event.target.value); // 검색어 상태 업데이트\n  };\n  const handlePostClick = postId => {\n    navigate(`/coding/${postId}`); // 해당 게시물 상세 페이지로 이동\n    // navigate(`/post/${postId}`, { state: { postId } }); // 게시물 데이터를 상태로 전달해야하는 경우\n  };\n\n  // 정렬 버튼 클릭 시 정렬 상태 업데이트\n  const handleSort = async type => {\n    setSortType(type); // 정렬 상태 업데이트\n\n    try {\n      const params = {\n        page: 0,\n        size: 10\n      };\n\n      // 정렬 방식에 따라 추가 파라미터 설정\n      if (type === 'recommend') {\n        params.sortBy = 'likes'; // API 명세에 따라 변경 필요\n      }\n      const response = await axiosInstance.get('/coding', {\n        params\n      });\n      const data = response.data;\n      setPosts(data.content); // 정렬된 데이터로 게시물 목록 업데이트\n    } catch (error) {\n      console.error('정렬 데이터 로드 중 오류 발생:', error);\n      alert('정렬된 데이터를 가져오는 중 오류가 발생했습니다.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.titleContainer} ${isDesktop ? styles[\"desktopTitleContainer\"] : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: CommunicationRoom_goBack,\n          className: `${styles.goBackButton} ${isDesktop ? styles[\"desktopGoBackButton\"] : ''}`,\n          alt: \"\\uB4A4\\uB85C\\uAC00\\uAE30\",\n          onClick: () => navigate(-1) /* 뒤로 가기 동작 추가 */\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: `${styles.pageTitle} ${isDesktop ? styles[\"desktopPageTitle\"] : ''}`,\n          children: \"\\uC815\\uBCF4 \\uAC8C\\uC2DC\\uD310 - \\uCF54\\uB4DC \\uC9C8\\uBB38 \\uAC8C\\uC2DC\\uD310\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: DownMenu,\n          className: `${styles.downMenuButton} ${isDesktop ? styles.desktopDownMenuButton : ''}`,\n          alt: \"\\uC5B8\\uC5B4 \\uC120\\uD0DD\",\n          onClick: toggleMenu /* 드롭다운 열기/닫기 */\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), menuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.dropdownMenu} ${isDesktop ? styles.desktopDropdownMenu : ''}`,\n        children: ['전체', 'C/C++', 'Python', 'JAVA', 'C#', '기타'].map(language => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.menuItem} ${isDesktop ? styles.desktopMenuItem : ''} ${selectedLanguage === language ? styles.activeMenuItem : '' // 선택된 언어 강조\n          }`,\n          onClick: () => {\n            if (selectedLanguage !== language) {\n              handleLanguageChange(language); // 선택된 언어가 달라질 때만 함수 호출\n            }\n          },\n          children: language\n        }, language, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles[\"controlPanel\"]} ${isDesktop ? styles.desktopControlPanel : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${styles[\"writeButton\"]} ${isDesktop ? styles.desktopWriteButton : ''}`,\n          onClick: () => navigate('/QuestionCode') // 글쓰기 페이지로 이동\n          ,\n          children: \"\\uAE00\\uC4F0\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles[\"searchBar\"]} ${isDesktop ? styles[\"desktopSearchBar\"] : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: searchTerm,\n            onChange: handleSearchChange // 기존 함수명을 새 함수명으로 교체\n            ,\n            className: `${styles[\"searchInput\"]} ${isDesktop ? styles.desktopSearchInput : ''}`,\n            placeholder: \"\\uAC80\\uC0C9\\uC5B4 \\uC785\\uB825\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: SearchIcon,\n            className: `${styles.searchIcon} ${isDesktop ? styles.desktopSearchIcon : ''}`,\n            alt: \"\\uAC80\\uC0C9\",\n            onClick: handleSearch // 돋보기 아이콘 클릭 시 검색\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.sortButtons} ${isDesktop ? styles.desktopSortButtons : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${styles.latestSortButton} ${styles.latestSortButton} ${isDesktop ? styles.desktopLatestSortButton : ''} ${sortType === 'latest' ? styles.activeSortButton : ''}`,\n            onClick: () => handleSort('latest') // handleSort 함수 호출\n            ,\n            children: \"\\uCD5C\\uC2E0\\uC21C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${styles.recommendSortButton} ${styles.recommendSortButton} ${isDesktop ? styles.desktopRecommendSortButton : ''} ${sortType === 'recommend' ? styles.activeSortButton : ''}`,\n            onClick: () => handleSort('recommend') // handleSort 함수 호출\n            ,\n            children: \"\\uCD94\\uCC9C\\uC21C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.postList,\n        children: posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.postItem,\n          children: [index < 3 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.hotTag,\n            children: \"HOT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 29\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.postInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.postTitle,\n              onClick: () => handlePostClick(post.id) // 게시물 제목 클릭 시 상세 페이지로 이동\n              ,\n              children: [post.codingTitle || '제목 없음', \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.postDate,\n              children: post.codingCreatedTime ? new Date(post.codingCreatedTime).toLocaleDateString() // 작성 날짜 표시\n              : '날짜 없음'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: scrapStatus[post.id] ? IconScrap : IconUnscrap,\n            alt: scrapStatus[post.id] ? '스크랩됨' : '스크랩안됨',\n            className: styles.scrapIcon,\n            onClick: () => toggleScrap(post.id) // 스크랩 상태 변경 및 백엔드 전송\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.pagination,\n        children: Array.from({\n          length: totalPages\n        }, (_, i) => i + 1).map(pageNumber => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${styles.pageButton} ${page === pageNumber - 1 ? styles.activePageButton : ''}` // 현재 페이지 강조\n          ,\n          onClick: () => setPage(pageNumber - 1) // 페이지 번호 업데이트\n          ,\n          children: pageNumber\n        }, pageNumber, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n_s(InformationCode, \"lKsky6kQ/jZGLjR5TVUjCt//KKk=\", false, function () {\n  return [useNavigate, useMediaQuery];\n});\n_c = InformationCode;\nexport default InformationCode;\nvar _c;\n$RefreshReg$(_c, \"InformationCode\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useMediaQuery","axiosInstance","Header","styles","CommunicationRoom_goBack","DownMenu","SearchIcon","IconScrap","IconUnscrap","jsxDEV","_jsxDEV","InformationCode","_s","menuOpen","setMenuOpen","searchTerm","setSearchTerm","scrapStatus","setScrapStatus","posts","setPosts","sortType","setSortType","selectedLanguage","setSelectedLanguage","page","setPage","size","setSize","totalPages","setTotalPages","hashtagKeyword","setHashtagKeyword","typeKeyword","setTypeKeyword","isLoading","setIsLoading","navigate","isDesktop","query","fetchPosts","response","get","params","data","content","console","log","length","warn","error","alert","handlePageChange","pageNumber","toggleMenu","handleLanguageChange","language","toggleScrap","id","post","prevState","handleSearch","trim","searchKeyword","handleSearchChange","event","target","value","handlePostClick","postId","handleSort","type","sortBy","className","container","children","fileName","_jsxFileName","lineNumber","columnNumber","titleContainer","src","goBackButton","alt","onClick","pageTitle","downMenuButton","desktopDownMenuButton","dropdownMenu","desktopDropdownMenu","map","menuItem","desktopMenuItem","activeMenuItem","desktopControlPanel","desktopWriteButton","onChange","desktopSearchInput","placeholder","searchIcon","desktopSearchIcon","sortButtons","desktopSortButtons","latestSortButton","desktopLatestSortButton","activeSortButton","recommendSortButton","desktopRecommendSortButton","postList","index","postItem","hotTag","postInfo","postTitle","codingTitle","postDate","codingCreatedTime","Date","toLocaleDateString","scrapIcon","pagination","Array","from","_","i","pageButton","activePageButton","_c","$RefreshReg$"],"sources":["C:/Users/asx12/OneDrive/바탕 화면/react/front/Front-end/src/pages/InformationCode.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useMediaQuery } from 'react-responsive'; // 반응형 페이지 만들기 위함\r\nimport axiosInstance from '../utils/api';\r\nimport Header from './_.js';  // 상단바 컴포넌트\r\nimport styles from './InformationCode.module.css';  // InformationCode용 CSS 파일\r\nimport CommunicationRoom_goBack from '../images/왼쪽 나가기 버튼.png';\r\nimport DownMenu from '../images/아래방향메뉴선택.png';\r\nimport SearchIcon from '../images/돋보기아이콘.png';  // 돋보기 아이콘\r\nimport IconScrap from '../images/횃불이스크랩.png';\r\nimport IconUnscrap from '../images/횃불이스크랩X.png';\r\n\r\n// import { useLocation } from 'react-router-dom';\r\n// const location = useLocation();\r\n// const { postId } = location.state || {};\r\n\r\n\r\nconst InformationCode = () => {\r\n  const [menuOpen, setMenuOpen] = useState(false);  // 드롭다운 상태 관리\r\n  const [searchTerm, setSearchTerm] = useState(''); // 검색어 상태 관리\r\n  const [scrapStatus, setScrapStatus] = useState({}); // 각 게시물의 스크랩 상태 관리\r\n  const [posts, setPosts] = useState([]); // 게시물 목록 상태 관리\r\n  const [sortType, setSortType] = useState('latest'); // 초기 정렬 상태는 'latest'\r\n  const [selectedLanguage, setSelectedLanguage] = useState('전체'); // 선택된 언어 필터\r\n\r\n  // 페이징 및 추가 필터링 상태\r\n  const [page, setPage] = useState(0); // 현재 페이지 번호\r\n  const [size, setSize] = useState(10); // 페이지당 항목 수\r\n  const [totalPages, setTotalPages] = useState(0); // 전체 페이지 수\r\n  const [hashtagKeyword, setHashtagKeyword] = useState(''); // 해시태그 필터\r\n  const [typeKeyword, setTypeKeyword] = useState(''); // 타입 필터\r\n\r\n  // 로딩 상태 관리\r\n  const [isLoading, setIsLoading] = useState(false); // 데이터 로딩 상태\r\n\r\n  const navigate = useNavigate();  // useNavigate 훅을 컴포넌트 내부에서 호출\r\n\r\n  // 반응형 처리를 위한 useMediaQuery 사용\r\n  const isDesktop = useMediaQuery({ query: '(min-width: 1024px)' });\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      setIsLoading(true); // 로딩 시작\r\n      try {\r\n        const response = await axiosInstance.get('/api/board/coding', {\r\n          params: { page, size }, // 페이지와 사이즈를 쿼리 파라미터로 추가\r\n        });\r\n\r\n        const data = response.data; // Axios는 자동으로 JSON을 파싱합니다.\r\n        setPosts(data.content); // 게시물 데이터 설정\r\n        setTotalPages(data.totalPages); // 전체 페이지 수 설정\r\n        console.log(data);\r\n\r\n        if (!data.content || data.content.length === 0) {\r\n          console.warn('게시물이 없습니다.');\r\n          return;\r\n        }\r\n        \r\n\r\n      } catch (error) {\r\n        console.error('게시물 목록을 불러오는 중 오류가 발생했습니다:', error);\r\n        alert('게시물 데이터를 불러오는데 문제가 발생했습니다. 다시 시도해주세요.');\r\n      } finally {\r\n        setIsLoading(false); // 로딩 종료\r\n      }\r\n    };\r\n\r\n    fetchPosts();\r\n  }, [page, size]); // page와 size 변경 시 재호출\r\n\r\n  // 페이지 번호 변경 시 호출\r\n  const handlePageChange = async (pageNumber) => {\r\n    setPage(pageNumber); // 페이지 번호 업데이트\r\n\r\n    try {\r\n      const response = await axiosInstance.get('/coding', {\r\n        params: {\r\n          page: pageNumber,\r\n          size: 10,\r\n        },\r\n      });\r\n\r\n      const data = response.data;\r\n      setPosts(data.content); // 새로운 페이지 데이터로 업데이트\r\n      setTotalPages(data.totalPages); // 전체 페이지 수 업데이트\r\n    } catch (error) {\r\n      console.error('페이지 변경 중 오류 발생:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const toggleMenu = () => {\r\n    setMenuOpen(!menuOpen);  // 드롭다운 토글\r\n  };\r\n\r\n  const handleLanguageChange = async (language) => {\r\n    setSelectedLanguage(language);\r\n    setMenuOpen(false); // 메뉴 닫기\r\n\r\n    try {\r\n      const response = await axiosInstance.get('/coding', {\r\n        params: {\r\n          typeKeyword: language, // 선택된 언어 전달\r\n          page: 0,\r\n          size: 10,\r\n        },\r\n      });\r\n\r\n      const data = response.data;\r\n      setPosts(data.content); // 필터링된 게시물 업데이트\r\n    } catch (error) {\r\n      console.error('언어별 게시물 필터링 중 오류 발생:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const toggleScrap = async (id) => {\r\n    try {\r\n      const response = await axiosInstance.post(`/coding/${id}/scrap`);\r\n\r\n      // 성공적으로 응답을 받은 경우 상태를 업데이트\r\n      setScrapStatus((prevState) => ({\r\n        ...prevState,\r\n        [id]: !prevState[id], // 현재 상태를 토글\r\n      }));\r\n\r\n      console.log('스크랩 상태가 성공적으로 업데이트되었습니다.');\r\n    } catch (error) {\r\n      console.error('스크랩 상태 업데이트 중 오류가 발생했습니다:', error);\r\n      alert('스크랩 상태 업데이트에 실패했습니다. 다시 시도해주세요.');\r\n    }\r\n  };\r\n\r\n\r\n  // 검색 입력값을 변경하는 함수\r\n  const handleSearch = async () => {\r\n    console.log('검색 버튼 클릭됨');\r\n    if (searchTerm.trim() !== '') {\r\n      try {\r\n        console.log(`검색어: ${searchTerm}`);\r\n        const response = await axiosInstance.get('/coding', {\r\n          params: {\r\n            searchKeyword: searchTerm, // 검색어 전달\r\n            page: 0,\r\n            size: 10,\r\n          },\r\n        });\r\n\r\n        const data = response.data;\r\n        console.log('검색 결과:', data);\r\n\r\n        // 검색 결과를 게시물 목록으로 업데이트 (명세서에 따른 구조 반영)\r\n        setPosts(data.content); // 'content' 필드가 검색 결과로 가정\r\n\r\n        alert('검색이 완료되었습니다. 결과가 화면에 표시됩니다.');\r\n      } catch (error) {\r\n        console.error('검색 결과를 불러오는 중 오류가 발생했습니다:', error);\r\n        alert('검색 결과를 불러오는 중 오류가 발생했습니다.');\r\n      }\r\n    } else {\r\n      alert('검색어를 입력해주세요.');\r\n    }\r\n  };\r\n\r\n  const handleSearchChange = (event) => {\r\n    setSearchTerm(event.target.value); // 검색어 상태 업데이트\r\n  };\r\n\r\n\r\n  const handlePostClick = (postId) => {\r\n    navigate(`/coding/${postId}`); // 해당 게시물 상세 페이지로 이동\r\n    // navigate(`/post/${postId}`, { state: { postId } }); // 게시물 데이터를 상태로 전달해야하는 경우\r\n\r\n  };\r\n\r\n  // 정렬 버튼 클릭 시 정렬 상태 업데이트\r\n  const handleSort = async (type) => {\r\n    setSortType(type); // 정렬 상태 업데이트\r\n\r\n    try {\r\n      const params = {\r\n        page: 0,\r\n        size: 10,\r\n      };\r\n\r\n      // 정렬 방식에 따라 추가 파라미터 설정\r\n      if (type === 'recommend') {\r\n        params.sortBy = 'likes'; // API 명세에 따라 변경 필요\r\n      }\r\n\r\n      const response = await axiosInstance.get('/coding', { params });\r\n      const data = response.data;\r\n      setPosts(data.content); // 정렬된 데이터로 게시물 목록 업데이트\r\n    } catch (error) {\r\n      console.error('정렬 데이터 로드 중 오류 발생:', error);\r\n      alert('정렬된 데이터를 가져오는 중 오류가 발생했습니다.');\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Header />\r\n      <div className={styles.content}>\r\n        {/* 상단 제목 및 버튼 */}\r\n        <div className={`${styles.titleContainer} ${isDesktop ? styles[\"desktopTitleContainer\"] : ''}`}>\r\n          {/* 왼쪽 나가기 버튼 */}\r\n          <img\r\n            src={CommunicationRoom_goBack}\r\n            className={`${styles.goBackButton} ${isDesktop ? styles[\"desktopGoBackButton\"] : ''}`}\r\n            alt=\"뒤로가기\"\r\n            onClick={() => navigate(-1)}  /* 뒤로 가기 동작 추가 */\r\n          />\r\n          {/* 페이지 타이틀 */}\r\n          <h1 className={`${styles.pageTitle} ${isDesktop ? styles[\"desktopPageTitle\"] : ''}`}>\r\n            정보 게시판 - 코드 질문 게시판\r\n          </h1>\r\n          {/* 드롭다운 버튼 */}\r\n          <img\r\n            src={DownMenu}\r\n            className={`${styles.downMenuButton} ${isDesktop ? styles.desktopDownMenuButton : ''}`}\r\n            alt=\"언어 선택\"\r\n            onClick={toggleMenu}  /* 드롭다운 열기/닫기 */\r\n          />\r\n        </div>\r\n\r\n        {/* 드롭다운 메뉴 */}\r\n        {menuOpen && (\r\n          <div className={`${styles.dropdownMenu} ${isDesktop ? styles.desktopDropdownMenu : ''}`} >\r\n            {['전체', 'C/C++', 'Python', 'JAVA', 'C#', '기타'].map((language) => (\r\n              <div\r\n                key={language}\r\n                className={`${styles.menuItem} ${isDesktop ? styles.desktopMenuItem : ''} ${selectedLanguage === language ? styles.activeMenuItem : '' // 선택된 언어 강조\r\n                  }`}\r\n                onClick={() => {\r\n                  if (selectedLanguage !== language) {\r\n                    handleLanguageChange(language); // 선택된 언어가 달라질 때만 함수 호출\r\n                  }\r\n                }}\r\n              >\r\n                {language}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n\r\n        {/* 컨트롤 패널 (글쓰기 버튼, 검색창, 정렬 버튼) */}\r\n        <div className={`${styles[\"controlPanel\"]} ${isDesktop ? styles.desktopControlPanel : ''}`}>\r\n          {/* 글쓰기 버튼 */}\r\n          <button\r\n            className={`${styles[\"writeButton\"]} ${isDesktop ? styles.desktopWriteButton : ''}`}\r\n            onClick={() => navigate('/QuestionCode')} // 글쓰기 페이지로 이동\r\n          >\r\n            글쓰기\r\n          </button>\r\n\r\n          {/* 검색창 */}\r\n          <div className={`${styles[\"searchBar\"]} ${isDesktop ? styles[\"desktopSearchBar\"] : ''}`}>\r\n            <input\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={handleSearchChange} // 기존 함수명을 새 함수명으로 교체\r\n              className={`${styles[\"searchInput\"]} ${isDesktop ? styles.desktopSearchInput : ''}`}\r\n              placeholder=\"검색어 입력\"\r\n            />\r\n            <img\r\n              src={SearchIcon}\r\n              className={`${styles.searchIcon} ${isDesktop ? styles.desktopSearchIcon : ''}`}\r\n              alt=\"검색\"\r\n              onClick={handleSearch} // 돋보기 아이콘 클릭 시 검색\r\n            />\r\n          </div>\r\n\r\n\r\n          {/* 정렬 버튼들 */}\r\n          <div className={`${styles.sortButtons} ${isDesktop ? styles.desktopSortButtons : ''}`}>\r\n            <button\r\n              className={`${styles.latestSortButton} ${styles.latestSortButton} ${isDesktop ? styles.desktopLatestSortButton : ''} ${sortType === 'latest' ? styles.activeSortButton : ''}`}\r\n              onClick={() => handleSort('latest')} // handleSort 함수 호출\r\n            >\r\n              최신순\r\n            </button>\r\n\r\n            {/* 추천순 정렬 버튼 */}\r\n            <button\r\n              className={`${styles.recommendSortButton} ${styles.recommendSortButton} ${isDesktop ? styles.desktopRecommendSortButton : ''} ${sortType === 'recommend' ? styles.activeSortButton : ''}`}\r\n              onClick={() => handleSort('recommend')} // handleSort 함수 호출\r\n            >\r\n              추천순\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 게시물 목록 */}\r\n        <div className={styles.postList}>\r\n          {posts.map((post, index) => (\r\n            <div key={post.id} className={styles.postItem}>\r\n              {/* HOT 표시 (상단 3개의 게시물) */}\r\n              {index < 3 && <span className={styles.hotTag}>HOT</span>} {/* index를 사용해 상단 3개 표시 */}\r\n\r\n              {/* 게시물 제목 및 정보 */}\r\n              <div className={styles.postInfo}>\r\n                <span\r\n                  className={styles.postTitle}\r\n                  onClick={() => handlePostClick(post.id)} // 게시물 제목 클릭 시 상세 페이지로 이동\r\n                >\r\n                  {post.codingTitle || '제목 없음'} {/* 백엔드 데이터의 키에 맞춰 수정, 기본값 처리 */}\r\n                </span>\r\n                <span className={styles.postDate}>\r\n                  {post.codingCreatedTime\r\n                    ? new Date(post.codingCreatedTime).toLocaleDateString() // 작성 날짜 표시\r\n                    : '날짜 없음'}\r\n                </span>\r\n              </div>\r\n\r\n              {/* 스크랩 상태 아이콘 */}\r\n              <img\r\n                src={scrapStatus[post.id] ? IconScrap : IconUnscrap}\r\n                alt={scrapStatus[post.id] ? '스크랩됨' : '스크랩안됨'}\r\n                className={styles.scrapIcon}\r\n                onClick={() => toggleScrap(post.id)} // 스크랩 상태 변경 및 백엔드 전송\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n\r\n        {/* 페이지네이션 */}\r\n        <div className={styles.pagination}>\r\n          {Array.from({ length: totalPages }, (_, i) => i + 1).map((pageNumber) => (\r\n            <button\r\n              key={pageNumber}\r\n              className={`${styles.pageButton} ${page === pageNumber - 1 ? styles.activePageButton : ''}`} // 현재 페이지 강조\r\n              onClick={() => setPage(pageNumber - 1)} // 페이지 번호 업데이트\r\n            >\r\n              {pageNumber}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InformationCode;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}