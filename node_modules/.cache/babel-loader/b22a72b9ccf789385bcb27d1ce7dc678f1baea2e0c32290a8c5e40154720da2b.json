{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asx12\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\react\\\\front\\\\Front-end\\\\src\\\\pages\\\\InformationCode.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useMediaQuery } from 'react-responsive'; // 반응형 페이지 만들기 위함\nimport Header from './_.js'; // 상단바 컴포넌트\nimport styles from './InformationCode.module.css'; // InformationCode용 CSS 파일\nimport CommunicationRoom_goBack from '../images/왼쪽 나가기 버튼.png';\nimport DownMenu from '../images/아래방향메뉴선택.png';\nimport SearchIcon from '../images/돋보기아이콘.png'; // 돋보기 아이콘\nimport IconScrap from '../images/횃불이스크랩.png';\nimport IconUnscrap from '../images/횃불이스크랩X.png';\n\n// import { useLocation } from 'react-router-dom';\n// const location = useLocation();\n// const { postId } = location.state || {};\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InformationCode = () => {\n  _s();\n  const [menuOpen, setMenuOpen] = useState(false); // 드롭다운 상태 관리\n  const [searchTerm, setSearchTerm] = useState(''); // 검색어 상태 관리\n  const [scrapStatus, setScrapStatus] = useState({}); // 각 게시물의 스크랩 상태 관리\n  const [posts, setPosts] = useState([]); // 게시물 목록 상태 관리\n  const [sortType, setSortType] = useState('latest'); // 초기 정렬 상태는 'latest'\n  const [selectedLanguage, setSelectedLanguage] = useState('전체'); // 선택된 언어 필터\n\n  // 페이징 및 추가 필터링 상태\n  const [page, setPage] = useState(0); // 현재 페이지 번호\n  const [size, setSize] = useState(10); // 페이지당 항목 수\n  const [totalPages, setTotalPages] = useState(0); // 전체 페이지 수\n  const [hashtagKeyword, setHashtagKeyword] = useState(''); // 해시태그 필터\n  const [typeKeyword, setTypeKeyword] = useState(''); // 타입 필터\n\n  // 로딩 상태 관리\n  const [isLoading, setIsLoading] = useState(false); // 데이터 로딩 상태\n\n  const navigate = useNavigate(); // useNavigate 훅을 컴포넌트 내부에서 호출\n\n  // 반응형 처리를 위한 useMediaQuery 사용\n  const isDesktop = useMediaQuery({\n    query: '(min-width: 769px)'\n  });\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setIsLoading(true); // 로딩 시작\n      try {\n        const response = await fetch('https://ecc6-106-101-130-133.ngrok-free.app/api/board/coding', {\n          // page와 size 추가\n          // ?page=${page}&size=${size} -> 이거 써야할때 넣어주기\n          headers: {\n            'ngrok-skip-browser-warning': 'true' // 경고 페이지를 우회하는 헤더 추가\n          }\n        });\n        if (!response.ok) {\n          throw new Error('게시물 목록을 불러오는데 실패했습니다.');\n        }\n        const data = await response.json();\n        setPosts(data.content); // 게시물 데이터 설정\n        setTotalPages(data.totalPages); // 전체 페이지 수 설정\n        console.log(data);\n\n        // 데이터 가공 후 상태 업데이트\n        setPosts(data.content); // `content` 배열만 저장\n      } catch (error) {\n        console.error('게시물 목록을 불러오는 중 오류가 발생했습니다:', error);\n      } finally {\n        setIsLoading(false); // 로딩 종료\n      }\n    };\n    fetchPosts();\n  }, [page, size]); // page와 size 변경 시 재호출\n\n  // 페이지 번호 변경 시 호출\n  const handlePageChange = pageNumber => {\n    setPage(pageNumber); // 페이지 번호 업데이트\n  };\n  const toggleMenu = () => {\n    setMenuOpen(!menuOpen); // 드롭다운 토글\n  };\n  const handleLanguageChange = async language => {\n    setSelectedLanguage(language);\n    setMenuOpen(false); // 메뉴 닫기\n\n    try {\n      // 언어별 게시물 필터링\n      const response = await fetch(`https://ecc6-106-101-130-133.ngrok-free.app/api/board/coding?typeKeyword=${encodeURIComponent(language)}`, {\n        headers: {\n          'ngrok-skip-browser-warning': 'true' // 경고 페이지를 우회하는 헤더 추가\n        }\n      });\n      if (!response.ok) {\n        throw new Error('언어별 게시물을 불러오는데 실패했습니다.');\n      }\n      const data = await response.json();\n      console.log('언어별 필터링 데이터:', data);\n      setPosts(data.content); // API 응답 데이터의 `content` 필드만 설정\n    } catch (error) {\n      console.error('언어별 게시물 필터링 중 오류 발생:', error);\n    }\n  };\n  const toggleScrap = async id => {\n    try {\n      // 백엔드에 스크랩 상태를 업데이트하는 요청 보내기\n      const response = await fetch(`https://ecc6-106-101-130-133.ngrok-free.app/api/board/coding/${id}/scrap`,\n      // 명세서에 따른 엔드포인트\n      {\n        method: 'POST',\n        // POST 메서드 사용\n        headers: {\n          'ngrok-skip-browser-warning': 'true' // 경고 페이지 우회\n        }\n      });\n      if (!response.ok) {\n        throw new Error('스크랩 상태 업데이트에 실패했습니다.');\n      }\n\n      // 성공적으로 응답을 받은 경우 상태를 업데이트\n      setScrapStatus(prevState => ({\n        ...prevState,\n        [id]: !prevState[id] // 현재 상태를 토글\n      }));\n      console.log('스크랩 상태가 성공적으로 업데이트되었습니다.');\n    } catch (error) {\n      console.error('스크랩 상태 업데이트 중 오류가 발생했습니다:', error);\n      alert('스크랩 상태 업데이트에 실패했습니다. 다시 시도해주세요.');\n    }\n  };\n\n  // 검색 입력값을 변경하는 함수\n  const handleSearch = async () => {\n    console.log('검색 버튼 클릭됨');\n    if (searchTerm.trim() !== '') {\n      try {\n        console.log(`검색어: ${searchTerm}`);\n        const response = await fetch(`https://ecc6-106-101-130-133.ngrok-free.app/api/board/coding?searchKeyword=${encodeURIComponent(searchTerm)}`, {\n          headers: {\n            'ngrok-skip-browser-warning': 'true' // 경고 페이지를 우회하는 헤더 추가\n          }\n        });\n        if (!response.ok) {\n          throw new Error('검색 결과를 불러오는데 실패했습니다.');\n        }\n        const data = await response.json();\n        console.log('검색 결과:', data);\n\n        // 검색 결과를 게시물 목록으로 업데이트 (명세서에 따른 구조 반영)\n        setPosts(data.content); // 'content' 필드가 검색 결과로 가정\n\n        alert('검색이 완료되었습니다. 결과가 화면에 표시됩니다.');\n      } catch (error) {\n        console.error('검색 결과를 불러오는 중 오류가 발생했습니다:', error);\n        alert('검색 결과를 불러오는 중 오류가 발생했습니다.');\n      }\n    } else {\n      alert('검색어를 입력해주세요.');\n    }\n  };\n  const handleSearchChange = event => {\n    setSearchTerm(event.target.value); // 검색어 상태 업데이트\n  };\n  const handlePostClick = postId => {\n    navigate(`/coding/${postId}`); // 해당 게시물 상세 페이지로 이동\n    // navigate(`/post/${postId}`, { state: { postId } }); // 게시물 데이터를 상태로 전달해야하는 경우\n  };\n\n  // 정렬 버튼 클릭 시 정렬 상태 업데이트\n  const handleSort = async type => {\n    setSortType(type); // 정렬 상태 업데이트\n\n    try {\n      let url = 'https://ecc6-106-101-130-133.ngrok-free.app/api/board/coding';\n      if (type === 'recommend') {\n        // 추천순 정렬 엔드포인트\n        url = 'https://ecc6-106-101-130-133.ngrok-free.app/api/board/coding/sort-by-likes';\n      }\n      const response = await fetch(url, {\n        headers: {\n          'ngrok-skip-browser-warning': 'true'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('정렬된 데이터를 불러오는데 실패했습니다.');\n      }\n      const data = await response.json();\n      setPosts(data.content); // 정렬된 데이터로 게시물 목록 업데이트\n    } catch (error) {\n      console.error('정렬 데이터 로드 중 오류 발생:', error);\n      alert('정렬된 데이터를 가져오는 중 오류가 발생했습니다.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.titleContainer} ${isDesktop ? styles.desktopTitleContainer : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: CommunicationRoom_goBack,\n          className: `${styles.goBackButton} ${isDesktop ? styles.desktopGoBackButton : ''}`,\n          alt: \"\\uB4A4\\uB85C\\uAC00\\uAE30\",\n          onClick: () => navigate(-1) /* 뒤로 가기 동작 추가 */\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: `${styles.pageTitle} ${isDesktop ? styles.desktopPageTitle : ''}`,\n          children: \"\\uC815\\uBCF4 \\uAC8C\\uC2DC\\uD310 - \\uCF54\\uB4DC \\uC9C8\\uBB38 \\uAC8C\\uC2DC\\uD310\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: DownMenu,\n          className: `${styles.downMenuButton} ${isDesktop ? styles.desktopDownMenuButton : ''}`,\n          alt: \"\\uC5B8\\uC5B4 \\uC120\\uD0DD\",\n          onClick: toggleMenu /* 드롭다운 열기/닫기 */\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), menuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.dropdownMenu} ${isDesktop ? styles.desktopDropdownMenu : ''}`,\n        children: ['전체', 'C/C++', 'Python', 'JAVA', 'C#', '기타'].map(language => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.menuItem} ${isDesktop ? styles.desktopMenuItem : ''} ${selectedLanguage === language ? styles.activeMenuItem : '' // 선택된 언어 강조\n          }`,\n          onClick: () => {\n            if (selectedLanguage !== language) {\n              handleLanguageChange(language); // 선택된 언어가 달라질 때만 함수 호출\n            }\n          },\n          children: language\n        }, language, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.controlPanel} ${isDesktop ? styles.desktopControlPanel : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${styles.writeButton} ${isDesktop ? styles.desktopWriteButton : ''}`,\n          onClick: () => navigate('/QuestionCode') // 글쓰기 페이지로 이동\n          ,\n          children: \"\\uAE00\\uC4F0\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.searchBar} ${isDesktop ? styles.desktopSearchBar : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: searchTerm,\n            onChange: handleSearchChange // 기존 함수명을 새 함수명으로 교체\n            ,\n            className: `${styles.searchInput} ${isDesktop ? styles.desktopSearchInput : ''}`,\n            placeholder: \"\\uAC80\\uC0C9\\uC5B4 \\uC785\\uB825\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: SearchIcon,\n            className: `${styles.searchIcon} ${isDesktop ? styles.desktopSearchIcon : ''}`,\n            alt: \"\\uAC80\\uC0C9\",\n            onClick: handleSearch // 돋보기 아이콘 클릭 시 검색\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${styles.sortButton} ${styles.latestSortButton} ${isDesktop ? styles.desktopLatestSortButton : ''} ${sortType === 'latest' ? styles.activeSortButton : ''}`,\n          onClick: () => handleSort('latest') // handleSort 함수 호출\n          ,\n          children: \"\\uCD5C\\uC2E0\\uC21C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${styles.sortButton} ${styles.recommendSortButton} ${isDesktop ? styles.desktopRecommendSortButton : ''} ${sortType === 'recommend' ? styles.activeSortButton : ''}`,\n          onClick: () => handleSort('recommend') // handleSort 함수 호출\n          ,\n          children: \"\\uCD94\\uCC9C\\uC21C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.postList,\n        children: posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.postItem,\n          children: [index < 3 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.hotTag,\n            children: \"HOT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 29\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.postInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.postTitle,\n              onClick: () => handlePostClick(post.id) // 게시물 제목 클릭 시 상세 페이지로 이동\n              ,\n              children: [post.codingTitle || '제목 없음', \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.postDate,\n              children: post.codingCreatedTime ? new Date(post.codingCreatedTime).toLocaleDateString() // 작성 날짜 표시\n              : '날짜 없음'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: scrapStatus[post.id] ? IconScrap : IconUnscrap,\n            alt: scrapStatus[post.id] ? '스크랩됨' : '스크랩안됨',\n            className: styles.scrapIcon,\n            onClick: () => toggleScrap(post.id) // 스크랩 상태 변경 및 백엔드 전송\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.pagination,\n        children: Array.from({\n          length: totalPages\n        }, (_, i) => i + 1).map(pageNumber => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${styles.pageButton} ${page === pageNumber - 1 ? styles.activePageButton : ''}` // 현재 페이지 강조\n          ,\n          onClick: () => setPage(pageNumber - 1) // 페이지 번호 업데이트\n          ,\n          children: pageNumber\n        }, pageNumber, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n};\n_s(InformationCode, \"lKsky6kQ/jZGLjR5TVUjCt//KKk=\", false, function () {\n  return [useNavigate, useMediaQuery];\n});\n_c = InformationCode;\nexport default InformationCode;\nvar _c;\n$RefreshReg$(_c, \"InformationCode\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useMediaQuery","Header","styles","CommunicationRoom_goBack","DownMenu","SearchIcon","IconScrap","IconUnscrap","jsxDEV","_jsxDEV","InformationCode","_s","menuOpen","setMenuOpen","searchTerm","setSearchTerm","scrapStatus","setScrapStatus","posts","setPosts","sortType","setSortType","selectedLanguage","setSelectedLanguage","page","setPage","size","setSize","totalPages","setTotalPages","hashtagKeyword","setHashtagKeyword","typeKeyword","setTypeKeyword","isLoading","setIsLoading","navigate","isDesktop","query","fetchPosts","response","fetch","headers","ok","Error","data","json","content","console","log","error","handlePageChange","pageNumber","toggleMenu","handleLanguageChange","language","encodeURIComponent","toggleScrap","id","method","prevState","alert","handleSearch","trim","handleSearchChange","event","target","value","handlePostClick","postId","handleSort","type","url","className","container","children","fileName","_jsxFileName","lineNumber","columnNumber","titleContainer","desktopTitleContainer","src","goBackButton","desktopGoBackButton","alt","onClick","pageTitle","desktopPageTitle","downMenuButton","desktopDownMenuButton","dropdownMenu","desktopDropdownMenu","map","menuItem","desktopMenuItem","activeMenuItem","controlPanel","desktopControlPanel","writeButton","desktopWriteButton","searchBar","desktopSearchBar","onChange","searchInput","desktopSearchInput","placeholder","searchIcon","desktopSearchIcon","sortButton","latestSortButton","desktopLatestSortButton","activeSortButton","recommendSortButton","desktopRecommendSortButton","postList","post","index","postItem","hotTag","postInfo","postTitle","codingTitle","postDate","codingCreatedTime","Date","toLocaleDateString","scrapIcon","pagination","Array","from","length","_","i","pageButton","activePageButton","_c","$RefreshReg$"],"sources":["C:/Users/asx12/OneDrive/바탕 화면/react/front/Front-end/src/pages/InformationCode.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useMediaQuery } from 'react-responsive'; // 반응형 페이지 만들기 위함\r\nimport Header from './_.js';  // 상단바 컴포넌트\r\nimport styles from './InformationCode.module.css';  // InformationCode용 CSS 파일\r\nimport CommunicationRoom_goBack from '../images/왼쪽 나가기 버튼.png';\r\nimport DownMenu from '../images/아래방향메뉴선택.png';\r\nimport SearchIcon from '../images/돋보기아이콘.png';  // 돋보기 아이콘\r\nimport IconScrap from '../images/횃불이스크랩.png';\r\nimport IconUnscrap from '../images/횃불이스크랩X.png';\r\n\r\n// import { useLocation } from 'react-router-dom';\r\n// const location = useLocation();\r\n// const { postId } = location.state || {};\r\n\r\n\r\nconst InformationCode = () => {\r\n  const [menuOpen, setMenuOpen] = useState(false);  // 드롭다운 상태 관리\r\n  const [searchTerm, setSearchTerm] = useState(''); // 검색어 상태 관리\r\n  const [scrapStatus, setScrapStatus] = useState({}); // 각 게시물의 스크랩 상태 관리\r\n  const [posts, setPosts] = useState([]); // 게시물 목록 상태 관리\r\n  const [sortType, setSortType] = useState('latest'); // 초기 정렬 상태는 'latest'\r\n  const [selectedLanguage, setSelectedLanguage] = useState('전체'); // 선택된 언어 필터\r\n\r\n  // 페이징 및 추가 필터링 상태\r\n  const [page, setPage] = useState(0); // 현재 페이지 번호\r\n  const [size, setSize] = useState(10); // 페이지당 항목 수\r\n  const [totalPages, setTotalPages] = useState(0); // 전체 페이지 수\r\n  const [hashtagKeyword, setHashtagKeyword] = useState(''); // 해시태그 필터\r\n  const [typeKeyword, setTypeKeyword] = useState(''); // 타입 필터\r\n\r\n  // 로딩 상태 관리\r\n  const [isLoading, setIsLoading] = useState(false); // 데이터 로딩 상태\r\n\r\n  const navigate = useNavigate();  // useNavigate 훅을 컴포넌트 내부에서 호출\r\n\r\n  // 반응형 처리를 위한 useMediaQuery 사용\r\n  const isDesktop = useMediaQuery({ query: '(min-width: 769px)' });\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      setIsLoading(true); // 로딩 시작\r\n      try {\r\n        const response = await fetch('https://ecc6-106-101-130-133.ngrok-free.app/api/board/coding', {// page와 size 추가\r\n          // ?page=${page}&size=${size} -> 이거 써야할때 넣어주기\r\n          headers: {\r\n            'ngrok-skip-browser-warning': 'true', // 경고 페이지를 우회하는 헤더 추가\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('게시물 목록을 불러오는데 실패했습니다.');\r\n        }\r\n\r\n        const data = await response.json();\r\n        setPosts(data.content); // 게시물 데이터 설정\r\n        setTotalPages(data.totalPages); // 전체 페이지 수 설정\r\n        console.log(data);\r\n\r\n        // 데이터 가공 후 상태 업데이트\r\n        setPosts(data.content); // `content` 배열만 저장\r\n      } catch (error) {\r\n        console.error('게시물 목록을 불러오는 중 오류가 발생했습니다:', error);\r\n      } finally {\r\n        setIsLoading(false); // 로딩 종료\r\n      }\r\n    };\r\n\r\n    fetchPosts();\r\n  }, [page, size]); // page와 size 변경 시 재호출\r\n\r\n  // 페이지 번호 변경 시 호출\r\n  const handlePageChange = (pageNumber) => {\r\n    setPage(pageNumber); // 페이지 번호 업데이트\r\n  };\r\n\r\n  const toggleMenu = () => {\r\n    setMenuOpen(!menuOpen);  // 드롭다운 토글\r\n  };\r\n\r\n  const handleLanguageChange = async (language) => {\r\n    setSelectedLanguage(language);\r\n    setMenuOpen(false); // 메뉴 닫기\r\n\r\n    try {\r\n      // 언어별 게시물 필터링\r\n      const response = await fetch(\r\n        `https://ecc6-106-101-130-133.ngrok-free.app/api/board/coding?typeKeyword=${encodeURIComponent(language)}`,\r\n        {\r\n          headers: {\r\n            'ngrok-skip-browser-warning': 'true', // 경고 페이지를 우회하는 헤더 추가\r\n          },\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error('언어별 게시물을 불러오는데 실패했습니다.');\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('언어별 필터링 데이터:', data);\r\n\r\n      setPosts(data.content); // API 응답 데이터의 `content` 필드만 설정\r\n    } catch (error) {\r\n      console.error('언어별 게시물 필터링 중 오류 발생:', error);\r\n    }\r\n  };\r\n\r\n  const toggleScrap = async (id) => {\r\n    try {\r\n      // 백엔드에 스크랩 상태를 업데이트하는 요청 보내기\r\n      const response = await fetch(\r\n        `https://ecc6-106-101-130-133.ngrok-free.app/api/board/coding/${id}/scrap`, // 명세서에 따른 엔드포인트\r\n        {\r\n          method: 'POST', // POST 메서드 사용\r\n          headers: {\r\n            'ngrok-skip-browser-warning': 'true', // 경고 페이지 우회\r\n          },\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error('스크랩 상태 업데이트에 실패했습니다.');\r\n      }\r\n\r\n      // 성공적으로 응답을 받은 경우 상태를 업데이트\r\n      setScrapStatus((prevState) => ({\r\n        ...prevState,\r\n        [id]: !prevState[id], // 현재 상태를 토글\r\n      }));\r\n\r\n      console.log('스크랩 상태가 성공적으로 업데이트되었습니다.');\r\n    } catch (error) {\r\n      console.error('스크랩 상태 업데이트 중 오류가 발생했습니다:', error);\r\n      alert('스크랩 상태 업데이트에 실패했습니다. 다시 시도해주세요.');\r\n    }\r\n  };\r\n\r\n\r\n  // 검색 입력값을 변경하는 함수\r\n  const handleSearch = async () => {\r\n    console.log('검색 버튼 클릭됨');\r\n    if (searchTerm.trim() !== '') {\r\n      try {\r\n        console.log(`검색어: ${searchTerm}`);\r\n        const response = await fetch(\r\n          `https://ecc6-106-101-130-133.ngrok-free.app/api/board/coding?searchKeyword=${encodeURIComponent(searchTerm)}`,\r\n          {\r\n            headers: {\r\n              'ngrok-skip-browser-warning': 'true', // 경고 페이지를 우회하는 헤더 추가\r\n            },\r\n          }\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error('검색 결과를 불러오는데 실패했습니다.');\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log('검색 결과:', data);\r\n\r\n        // 검색 결과를 게시물 목록으로 업데이트 (명세서에 따른 구조 반영)\r\n        setPosts(data.content); // 'content' 필드가 검색 결과로 가정\r\n\r\n        alert('검색이 완료되었습니다. 결과가 화면에 표시됩니다.');\r\n      } catch (error) {\r\n        console.error('검색 결과를 불러오는 중 오류가 발생했습니다:', error);\r\n        alert('검색 결과를 불러오는 중 오류가 발생했습니다.');\r\n      }\r\n    } else {\r\n      alert('검색어를 입력해주세요.');\r\n    }\r\n  };\r\n\r\n  const handleSearchChange = (event) => {\r\n    setSearchTerm(event.target.value); // 검색어 상태 업데이트\r\n  };\r\n\r\n\r\n  const handlePostClick = (postId) => {\r\n    navigate(`/coding/${postId}`); // 해당 게시물 상세 페이지로 이동\r\n    // navigate(`/post/${postId}`, { state: { postId } }); // 게시물 데이터를 상태로 전달해야하는 경우\r\n\r\n  };\r\n\r\n  // 정렬 버튼 클릭 시 정렬 상태 업데이트\r\n  const handleSort = async (type) => {\r\n    setSortType(type); // 정렬 상태 업데이트\r\n\r\n    try {\r\n      let url = 'https://ecc6-106-101-130-133.ngrok-free.app/api/board/coding';\r\n\r\n      if (type === 'recommend') {\r\n        // 추천순 정렬 엔드포인트\r\n        url = 'https://ecc6-106-101-130-133.ngrok-free.app/api/board/coding/sort-by-likes';\r\n        \r\n      }\r\n\r\n      const response = await fetch(url, {\r\n        headers: {\r\n          'ngrok-skip-browser-warning': 'true',\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('정렬된 데이터를 불러오는데 실패했습니다.');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setPosts(data.content); // 정렬된 데이터로 게시물 목록 업데이트\r\n    } catch (error) {\r\n      console.error('정렬 데이터 로드 중 오류 발생:', error);\r\n      alert('정렬된 데이터를 가져오는 중 오류가 발생했습니다.');\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Header />\r\n      <div className={styles.content}>\r\n        {/* 상단 제목 및 버튼 */}\r\n        <div className={`${styles.titleContainer} ${isDesktop ? styles.desktopTitleContainer : ''}`}>\r\n          {/* 왼쪽 나가기 버튼 */}\r\n          <img\r\n            src={CommunicationRoom_goBack}\r\n            className={`${styles.goBackButton} ${isDesktop ? styles.desktopGoBackButton : ''}`}\r\n            alt=\"뒤로가기\"\r\n            onClick={() => navigate(-1)}  /* 뒤로 가기 동작 추가 */\r\n          />\r\n          {/* 페이지 타이틀 */}\r\n          <h1 className={`${styles.pageTitle} ${isDesktop ? styles.desktopPageTitle : ''}`}>\r\n            정보 게시판 - 코드 질문 게시판\r\n          </h1>\r\n          {/* 드롭다운 버튼 */}\r\n          <img\r\n            src={DownMenu}\r\n            className={`${styles.downMenuButton} ${isDesktop ? styles.desktopDownMenuButton : ''}`}\r\n            alt=\"언어 선택\"\r\n            onClick={toggleMenu}  /* 드롭다운 열기/닫기 */\r\n          />\r\n        </div>\r\n\r\n        {/* 드롭다운 메뉴 */}\r\n        {menuOpen && (\r\n          <div className={`${styles.dropdownMenu} ${isDesktop ? styles.desktopDropdownMenu : ''}`}>\r\n            {['전체', 'C/C++', 'Python', 'JAVA', 'C#', '기타'].map((language) => (\r\n              <div\r\n                key={language}\r\n                className={`${styles.menuItem} ${isDesktop ? styles.desktopMenuItem : ''} ${selectedLanguage === language ? styles.activeMenuItem : '' // 선택된 언어 강조\r\n                  }`}\r\n                onClick={() => {\r\n                  if (selectedLanguage !== language) {\r\n                    handleLanguageChange(language); // 선택된 언어가 달라질 때만 함수 호출\r\n                  }\r\n                }}\r\n              >\r\n                {language}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n\r\n        {/* 컨트롤 패널 (글쓰기 버튼, 검색창, 정렬 버튼) */}\r\n        <div className={`${styles.controlPanel} ${isDesktop ? styles.desktopControlPanel : ''}`}>\r\n          {/* 글쓰기 버튼 */}\r\n          <button\r\n            className={`${styles.writeButton} ${isDesktop ? styles.desktopWriteButton : ''}`}\r\n            onClick={() => navigate('/QuestionCode')} // 글쓰기 페이지로 이동\r\n          >\r\n            글쓰기\r\n          </button>\r\n\r\n          {/* 검색창 */}\r\n          <div className={`${styles.searchBar} ${isDesktop ? styles.desktopSearchBar : ''}`}>\r\n            <input\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={handleSearchChange} // 기존 함수명을 새 함수명으로 교체\r\n              className={`${styles.searchInput} ${isDesktop ? styles.desktopSearchInput : ''}`}\r\n              placeholder=\"검색어 입력\"\r\n            />\r\n            <img\r\n              src={SearchIcon}\r\n              className={`${styles.searchIcon} ${isDesktop ? styles.desktopSearchIcon : ''}`}\r\n              alt=\"검색\"\r\n              onClick={handleSearch} // 돋보기 아이콘 클릭 시 검색\r\n            />\r\n          </div>\r\n\r\n\r\n          {/* 최신순 정렬 버튼 */}\r\n          <button\r\n            className={`${styles.sortButton} ${styles.latestSortButton} ${isDesktop ? styles.desktopLatestSortButton : ''} ${sortType === 'latest' ? styles.activeSortButton : ''}`}\r\n            onClick={() => handleSort('latest')} // handleSort 함수 호출\r\n          >\r\n            최신순\r\n          </button>\r\n\r\n          {/* 추천순 정렬 버튼 */}\r\n          <button\r\n            className={`${styles.sortButton} ${styles.recommendSortButton} ${isDesktop ? styles.desktopRecommendSortButton : ''} ${sortType === 'recommend' ? styles.activeSortButton : ''}`}\r\n            onClick={() => handleSort('recommend')} // handleSort 함수 호출\r\n          >\r\n            추천순\r\n          </button>\r\n\r\n\r\n        </div>\r\n\r\n        {/* 게시물 목록 */}\r\n        <div className={styles.postList}>\r\n          {posts.map((post, index) => (\r\n            <div key={post.id} className={styles.postItem}>\r\n              {/* HOT 표시 (상단 3개의 게시물) */}\r\n              {index < 3 && <span className={styles.hotTag}>HOT</span>} {/* index를 사용해 상단 3개 표시 */}\r\n\r\n              {/* 게시물 제목 및 정보 */}\r\n              <div className={styles.postInfo}>\r\n                <span\r\n                  className={styles.postTitle}\r\n                  onClick={() => handlePostClick(post.id)} // 게시물 제목 클릭 시 상세 페이지로 이동\r\n                >\r\n                  {post.codingTitle || '제목 없음'} {/* 백엔드 데이터의 키에 맞춰 수정, 기본값 처리 */}\r\n                </span>\r\n                <span className={styles.postDate}>\r\n                  {post.codingCreatedTime\r\n                    ? new Date(post.codingCreatedTime).toLocaleDateString() // 작성 날짜 표시\r\n                    : '날짜 없음'}\r\n                </span>\r\n              </div>\r\n\r\n              {/* 스크랩 상태 아이콘 */}\r\n              <img\r\n                src={scrapStatus[post.id] ? IconScrap : IconUnscrap}\r\n                alt={scrapStatus[post.id] ? '스크랩됨' : '스크랩안됨'}\r\n                className={styles.scrapIcon}\r\n                onClick={() => toggleScrap(post.id)} // 스크랩 상태 변경 및 백엔드 전송\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n\r\n        {/* 페이지네이션 */}\r\n        <div className={styles.pagination}>\r\n          {Array.from({ length: totalPages }, (_, i) => i + 1).map((pageNumber) => (\r\n            <button\r\n              key={pageNumber}\r\n              className={`${styles.pageButton} ${page === pageNumber - 1 ? styles.activePageButton : ''}`} // 현재 페이지 강조\r\n              onClick={() => setPage(pageNumber - 1)} // 페이지 번호 업데이트\r\n            >\r\n              {pageNumber}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InformationCode;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}