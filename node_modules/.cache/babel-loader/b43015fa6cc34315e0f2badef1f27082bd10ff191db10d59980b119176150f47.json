{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asx12\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\react\\\\front\\\\Front-end\\\\src\\\\pages\\\\FreepostingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styles from \"./FreepostingPage.module.css\";\nimport main_mascot from '../images/대학 심볼 횃불이.png';\nimport main_bell from '../images/bell.png';\nimport main_message from '../images/message.png';\nimport main_my from '../images/my.png';\nimport arrow from '../images/arrow.png';\nimport scrab from '../images/스크랩횃불이.png';\nimport heart from '../images/heart.png';\nimport filledHeart from '../images/filledheart.png';\nimport bar from '../images/bar.png';\nimport Header from './_.js'; // 상단바 컴포넌트\n\n// API에서 사용할 기본 URL과 헤더 설정\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = 'https://your-backend-api.com/api/board';\nconst getAuthHeaders = () => {\n  const accessToken = localStorage.getItem('accessToken'); // accessToken을 로컬스토리지에서 가져옴\n  return {\n    'Authorization': `Bearer ${accessToken}`,\n    'Content-Type': 'application/json'\n  };\n};\nconst FreepostingPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const fileInputRef = useRef(null);\n  const [content, setContent] = useState('');\n  const [comments, setComments] = useState([]);\n  const [commentContent, setCommentContent] = useState('');\n  const [replyContents, setReplyContents] = useState([]);\n  const [nickname, setNickname] = useState('');\n  const [nicknameCount, setNicknameCount] = useState({\n    int: 0,\n    short: 0,\n    double: 0,\n    char: 0\n  });\n  const [isHeartFilled, setIsHeartFilled] = useState(false);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [replyVisible, setReplyVisible] = useState(''); // 신고 내용 저장\n\n  const currentDate = new Date();\n  const year = currentDate.getFullYear();\n  const month = String(currentDate.getMonth() + 1).padStart(2, '0');\n  const day = String(currentDate.getDate()).padStart(2, '0');\n  const formattedDate = `${year}.${month}.${day}`;\n  const [reportContent, setReportContent] = useState('');\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\n  const handleBackClick = () => navigate(-1);\n\n  // 새로고침 시 로컬 스토리지에서 상태를 불러옵니다.\n  useEffect(() => {\n    const savedComments = localStorage.getItem('comments');\n    const savedHeartStatus = localStorage.getItem('isHeartFilled');\n    const savedNicknameCount = localStorage.getItem('nicknameCount');\n    const savedReplyVisible = localStorage.getItem('replyVisible');\n    if (savedComments) setComments(JSON.parse(savedComments));\n    if (savedHeartStatus) setIsHeartFilled(JSON.parse(savedHeartStatus));\n    if (savedNicknameCount) setNicknameCount(JSON.parse(savedNicknameCount));\n    if (savedReplyVisible) setReplyVisible(JSON.parse(savedReplyVisible));\n  }, []);\n\n  // 댓글 상태가 변경될 때마다 로컬 스토리지에 저장합니다.\n  useEffect(() => {\n    localStorage.setItem('comments', JSON.stringify(comments));\n  }, [comments]);\n\n  // 좋아요 상태가 변경될 때마다 로컬 스토리지에 저장합니다.\n  useEffect(() => {\n    localStorage.setItem('isHeartFilled', JSON.stringify(isHeartFilled));\n  }, [isHeartFilled]);\n\n  // 닉네임 카운트가 변경될 때마다 로컬 스토리지에 저장합니다.\n  useEffect(() => {\n    localStorage.setItem('nicknameCount', JSON.stringify(nicknameCount));\n  }, [nicknameCount]);\n\n  // 대댓글 입력창 가시성 상태가 변경될 때마다 로컬 스토리지에 저장합니다.\n  useEffect(() => {\n    localStorage.setItem('replyVisible', JSON.stringify(replyVisible));\n  }, [replyVisible]);\n  useEffect(() => {\n    if (!nickname) {\n      const types = ['int', 'short', 'double', 'char'];\n      const randomType = types[Math.floor(Math.random() * types.length)];\n      setNickname(randomType);\n    }\n  }, [nickname]);\n  useEffect(() => {\n    const fetchHeartStatus = async () => {\n      try {\n        const response = await fetch(`${BASE_URL}/like-status`, {\n          method: 'GET',\n          headers: getAuthHeaders()\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setIsHeartFilled(data.liked); // 서버로부터 불러온 좋아요 상태 반영\n        } else {\n          console.error('좋아요 상태 불러오기에 실패했습니다.');\n        }\n      } catch (error) {\n        console.error('좋아요 상태 불러오는 중 오류 발생:', error);\n      }\n    };\n    fetchHeartStatus();\n  }, []);\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const response = await fetch(`${BASE_URL}/free/comments`, {\n          method: 'GET',\n          headers: getAuthHeaders()\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setComments(data.comments); // 서버에서 가져온 댓글을 상태로 설정\n        } else {\n          console.error('댓글 불러오기에 실패했습니다.');\n        }\n      } catch (error) {\n        console.error('댓글 불러오는 중 오류 발생:', error);\n      }\n    };\n    fetchComments();\n  }, []);\n  const handleContentChange = e => {\n    setContent(e.target.value);\n  };\n  const handleCommentChange = e => {\n    setCommentContent(e.target.value);\n  };\n  const handleReplyChange = (index, e) => {\n    const newReplyContents = [...replyContents];\n    newReplyContents[index] = e.target.value;\n    setReplyContents(newReplyContents);\n  };\n  const handleAddComment = async () => {\n    if (commentContent.trim() !== '') {\n      const newNicknameCount = {\n        ...nicknameCount\n      };\n      newNicknameCount[nickname] += 1;\n      setNicknameCount(newNicknameCount);\n      const newComment = {\n        nickname: `${nickname}${newNicknameCount[nickname]}`,\n        content: commentContent,\n        replies: []\n      };\n      try {\n        const response = await fetch(`${BASE_URL}/free/comments`, {\n          method: 'POST',\n          headers: getAuthHeaders(),\n          body: JSON.stringify(newComment)\n        });\n        if (response.ok) {\n          const savedComment = await response.json(); // 서버에서 저장된 댓글 데이터 반환\n          setComments([...comments, savedComment]);\n          setNicknameCount(prev => ({\n            ...prev,\n            [nickname]: prev[nickname] + 1\n          }));\n          setCommentContent('');\n        } else {\n          console.error('댓글 추가에 실패했습니다.');\n        }\n      } catch (error) {\n        console.error('댓글 추가 중 오류 발생:', error);\n      }\n    }\n  };\n  const handleAddReply = async index => {\n    if (replyContents[index].trim() !== '') {\n      const updatedComments = [...comments];\n      const newNicknameCount = {\n        ...nicknameCount\n      };\n      newNicknameCount[nickname] += 1;\n      setNicknameCount(newNicknameCount);\n      const newReply = {\n        nickname: `${nickname}${newNicknameCount[nickname]}`,\n        content: replyContents[index]\n      };\n      try {\n        const response = await fetch(`${BASE_URL}/free/comments/${index}/replies`, {\n          method: 'POST',\n          headers: getAuthHeaders(),\n          body: JSON.stringify(newReply)\n        });\n        if (response.ok) {\n          const savedReply = await response.json(); // 서버에서 저장된 대댓글 데이터 반환\n          updatedComments[index].replies.push(savedReply);\n          setComments(updatedComments);\n          setNicknameCount(prev => ({\n            ...prev,\n            [nickname]: prev[nickname] + 1\n          }));\n          const newReplyContents = [...replyContents];\n          newReplyContents[index] = '';\n          setReplyContents(newReplyContents);\n          setReplyVisible(prev => ({\n            ...prev,\n            [index]: false\n          }));\n        } else {\n          console.error('대댓글 추가에 실패했습니다.');\n        }\n      } catch (error) {\n        console.error('대댓글 추가 중 오류 발생:', error);\n      }\n    }\n  };\n  const handleToggleReply = index => {\n    setReplyVisible(prev => ({\n      ...prev,\n      [index]: !prev[index]\n    }));\n  };\n  const handleHeartClick = async () => {\n    const newHeartStatus = !isHeartFilled;\n    setIsHeartFilled(newHeartStatus);\n    try {\n      const response = await fetch(`${BASE_URL}/free/like`, {\n        method: 'POST',\n        headers: getAuthHeaders(),\n        body: JSON.stringify({\n          isHeartFilled: newHeartStatus\n        })\n      });\n      if (!response.ok) {\n        console.error('좋아요 요청에 실패했습니다.');\n        setIsHeartFilled(!newHeartStatus); // 요청 실패 시 상태 되돌림\n      }\n    } catch (error) {\n      console.error('좋아요 요청 중 오류 발생:', error);\n      setIsHeartFilled(!newHeartStatus); // 오류 발생 시 상태 되돌림\n    }\n  };\n  const togglePopup = () => {\n    setIsPopupOpen(!isPopupOpen);\n  };\n  const submitReport = async () => {\n    try {\n      const response = await fetch(`${BASE_URL}/free/report`, {\n        method: 'POST',\n        headers: getAuthHeaders(),\n        body: JSON.stringify({\n          content: reportContent\n        })\n      });\n      if (response.ok) {\n        setReportContent('');\n        togglePopup();\n        setIsAlertOpen(true);\n        setTimeout(() => {\n          setIsAlertOpen(false);\n        }, 3000);\n      } else {\n        console.error('신고 제출에 실패했습니다.');\n      }\n    } catch (error) {\n      console.error('신고 제출 중 오류 발생:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"content\"],\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: arrow,\n        className: styles[\"app-arrow\"],\n        alt: \"back_arrow\",\n        onClick: () => navigate(-1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles[\"title-text2\"],\n        children: \"\\uC790\\uC720\\uAC8C\\uC2DC\\uD310\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: bar,\n        className: styles[\"app-bar\"],\n        alt: \"bar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles[\"title-text3\"],\n        children: \"\\uAC8C\\uC2DC\\uD310 \\uC81C\\uBAA9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"right-section\"],\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: main_message,\n          className: styles[\"app-main_message2\"],\n          alt: \"main_message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: scrab,\n          className: styles[\"app-main_message3\"],\n          alt: \"main_message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles[\"title-text4\"],\n        children: [\"\\uC791\\uC131\\uC77C: \", formattedDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"report\"],\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: togglePopup,\n          className: styles[\"report-button\"],\n          children: \"\\uC2E0\\uACE0\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), isPopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"popup\"],\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"popup-inner\"],\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uC2E0\\uACE0\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uC2E0\\uACE0 \\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: styles[\"popup-textarea\"],\n          onChange: e => setReportContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"popup-button-container\"],\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: togglePopup,\n            className: styles[\"popup-close\"],\n            children: \"\\uB2EB\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: submitReport,\n            className: styles[\"popup-receive\"],\n            children: \"\\uC81C\\uCD9C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }, this), isAlertOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"alert-popup\"],\n      children: \"\\uC81C\\uCD9C\\uC774 \\uC644\\uB8CC\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"content-input\"],\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: styles[\"textarea\"],\n        value: content,\n        onChange: handleContentChange,\n        placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: fileInputRef,\n      style: {\n        display: 'none'\n      },\n      accept: \"image/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"heart\"],\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: isHeartFilled ? filledHeart : heart,\n        className: styles[\"app-heart\"],\n        alt: \"heart\",\n        onClick: handleHeartClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"content-input2\"],\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: styles[\"textarea2\"],\n        value: commentContent,\n        onChange: handleCommentChange,\n        placeholder: \"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"reply-button\"],\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddComment,\n        children: \"\\uB313\\uAE00 \\uB2EC\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"comments-section\"],\n      children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"comment-item\"],\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [comment.nickname, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }, this), \" \", comment.content, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"reply-container\"],\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles[\"toggle-reply-button\"],\n            onClick: () => handleToggleReply(index),\n            children: replyVisible[index] ? '대댓글 숨기기' : '대댓글 달기'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this), replyVisible[index] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"reply-input\"],\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: styles[\"textarea_reply\"],\n            value: replyContents[index] || '',\n            onChange: e => handleReplyChange(index, e),\n            placeholder: \"\\uB300\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddReply(index),\n            children: \"\\uB300\\uB313\\uAE00 \\uB2EC\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 15\n        }, this), comment.replies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"replies-section\"],\n          children: comment.replies.map((reply, replyIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"reply-item\"],\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [reply.nickname, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 21\n            }, this), \" \", reply.content]\n          }, replyIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 5\n  }, this);\n};\n_s(FreepostingPage, \"od6izqsWAOmXASu44YoYZIk+m3M=\", false, function () {\n  return [useNavigate];\n});\n_c = FreepostingPage;\nexport default FreepostingPage;\nvar _c;\n$RefreshReg$(_c, \"FreepostingPage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigate","styles","main_mascot","main_bell","main_message","main_my","arrow","scrab","heart","filledHeart","bar","Header","jsxDEV","_jsxDEV","BASE_URL","getAuthHeaders","accessToken","localStorage","getItem","FreepostingPage","_s","navigate","fileInputRef","content","setContent","comments","setComments","commentContent","setCommentContent","replyContents","setReplyContents","nickname","setNickname","nicknameCount","setNicknameCount","int","short","double","char","isHeartFilled","setIsHeartFilled","isPopupOpen","setIsPopupOpen","replyVisible","setReplyVisible","currentDate","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","formattedDate","reportContent","setReportContent","isAlertOpen","setIsAlertOpen","handleBackClick","savedComments","savedHeartStatus","savedNicknameCount","savedReplyVisible","JSON","parse","setItem","stringify","types","randomType","Math","floor","random","length","fetchHeartStatus","response","fetch","method","headers","ok","data","json","liked","console","error","fetchComments","handleContentChange","e","target","value","handleCommentChange","handleReplyChange","index","newReplyContents","handleAddComment","trim","newNicknameCount","newComment","replies","body","savedComment","prev","handleAddReply","updatedComments","newReply","savedReply","push","handleToggleReply","handleHeartClick","newHeartStatus","togglePopup","submitReport","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","onClick","onChange","placeholder","type","ref","style","display","accept","handleFileChange","map","comment","reply","replyIndex","_c","$RefreshReg$"],"sources":["C:/Users/asx12/OneDrive/바탕 화면/react/front/Front-end/src/pages/FreepostingPage.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styles from \"./FreepostingPage.module.css\";\r\nimport main_mascot from '../images/대학 심볼 횃불이.png';\r\nimport main_bell from '../images/bell.png';\r\nimport main_message from '../images/message.png';\r\nimport main_my from '../images/my.png';\r\nimport arrow from '../images/arrow.png';\r\nimport scrab from '../images/스크랩횃불이.png';\r\nimport heart from '../images/heart.png';\r\nimport filledHeart from '../images/filledheart.png';\r\nimport bar from '../images/bar.png';\r\nimport Header from './_.js';  // 상단바 컴포넌트\r\n\r\n// API에서 사용할 기본 URL과 헤더 설정\r\nconst BASE_URL = 'https://your-backend-api.com/api/board';\r\nconst getAuthHeaders = () => {\r\n  const accessToken = localStorage.getItem('accessToken'); // accessToken을 로컬스토리지에서 가져옴\r\n  return {\r\n    'Authorization': `Bearer ${accessToken}`,\r\n    'Content-Type': 'application/json',\r\n  };\r\n};\r\n\r\nconst FreepostingPage = () => {\r\n  const navigate = useNavigate();\r\n  const fileInputRef = useRef(null);\r\n\r\n  const [content, setContent] = useState('');\r\n  const [comments, setComments] = useState([]);\r\n  const [commentContent, setCommentContent] = useState('');\r\n  const [replyContents, setReplyContents] = useState([]);\r\n  const [nickname, setNickname] = useState('');\r\n  const [nicknameCount, setNicknameCount] = useState({ int: 0, short: 0, double: 0, char: 0 });\r\n  const [isHeartFilled, setIsHeartFilled] = useState(false);\r\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\r\n  const [replyVisible, setReplyVisible] = useState(''); // 신고 내용 저장\r\n\r\n  const currentDate = new Date();\r\n  const year = currentDate.getFullYear();\r\n  const month = String(currentDate.getMonth() + 1).padStart(2, '0');\r\n  const day = String(currentDate.getDate()).padStart(2, '0');\r\n  const formattedDate = `${year}.${month}.${day}`;\r\n  const [reportContent, setReportContent] = useState('');\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const handleBackClick = () => navigate(-1);\r\n\r\n  // 새로고침 시 로컬 스토리지에서 상태를 불러옵니다.\r\n  useEffect(() => {\r\n    const savedComments = localStorage.getItem('comments');\r\n    const savedHeartStatus = localStorage.getItem('isHeartFilled');\r\n    const savedNicknameCount = localStorage.getItem('nicknameCount');\r\n    const savedReplyVisible = localStorage.getItem('replyVisible');\r\n\r\n    if (savedComments) setComments(JSON.parse(savedComments));\r\n    if (savedHeartStatus) setIsHeartFilled(JSON.parse(savedHeartStatus));\r\n    if (savedNicknameCount) setNicknameCount(JSON.parse(savedNicknameCount));\r\n    if (savedReplyVisible) setReplyVisible(JSON.parse(savedReplyVisible));\r\n  }, []);\r\n\r\n  // 댓글 상태가 변경될 때마다 로컬 스토리지에 저장합니다.\r\n  useEffect(() => {\r\n    localStorage.setItem('comments', JSON.stringify(comments));\r\n  }, [comments]);\r\n\r\n  // 좋아요 상태가 변경될 때마다 로컬 스토리지에 저장합니다.\r\n  useEffect(() => {\r\n    localStorage.setItem('isHeartFilled', JSON.stringify(isHeartFilled));\r\n  }, [isHeartFilled]);\r\n\r\n  // 닉네임 카운트가 변경될 때마다 로컬 스토리지에 저장합니다.\r\n  useEffect(() => {\r\n    localStorage.setItem('nicknameCount', JSON.stringify(nicknameCount));\r\n  }, [nicknameCount]);\r\n\r\n  // 대댓글 입력창 가시성 상태가 변경될 때마다 로컬 스토리지에 저장합니다.\r\n  useEffect(() => {\r\n    localStorage.setItem('replyVisible', JSON.stringify(replyVisible));\r\n  }, [replyVisible]);\r\n\r\n  useEffect(() => {\r\n    if (!nickname) {\r\n      const types = ['int', 'short', 'double', 'char'];\r\n      const randomType = types[Math.floor(Math.random() * types.length)];\r\n      setNickname(randomType);\r\n    }\r\n  }, [nickname]);\r\n\r\n  useEffect(() => {\r\n    const fetchHeartStatus = async () => {\r\n      try {\r\n        const response = await fetch(`${BASE_URL}/like-status`, {\r\n          method: 'GET',\r\n          headers: getAuthHeaders(),\r\n        });\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setIsHeartFilled(data.liked); // 서버로부터 불러온 좋아요 상태 반영\r\n        } else {\r\n          console.error('좋아요 상태 불러오기에 실패했습니다.');\r\n        }\r\n      } catch (error) {\r\n        console.error('좋아요 상태 불러오는 중 오류 발생:', error);\r\n      }\r\n    };\r\n\r\n    fetchHeartStatus();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchComments = async () => {\r\n      try {\r\n        const response = await fetch(`${BASE_URL}/free/comments`, {\r\n          method: 'GET',\r\n          headers: getAuthHeaders(),\r\n        });\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setComments(data.comments); // 서버에서 가져온 댓글을 상태로 설정\r\n        } else {\r\n          console.error('댓글 불러오기에 실패했습니다.');\r\n        }\r\n      } catch (error) {\r\n        console.error('댓글 불러오는 중 오류 발생:', error);\r\n      }\r\n    };\r\n\r\n    fetchComments();\r\n  }, []);\r\n\r\n  const handleContentChange = (e) => {\r\n    setContent(e.target.value);\r\n  };\r\n\r\n  const handleCommentChange = (e) => {\r\n    setCommentContent(e.target.value);\r\n  };\r\n\r\n  const handleReplyChange = (index, e) => {\r\n    const newReplyContents = [...replyContents];\r\n    newReplyContents[index] = e.target.value;\r\n    setReplyContents(newReplyContents);\r\n  };\r\n\r\n  const handleAddComment = async () => {\r\n    if (commentContent.trim() !== '') {\r\n      const newNicknameCount = { ...nicknameCount };\r\n      newNicknameCount[nickname] += 1;\r\n      setNicknameCount(newNicknameCount);\r\n\r\n      const newComment = {\r\n        nickname: `${nickname}${newNicknameCount[nickname]}`,\r\n        content: commentContent,\r\n        replies: [],\r\n      };\r\n\r\n      try {\r\n        const response = await fetch(`${BASE_URL}/free/comments`, {\r\n          method: 'POST',\r\n          headers: getAuthHeaders(),\r\n          body: JSON.stringify(newComment),\r\n        });\r\n\r\n        if (response.ok) {\r\n          const savedComment = await response.json(); // 서버에서 저장된 댓글 데이터 반환\r\n          setComments([...comments, savedComment]);\r\n          setNicknameCount((prev) => ({ ...prev, [nickname]: prev[nickname] + 1 }));\r\n          setCommentContent('');\r\n        } else {\r\n          console.error('댓글 추가에 실패했습니다.');\r\n        }\r\n      } catch (error) {\r\n        console.error('댓글 추가 중 오류 발생:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleAddReply = async (index) => {\r\n    if (replyContents[index].trim() !== '') {\r\n      const updatedComments = [...comments];\r\n      const newNicknameCount = { ...nicknameCount };\r\n      newNicknameCount[nickname] += 1;\r\n      setNicknameCount(newNicknameCount);\r\n\r\n      const newReply = {\r\n        nickname: `${nickname}${newNicknameCount[nickname]}`,\r\n        content: replyContents[index],\r\n      };\r\n\r\n      try {\r\n        const response = await fetch(`${BASE_URL}/free/comments/${index}/replies`, {\r\n          method: 'POST',\r\n          headers: getAuthHeaders(),\r\n          body: JSON.stringify(newReply),\r\n        });\r\n\r\n        if (response.ok) {\r\n          const savedReply = await response.json(); // 서버에서 저장된 대댓글 데이터 반환\r\n          updatedComments[index].replies.push(savedReply);\r\n          setComments(updatedComments);\r\n          setNicknameCount((prev) => ({ ...prev, [nickname]: prev[nickname] + 1 }));\r\n\r\n          const newReplyContents = [...replyContents];\r\n          newReplyContents[index] = '';\r\n          setReplyContents(newReplyContents);\r\n          setReplyVisible((prev) => ({ ...prev, [index]: false }));\r\n        } else {\r\n          console.error('대댓글 추가에 실패했습니다.');\r\n        }\r\n      } catch (error) {\r\n        console.error('대댓글 추가 중 오류 발생:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleToggleReply = (index) => {\r\n    setReplyVisible((prev) => ({ ...prev, [index]: !prev[index] }));\r\n  };\r\n\r\n  const handleHeartClick = async () => {\r\n    const newHeartStatus = !isHeartFilled;\r\n    setIsHeartFilled(newHeartStatus);\r\n\r\n    try {\r\n      const response = await fetch(`${BASE_URL}/free/like`, {\r\n        method: 'POST',\r\n        headers: getAuthHeaders(),\r\n        body: JSON.stringify({ isHeartFilled: newHeartStatus }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        console.error('좋아요 요청에 실패했습니다.');\r\n        setIsHeartFilled(!newHeartStatus); // 요청 실패 시 상태 되돌림\r\n      }\r\n    } catch (error) {\r\n      console.error('좋아요 요청 중 오류 발생:', error);\r\n      setIsHeartFilled(!newHeartStatus); // 오류 발생 시 상태 되돌림\r\n    }\r\n  };\r\n\r\n  const togglePopup = () => {\r\n    setIsPopupOpen(!isPopupOpen);\r\n  };\r\n\r\n  const submitReport = async () => {\r\n    try {\r\n      const response = await fetch(`${BASE_URL}/free/report`, {\r\n        method: 'POST',\r\n        headers: getAuthHeaders(),\r\n        body: JSON.stringify({ content: reportContent }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setReportContent('');\r\n        togglePopup();\r\n        setIsAlertOpen(true);\r\n\r\n        setTimeout(() => {\r\n          setIsAlertOpen(false);\r\n        }, 3000);\r\n      } else {\r\n        console.error('신고 제출에 실패했습니다.');\r\n      }\r\n    } catch (error) {\r\n      console.error('신고 제출 중 오류 발생:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className={styles[\"content\"]}>\r\n        <img src={arrow} className={styles[\"app-arrow\"]} alt=\"back_arrow\" onClick={() => navigate(-1)} />\r\n        <h1 className={styles[\"title-text2\"]}>자유게시판</h1>\r\n        <img src={bar} className={styles[\"app-bar\"]} alt=\"bar\" />\r\n        <h1 className={styles[\"title-text3\"]}>게시판 제목</h1>\r\n        <div className={styles[\"right-section\"]}>\r\n          <img src={main_message} className={styles[\"app-main_message2\"]} alt=\"main_message\" />\r\n          <img src={scrab} className={styles[\"app-main_message3\"]} alt=\"main_message\" />\r\n        </div>\r\n        <h2 className={styles[\"title-text4\"]}>작성일: {formattedDate}</h2>\r\n        <div className={styles[\"report\"]}>\r\n          <button onClick={togglePopup} className={styles[\"report-button\"]}>\r\n            신고하기\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {isPopupOpen && (\r\n        <div className={styles[\"popup\"]}>\r\n          <div className={styles[\"popup-inner\"]}>\r\n            <h3>신고하기</h3>\r\n            <p>신고 내용을 입력하세요:</p>\r\n            <textarea className={styles[\"popup-textarea\"]} onChange={(e) => setReportContent(e.target.value)} />\r\n            <div className={styles[\"popup-button-container\"]}>\r\n              <button onClick={togglePopup} className={styles[\"popup-close\"]}>닫기</button>\r\n              <button onClick={submitReport} className={styles[\"popup-receive\"]}>제출</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {isAlertOpen && (\r\n        <div className={styles[\"alert-popup\"]}>\r\n          제출이 완료되었습니다.\r\n        </div>\r\n      )}\r\n      <div className={styles[\"content-input\"]}>\r\n        <textarea\r\n          className={styles[\"textarea\"]}\r\n          value={content}\r\n          onChange={handleContentChange}\r\n          placeholder=\"내용을 입력하세요.\"\r\n        />\r\n      </div>\r\n      <input\r\n        type=\"file\"\r\n        ref={fileInputRef}\r\n        style={{ display: 'none' }}\r\n        accept=\"image/*\"\r\n        onChange={handleFileChange}\r\n      />\r\n      <div className={styles[\"heart\"]}>\r\n        <img\r\n          src={isHeartFilled ? filledHeart : heart}\r\n          className={styles[\"app-heart\"]}\r\n          alt=\"heart\"\r\n          onClick={handleHeartClick}\r\n        />\r\n      </div>\r\n      <div className={styles[\"content-input2\"]}>\r\n        <textarea\r\n          className={styles[\"textarea2\"]}\r\n          value={commentContent}\r\n          onChange={handleCommentChange}\r\n          placeholder=\"댓글을 입력하세요.\"\r\n        />\r\n      </div>\r\n      <div className={styles[\"reply-button\"]}>\r\n        <button onClick={handleAddComment}>댓글 달기</button>\r\n      </div>\r\n      <div className={styles[\"comments-section\"]}>\r\n        {comments.map((comment, index) => (\r\n          <div key={index} className={styles[\"comment-item\"]}>\r\n            <strong>{comment.nickname}:</strong> {comment.content}\r\n            <div className={styles[\"reply-container\"]}>\r\n              <button className={styles[\"toggle-reply-button\"]} onClick={() => handleToggleReply(index)}>\r\n                {replyVisible[index] ? '대댓글 숨기기' : '대댓글 달기'}\r\n              </button>\r\n            </div>\r\n            {replyVisible[index] && (\r\n              <div className={styles[\"reply-input\"]}>\r\n                <textarea\r\n                  className={styles[\"textarea_reply\"]}\r\n                  value={replyContents[index] || ''}\r\n                  onChange={(e) => handleReplyChange(index, e)}\r\n                  placeholder=\"대댓글을 입력하세요.\"\r\n                />\r\n                <button onClick={() => handleAddReply(index)}>대댓글 달기</button>\r\n              </div>\r\n            )}\r\n            {comment.replies.length > 0 && (\r\n              <div className={styles[\"replies-section\"]}>\r\n                {comment.replies.map((reply, replyIndex) => (\r\n                  <div key={replyIndex} className={styles[\"reply-item\"]}>\r\n                    <strong>{reply.nickname}:</strong> {reply.content}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FreepostingPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}