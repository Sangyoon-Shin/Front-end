{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asx12\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\react\\\\front\\\\Front-end\\\\src\\\\pages\\\\G_freepostingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styles from \"./G_freepostingPage.module.css\";\nimport arrow from '../images/arrow.png';\nimport scrab from '../images/스크랩횃불이.png';\nimport heart from '../images/heart.png';\nimport filledHeart from '../images/filledheart.png';\nimport bar from '../images/bar.png';\nimport main_message from '../images/message.png'; // 이미지 추가\nimport Header from './G_.js'; // 상단바 컴포넌트\n\n// API 기본 URL 설정\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = 'https://your-backend-api.com/api/board';\nconst getAuthHeaders = () => {\n  const accessToken = localStorage.getItem('accessToken'); // accessToken을 로컬스토리지에서 가져옴\n  return {\n    'Authorization': `Bearer ${accessToken}`,\n    'Content-Type': 'application/json'\n  };\n};\nconst G_freepostingPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const fileInputRef = useRef(null);\n  const [content, setContent] = useState('');\n  const [comments, setComments] = useState([]);\n  const [commentContent, setCommentContent] = useState('');\n  const [replyContents, setReplyContents] = useState([]);\n  const [nickname, setNickname] = useState('');\n  const [nicknameCount, setNicknameCount] = useState({\n    int: 0,\n    short: 0,\n    double: 0,\n    char: 0\n  });\n  const [isHeartFilled, setIsHeartFilled] = useState(false);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [replyVisible, setReplyVisible] = useState({}); // 대댓글 가시성 관리\n\n  const currentDate = new Date();\n  const year = currentDate.getFullYear();\n  const month = String(currentDate.getMonth() + 1).padStart(2, '0');\n  const day = String(currentDate.getDate()).padStart(2, '0');\n  const formattedDate = `${year}.${month}.${day}`;\n  const [reportContent, setReportContent] = useState('');\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\n\n  // 뒤로 가기 버튼\n  const handleBackClick = () => navigate(-1);\n\n  // 새로고침 시 로컬 스토리지에서 상태를 불러오기\n  useEffect(() => {\n    const savedComments = localStorage.getItem('comments');\n    const savedHeartStatus = localStorage.getItem('isHeartFilled');\n    const savedNicknameCount = localStorage.getItem('nicknameCount');\n    const savedReplyVisible = localStorage.getItem('replyVisible');\n    if (savedComments) setComments(JSON.parse(savedComments));\n    if (savedHeartStatus) setIsHeartFilled(JSON.parse(savedHeartStatus));\n    if (savedNicknameCount) setNicknameCount(JSON.parse(savedNicknameCount));\n    if (savedReplyVisible) setReplyVisible(JSON.parse(savedReplyVisible));\n  }, []);\n\n  // 댓글 상태가 변경될 때마다 로컬 스토리지에 저장\n  useEffect(() => {\n    localStorage.setItem('comments', JSON.stringify(comments));\n  }, [comments]);\n\n  // 좋아요 상태가 변경될 때마다 로컬 스토리지에 저장\n  useEffect(() => {\n    localStorage.setItem('isHeartFilled', JSON.stringify(isHeartFilled));\n  }, [isHeartFilled]);\n\n  // 닉네임 카운트가 변경될 때마다 로컬 스토리지에 저장\n  useEffect(() => {\n    localStorage.setItem('nicknameCount', JSON.stringify(nicknameCount));\n  }, [nicknameCount]);\n\n  // 대댓글 입력창 가시성 상태가 변경될 때마다 로컬 스토리지에 저장\n  useEffect(() => {\n    localStorage.setItem('replyVisible', JSON.stringify(replyVisible));\n  }, [replyVisible]);\n  useEffect(() => {\n    if (!nickname) {\n      const types = ['int', 'short', 'double', 'char'];\n      const randomType = types[Math.floor(Math.random() * types.length)];\n      setNickname(randomType);\n    }\n  }, [nickname]);\n\n  // 댓글 데이터를 백엔드에서 가져오기\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const response = await fetch(`${BASE_URL}/comments`, {\n          method: 'GET',\n          headers: getAuthHeaders()\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setComments(data.comments); // 서버에서 가져온 댓글을 상태로 설정\n        } else {\n          console.error('댓글 불러오기에 실패했습니다.');\n        }\n      } catch (error) {\n        console.error('댓글 불러오는 중 오류 발생:', error);\n      }\n    };\n    fetchComments();\n  }, []);\n\n  // 댓글 입력 핸들러\n  const handleContentChange = e => {\n    setContent(e.target.value);\n  };\n  const handleCommentChange = e => {\n    setCommentContent(e.target.value);\n  };\n\n  // 대댓글 입력 핸들러\n  const handleReplyChange = (index, e) => {\n    const newReplyContents = [...replyContents];\n    newReplyContents[index] = e.target.value;\n    setReplyContents(newReplyContents);\n  };\n\n  // 댓글 추가 함수\n  const handleAddComment = async () => {\n    if (commentContent.trim() !== '') {\n      const newNicknameCount = {\n        ...nicknameCount\n      };\n      newNicknameCount[nickname] += 1;\n      setNicknameCount(newNicknameCount);\n      const newComment = {\n        nickname: `${nickname}${newNicknameCount[nickname]}`,\n        content: commentContent,\n        replies: []\n      };\n      try {\n        const response = await fetch(`${BASE_URL}/comments`, {\n          method: 'POST',\n          headers: getAuthHeaders(),\n          body: JSON.stringify(newComment)\n        });\n        if (response.ok) {\n          const savedComment = await response.json();\n          setComments([...comments, savedComment]);\n          setNicknameCount(prev => ({\n            ...prev,\n            [nickname]: prev[nickname] + 1\n          }));\n          setCommentContent('');\n        } else {\n          console.error('댓글 추가에 실패했습니다.');\n        }\n      } catch (error) {\n        console.error('댓글 추가 중 오류 발생:', error);\n      }\n    }\n  };\n\n  // 대댓글 추가 함수\n  const handleAddReply = async index => {\n    if (replyContents[index].trim() !== '') {\n      const updatedComments = [...comments];\n      const newNicknameCount = {\n        ...nicknameCount\n      };\n      newNicknameCount[nickname] += 1;\n      setNicknameCount(newNicknameCount);\n      const newReply = {\n        nickname: `${nickname}${newNicknameCount[nickname]}`,\n        content: replyContents[index]\n      };\n      try {\n        const response = await fetch(`${BASE_URL}/comments/${index}/replies`, {\n          method: 'POST',\n          headers: getAuthHeaders(),\n          body: JSON.stringify(newReply)\n        });\n        if (response.ok) {\n          const savedReply = await response.json();\n          updatedComments[index].replies.push(savedReply);\n          setComments(updatedComments);\n          setNicknameCount(prev => ({\n            ...prev,\n            [nickname]: prev[nickname] + 1\n          }));\n          const newReplyContents = [...replyContents];\n          newReplyContents[index] = '';\n          setReplyContents(newReplyContents);\n          setReplyVisible(prev => ({\n            ...prev,\n            [index]: false\n          }));\n        } else {\n          console.error('대댓글 추가에 실패했습니다.');\n        }\n      } catch (error) {\n        console.error('대댓글 추가 중 오류 발생:', error);\n      }\n    }\n  };\n\n  // 대댓글 표시/숨기기\n  const handleToggleReply = index => {\n    setReplyVisible(prev => ({\n      ...prev,\n      [index]: !prev[index]\n    }));\n  };\n\n  // 좋아요 클릭 핸들러\n  const handleHeartClick = async () => {\n    setIsHeartFilled(!isHeartFilled);\n    try {\n      const response = await fetch(`${BASE_URL}/like`, {\n        method: 'POST',\n        headers: getAuthHeaders(),\n        body: JSON.stringify({\n          isHeartFilled: !isHeartFilled\n        })\n      });\n      if (!response.ok) {\n        console.error('좋아요 요청에 실패했습니다.');\n        setIsHeartFilled(!isHeartFilled); // 실패 시 이전 상태로 복구\n      }\n    } catch (error) {\n      console.error('좋아요 요청 중 오류 발생:', error);\n      setIsHeartFilled(!isHeartFilled); // 실패 시 이전 상태로 복구\n    }\n  };\n\n  // 신고 팝업 토글\n  const togglePopup = () => {\n    setIsPopupOpen(!isPopupOpen);\n  };\n  const submitReport = async () => {\n    try {\n      const response = await fetch(`${BASE_URL}/report`, {\n        method: 'POST',\n        headers: getAuthHeaders(),\n        body: JSON.stringify({\n          content: reportContent\n        })\n      });\n      if (response.ok) {\n        setReportContent('');\n        togglePopup();\n        setIsAlertOpen(true);\n        setTimeout(() => {\n          setIsAlertOpen(false);\n        }, 3000);\n      } else {\n        console.error('신고 제출에 실패했습니다.');\n      }\n    } catch (error) {\n      console.error('신고 제출 중 오류 발생:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"content\"],\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: arrow,\n        className: styles[\"app-arrow\"],\n        alt: \"back_arrow\",\n        onClick: () => navigate(-1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles[\"title-text2\"],\n        children: \"\\uC790\\uC720\\uAC8C\\uC2DC\\uD310\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: bar,\n        className: styles[\"app-bar\"],\n        alt: \"bar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles[\"title-text3\"],\n        children: \"\\uAC8C\\uC2DC\\uD310 \\uC81C\\uBAA9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"right-section\"],\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: main_message,\n          className: styles[\"app-main_message2\"],\n          alt: \"main_message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: scrab,\n          className: styles[\"app-main_message3\"],\n          alt: \"main_message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles[\"title-text4\"],\n        children: [\"\\uC791\\uC131\\uC77C: \", formattedDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"report\"],\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: togglePopup,\n          className: styles[\"report-button\"],\n          children: \"\\uC2E0\\uACE0\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), isPopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"popup\"],\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"popup-inner\"],\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uC2E0\\uACE0\\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uC2E0\\uACE0 \\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: styles[\"popup-textarea\"],\n            value: reportContent,\n            onChange: e => setReportContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"popup-button-container\"],\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: togglePopup,\n              className: styles[\"popup-close\"],\n              children: \"\\uB2EB\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: submitReport,\n              className: styles[\"popup-receive\"],\n              children: \"\\uC81C\\uCD9C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this), isAlertOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"alert-popup\"],\n        children: \"\\uC81C\\uCD9C\\uC774 \\uC644\\uB8CC\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"content-input\"],\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: styles[\"textarea\"],\n          value: content,\n          onChange: handleContentChange,\n          placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        ref: fileInputRef,\n        style: {\n          display: 'none'\n        },\n        accept: \"image/*\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"heart\"],\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: isHeartFilled ? filledHeart : heart,\n          className: styles[\"app-heart\"],\n          alt: \"heart\",\n          onClick: handleHeartClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"content-input2\"],\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: styles[\"textarea2\"],\n          value: commentContent,\n          onChange: handleCommentChange,\n          placeholder: \"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"reply-button\"],\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddComment,\n          children: \"\\uB313\\uAE00 \\uB2EC\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"comments-section\"],\n        children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"comment-item\"],\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [comment.nickname, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this), \" \", comment.content, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"reply-container\"],\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles[\"toggle-reply-button\"],\n              onClick: () => handleToggleReply(index),\n              children: replyVisible[index] ? '대댓글 숨기기' : '대댓글 달기'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this), replyVisible[index] && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"reply-input\"],\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: styles[\"textarea_reply\"],\n              value: replyContents[index] || '',\n              onChange: e => handleReplyChange(index, e),\n              placeholder: \"\\uB300\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleAddReply(index),\n              children: \"\\uB300\\uB313\\uAE00 \\uB2EC\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 17\n          }, this), comment.replies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"replies-section\"],\n            children: comment.replies.map((reply, replyIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles[\"reply-item\"],\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [reply.nickname, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 23\n              }, this), \" \", reply.content]\n            }, replyIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 5\n  }, this);\n};\n_s(G_freepostingPage, \"5ZjYAjSmwIJZuWD2JdOzarnUnnA=\", false, function () {\n  return [useNavigate];\n});\n_c = G_freepostingPage;\nexport default G_freepostingPage;\nvar _c;\n$RefreshReg$(_c, \"G_freepostingPage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigate","styles","arrow","scrab","heart","filledHeart","bar","main_message","Header","jsxDEV","_jsxDEV","BASE_URL","getAuthHeaders","accessToken","localStorage","getItem","G_freepostingPage","_s","navigate","fileInputRef","content","setContent","comments","setComments","commentContent","setCommentContent","replyContents","setReplyContents","nickname","setNickname","nicknameCount","setNicknameCount","int","short","double","char","isHeartFilled","setIsHeartFilled","isPopupOpen","setIsPopupOpen","replyVisible","setReplyVisible","currentDate","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","formattedDate","reportContent","setReportContent","isAlertOpen","setIsAlertOpen","handleBackClick","savedComments","savedHeartStatus","savedNicknameCount","savedReplyVisible","JSON","parse","setItem","stringify","types","randomType","Math","floor","random","length","fetchComments","response","fetch","method","headers","ok","data","json","console","error","handleContentChange","e","target","value","handleCommentChange","handleReplyChange","index","newReplyContents","handleAddComment","trim","newNicknameCount","newComment","replies","body","savedComment","prev","handleAddReply","updatedComments","newReply","savedReply","push","handleToggleReply","handleHeartClick","togglePopup","submitReport","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","onClick","onChange","placeholder","type","ref","style","display","accept","handleFileChange","map","comment","reply","replyIndex","_c","$RefreshReg$"],"sources":["C:/Users/asx12/OneDrive/바탕 화면/react/front/Front-end/src/pages/G_freepostingPage.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styles from \"./G_freepostingPage.module.css\";\r\nimport arrow from '../images/arrow.png';\r\nimport scrab from '../images/스크랩횃불이.png';\r\nimport heart from '../images/heart.png';\r\nimport filledHeart from '../images/filledheart.png';\r\nimport bar from '../images/bar.png';\r\nimport main_message from '../images/message.png';  // 이미지 추가\r\nimport Header from './G_.js';  // 상단바 컴포넌트\r\n\r\n// API 기본 URL 설정\r\nconst BASE_URL = 'https://your-backend-api.com/api/board';\r\nconst getAuthHeaders = () => {\r\n  const accessToken = localStorage.getItem('accessToken'); // accessToken을 로컬스토리지에서 가져옴\r\n  return {\r\n    'Authorization': `Bearer ${accessToken}`,\r\n    'Content-Type': 'application/json',\r\n  };\r\n};\r\n\r\nconst G_freepostingPage = () => {\r\n  const navigate = useNavigate();\r\n  const fileInputRef = useRef(null);\r\n\r\n  const [content, setContent] = useState('');\r\n  const [comments, setComments] = useState([]);\r\n  const [commentContent, setCommentContent] = useState('');\r\n  const [replyContents, setReplyContents] = useState([]);\r\n  const [nickname, setNickname] = useState('');\r\n  const [nicknameCount, setNicknameCount] = useState({ int: 0, short: 0, double: 0, char: 0 });\r\n  const [isHeartFilled, setIsHeartFilled] = useState(false);\r\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\r\n  const [replyVisible, setReplyVisible] = useState({}); // 대댓글 가시성 관리\r\n\r\n  const currentDate = new Date();\r\n  const year = currentDate.getFullYear();\r\n  const month = String(currentDate.getMonth() + 1).padStart(2, '0');\r\n  const day = String(currentDate.getDate()).padStart(2, '0');\r\n  const formattedDate = `${year}.${month}.${day}`;\r\n  const [reportContent, setReportContent] = useState('');\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n\r\n  // 뒤로 가기 버튼\r\n  const handleBackClick = () => navigate(-1);\r\n\r\n  // 새로고침 시 로컬 스토리지에서 상태를 불러오기\r\n  useEffect(() => {\r\n    const savedComments = localStorage.getItem('comments');\r\n    const savedHeartStatus = localStorage.getItem('isHeartFilled');\r\n    const savedNicknameCount = localStorage.getItem('nicknameCount');\r\n    const savedReplyVisible = localStorage.getItem('replyVisible');\r\n\r\n    if (savedComments) setComments(JSON.parse(savedComments));\r\n    if (savedHeartStatus) setIsHeartFilled(JSON.parse(savedHeartStatus));\r\n    if (savedNicknameCount) setNicknameCount(JSON.parse(savedNicknameCount));\r\n    if (savedReplyVisible) setReplyVisible(JSON.parse(savedReplyVisible));\r\n  }, []);\r\n\r\n  // 댓글 상태가 변경될 때마다 로컬 스토리지에 저장\r\n  useEffect(() => {\r\n    localStorage.setItem('comments', JSON.stringify(comments));\r\n  }, [comments]);\r\n\r\n  // 좋아요 상태가 변경될 때마다 로컬 스토리지에 저장\r\n  useEffect(() => {\r\n    localStorage.setItem('isHeartFilled', JSON.stringify(isHeartFilled));\r\n  }, [isHeartFilled]);\r\n\r\n  // 닉네임 카운트가 변경될 때마다 로컬 스토리지에 저장\r\n  useEffect(() => {\r\n    localStorage.setItem('nicknameCount', JSON.stringify(nicknameCount));\r\n  }, [nicknameCount]);\r\n\r\n  // 대댓글 입력창 가시성 상태가 변경될 때마다 로컬 스토리지에 저장\r\n  useEffect(() => {\r\n    localStorage.setItem('replyVisible', JSON.stringify(replyVisible));\r\n  }, [replyVisible]);\r\n\r\n  useEffect(() => {\r\n    if (!nickname) {\r\n      const types = ['int', 'short', 'double', 'char'];\r\n      const randomType = types[Math.floor(Math.random() * types.length)];\r\n      setNickname(randomType);\r\n    }\r\n  }, [nickname]);\r\n\r\n  // 댓글 데이터를 백엔드에서 가져오기\r\n  useEffect(() => {\r\n    const fetchComments = async () => {\r\n      try {\r\n        const response = await fetch(`${BASE_URL}/comments`, {\r\n          method: 'GET',\r\n          headers: getAuthHeaders(),\r\n        });\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setComments(data.comments); // 서버에서 가져온 댓글을 상태로 설정\r\n        } else {\r\n          console.error('댓글 불러오기에 실패했습니다.');\r\n        }\r\n      } catch (error) {\r\n        console.error('댓글 불러오는 중 오류 발생:', error);\r\n      }\r\n    };\r\n\r\n    fetchComments();\r\n  }, []);\r\n\r\n  // 댓글 입력 핸들러\r\n  const handleContentChange = (e) => {\r\n    setContent(e.target.value);\r\n  };\r\n\r\n  const handleCommentChange = (e) => {\r\n    setCommentContent(e.target.value);\r\n  };\r\n\r\n  // 대댓글 입력 핸들러\r\n  const handleReplyChange = (index, e) => {\r\n    const newReplyContents = [...replyContents];\r\n    newReplyContents[index] = e.target.value;\r\n    setReplyContents(newReplyContents);\r\n  };\r\n\r\n  // 댓글 추가 함수\r\n  const handleAddComment = async () => {\r\n    if (commentContent.trim() !== '') {\r\n      const newNicknameCount = { ...nicknameCount };\r\n      newNicknameCount[nickname] += 1;\r\n      setNicknameCount(newNicknameCount);\r\n\r\n      const newComment = {\r\n        nickname: `${nickname}${newNicknameCount[nickname]}`,\r\n        content: commentContent,\r\n        replies: [],\r\n      };\r\n\r\n      try {\r\n        const response = await fetch(`${BASE_URL}/comments`, {\r\n          method: 'POST',\r\n          headers: getAuthHeaders(),\r\n          body: JSON.stringify(newComment),\r\n        });\r\n\r\n        if (response.ok) {\r\n          const savedComment = await response.json();\r\n          setComments([...comments, savedComment]);\r\n          setNicknameCount((prev) => ({\r\n            ...prev,\r\n            [nickname]: prev[nickname] + 1,\r\n          }));\r\n          setCommentContent('');\r\n        } else {\r\n          console.error('댓글 추가에 실패했습니다.');\r\n        }\r\n      } catch (error) {\r\n        console.error('댓글 추가 중 오류 발생:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // 대댓글 추가 함수\r\n  const handleAddReply = async (index) => {\r\n    if (replyContents[index].trim() !== '') {\r\n      const updatedComments = [...comments];\r\n      const newNicknameCount = { ...nicknameCount };\r\n      newNicknameCount[nickname] += 1;\r\n      setNicknameCount(newNicknameCount);\r\n\r\n      const newReply = {\r\n        nickname: `${nickname}${newNicknameCount[nickname]}`,\r\n        content: replyContents[index],\r\n      };\r\n\r\n      try {\r\n        const response = await fetch(`${BASE_URL}/comments/${index}/replies`, {\r\n          method: 'POST',\r\n          headers: getAuthHeaders(),\r\n          body: JSON.stringify(newReply),\r\n        });\r\n\r\n        if (response.ok) {\r\n          const savedReply = await response.json();\r\n          updatedComments[index].replies.push(savedReply);\r\n          setComments(updatedComments);\r\n          setNicknameCount((prev) => ({\r\n            ...prev,\r\n            [nickname]: prev[nickname] + 1,\r\n          }));\r\n\r\n          const newReplyContents = [...replyContents];\r\n          newReplyContents[index] = '';\r\n          setReplyContents(newReplyContents);\r\n          setReplyVisible((prev) => ({ ...prev, [index]: false }));\r\n        } else {\r\n          console.error('대댓글 추가에 실패했습니다.');\r\n        }\r\n      } catch (error) {\r\n        console.error('대댓글 추가 중 오류 발생:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // 대댓글 표시/숨기기\r\n  const handleToggleReply = (index) => {\r\n    setReplyVisible((prev) => ({ ...prev, [index]: !prev[index] }));\r\n  };\r\n\r\n  // 좋아요 클릭 핸들러\r\n  const handleHeartClick = async () => {\r\n    setIsHeartFilled(!isHeartFilled);\r\n\r\n    try {\r\n      const response = await fetch(`${BASE_URL}/like`, {\r\n        method: 'POST',\r\n        headers: getAuthHeaders(),\r\n        body: JSON.stringify({ isHeartFilled: !isHeartFilled }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        console.error('좋아요 요청에 실패했습니다.');\r\n        setIsHeartFilled(!isHeartFilled); // 실패 시 이전 상태로 복구\r\n      }\r\n    } catch (error) {\r\n      console.error('좋아요 요청 중 오류 발생:', error);\r\n      setIsHeartFilled(!isHeartFilled); // 실패 시 이전 상태로 복구\r\n    }\r\n  };\r\n\r\n  // 신고 팝업 토글\r\n  const togglePopup = () => {\r\n    setIsPopupOpen(!isPopupOpen);\r\n  };\r\n  \r\n\r\n  const submitReport = async () => {\r\n    try {\r\n      const response = await fetch(`${BASE_URL}/report`, {\r\n        method: 'POST',\r\n        headers: getAuthHeaders(),\r\n        body: JSON.stringify({ content: reportContent }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setReportContent('');\r\n        togglePopup();\r\n        setIsAlertOpen(true);\r\n\r\n        setTimeout(() => {\r\n          setIsAlertOpen(false);\r\n        }, 3000);\r\n      } else {\r\n        console.error('신고 제출에 실패했습니다.');\r\n      }\r\n    } catch (error) {\r\n      console.error('신고 제출 중 오류 발생:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className={styles[\"content\"]}>\r\n        <img src={arrow} className={styles[\"app-arrow\"]} alt=\"back_arrow\" onClick={() => navigate(-1)} />\r\n        <h1 className={styles[\"title-text2\"]}>자유게시판</h1>\r\n        <img src={bar} className={styles[\"app-bar\"]} alt=\"bar\" />\r\n\r\n        <h1 className={styles[\"title-text3\"]}>게시판 제목</h1>\r\n\r\n        <div className={styles[\"right-section\"]}>\r\n          <img src={main_message} className={styles[\"app-main_message2\"]} alt=\"main_message\" />\r\n          <img src={scrab} className={styles[\"app-main_message3\"]} alt=\"main_message\" />\r\n        </div>\r\n\r\n        <h2 className={styles[\"title-text4\"]}>작성일: {formattedDate}</h2>\r\n\r\n        <div className={styles[\"report\"]}>\r\n          <button onClick={togglePopup} className={styles[\"report-button\"]}>\r\n            신고하기\r\n          </button>\r\n        </div>\r\n\r\n        {isPopupOpen && (\r\n          <div className={styles[\"popup\"]}>\r\n            <div className={styles[\"popup-inner\"]}>\r\n              <h3>신고하기</h3>\r\n              <p>신고 내용을 입력하세요:</p>\r\n              <textarea\r\n                className={styles[\"popup-textarea\"]}\r\n                value={reportContent}\r\n                onChange={(e) => setReportContent(e.target.value)}\r\n              />\r\n              <div className={styles[\"popup-button-container\"]}>\r\n                <button onClick={togglePopup} className={styles[\"popup-close\"]}>닫기</button>\r\n                <button onClick={submitReport} className={styles[\"popup-receive\"]}>제출</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {isAlertOpen && (\r\n          <div className={styles[\"alert-popup\"]}>\r\n            제출이 완료되었습니다.\r\n          </div>\r\n        )}\r\n\r\n        <div className={styles[\"content-input\"]}>\r\n          <textarea\r\n            className={styles[\"textarea\"]}\r\n            value={content}\r\n            onChange={handleContentChange}\r\n            placeholder=\"내용을 입력하세요.\"\r\n          />\r\n        </div>\r\n\r\n        <input\r\n          type=\"file\"\r\n          ref={fileInputRef}\r\n          style={{ display: 'none' }}\r\n          accept=\"image/*\"\r\n          onChange={handleFileChange}\r\n        />\r\n\r\n        <div className={styles[\"heart\"]}>\r\n          <img\r\n            src={isHeartFilled ? filledHeart : heart}\r\n            className={styles[\"app-heart\"]}\r\n            alt=\"heart\"\r\n            onClick={handleHeartClick}\r\n          />\r\n        </div>\r\n\r\n        <div className={styles[\"content-input2\"]}>\r\n          <textarea\r\n            className={styles[\"textarea2\"]}\r\n            value={commentContent}\r\n            onChange={handleCommentChange}\r\n            placeholder=\"댓글을 입력하세요.\"\r\n          />\r\n        </div>\r\n\r\n        <div className={styles[\"reply-button\"]}>\r\n          <button onClick={handleAddComment}>\r\n            댓글 달기\r\n          </button>\r\n        </div>\r\n\r\n        <div className={styles[\"comments-section\"]}>\r\n          {comments.map((comment, index) => (\r\n            <div key={index} className={styles[\"comment-item\"]}>\r\n              <strong>{comment.nickname}:</strong> {comment.content}\r\n\r\n              <div className={styles[\"reply-container\"]}>\r\n                <button className={styles[\"toggle-reply-button\"]} onClick={() => handleToggleReply(index)}>\r\n                  {replyVisible[index] ? '대댓글 숨기기' : '대댓글 달기'}\r\n                </button>\r\n              </div>\r\n\r\n              {replyVisible[index] && (\r\n                <div className={styles[\"reply-input\"]}>\r\n                  <textarea\r\n                    className={styles[\"textarea_reply\"]}\r\n                    value={replyContents[index] || ''}\r\n                    onChange={(e) => handleReplyChange(index, e)}\r\n                    placeholder=\"대댓글을 입력하세요.\"\r\n                  />\r\n                  <button onClick={() => handleAddReply(index)}>대댓글 달기</button>\r\n                </div>\r\n              )}\r\n\r\n              {comment.replies.length > 0 && (\r\n                <div className={styles[\"replies-section\"]}>\r\n                  {comment.replies.map((reply, replyIndex) => (\r\n                    <div key={replyIndex} className={styles[\"reply-item\"]}>\r\n                      <strong>{reply.nickname}:</strong> {reply.content}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default G_freepostingPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}