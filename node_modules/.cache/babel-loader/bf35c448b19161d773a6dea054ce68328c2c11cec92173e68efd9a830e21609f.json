{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asx12\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\react\\\\front\\\\Front-end\\\\src\\\\pages\\\\Message.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useMediaQuery } from 'react-responsive'; // 반응형 페이지 만들기 위함\nimport Header from './_.js'; // 상단바 컴포넌트\nimport axiosInstance from '../utils/api'; // Axios 인스턴스\nimport { jwtDecode } from 'jwt-decode'; // default가 아닌 named import 사용. authToken에서 사용자 ID 추출하기. npm install jwt-decode\nimport styles from './Message.module.css';\nimport menuIcon from '../images/메뉴버튼.png';\nimport CommunicationRoom_goBack from '../images/왼쪽 나가기 버튼.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Message = () => {\n  _s();\n  const [messages, setMessages] = useState([]); // 메시지 목록 상태 관리\n  const [visibleMessages, setVisibleMessages] = useState(4); // 처음에는 4개의 메시지만 표시\n  const isDesktop = useMediaQuery({\n    query: '(min-width: 1024px)'\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        // 로컬 스토리지에서 JWT 토큰 가져오기\n        const token = localStorage.getItem('authToken');\n        if (!token) {\n          throw new Error('로그인 토큰이 없습니다.'); // 로그인되지 않은 상태\n        }\n\n        // JWT 디코딩을 통해 사용자 ID 추출\n        const decodedToken = jwtDecode(token);\n        // const userId = decodedToken.userId; // JWT에 포함된 userId 키 확인 (예: \"subibi21\")\n        const userID = '1234'; // 테스트용 임시 고정 ID\n\n        // 백엔드 API 호출\n        // 테스트 아닐때 url: https://e08d-61-84-64-212.ngrok-free.app/Room/userId/${userId}\n        const response = await axiosInstance.get(`https://e08d-61-84-64-212.ngrok-free.app/Room/OpenedRoom`, {\n          headers: {\n            'ngrok-skip-browser-warning': 'true' // 필요 시 유지\n          }\n        });\n        if (response.data.code !== 200) {\n          throw new Error('메시지 목록을 불러오는데 실패했습니다.');\n        }\n        console.log(response);\n\n        // 응답 데이터 상태에 저장\n        setMessages(response.data.data);\n      } catch (error) {\n        console.error('메시지 목록 불러오는 중 오류가 발생했습니다:', error);\n      }\n    };\n    fetchMessages();\n  }, []);\n\n  // 방 클릭 시 해당 채팅방으로 이동하는 함수\n  const handleRoomClick = async id => {\n    try {\n      // 사용자 정보 가져오기 (JWT 토큰에서 디코딩하거나 상태에서 가져오기)\n      const token = localStorage.getItem('authToken');\n      const decodedToken = jwtDecode(token); // JWT 디코딩\n      const userId = decodedToken.userId;\n      const userName = decodedToken.userName;\n\n      // 방 입장 API 호출\n      await axiosInstance.post('/JoinRoom', {\n        roomId: id,\n        userId: userId,\n        userName: userName\n      });\n\n      // 성공 시 채팅방으로 이동\n      navigate(`/chatroom/${id}`);\n    } catch (error) {\n      console.error('방 입장 중 오류가 발생했습니다:', error);\n      alert('채팅방에 입장할 수 없습니다. 다시 시도해주세요.');\n    }\n  };\n\n  // 더보기 버튼 클릭 시 화면에 보이는 메시지 수를 증가시키는 함수\n  const handleLoadMore = async () => {\n    try {\n      const nextPage = Math.ceil(visibleMessages / 4); // 현재 페이지 계산\n      const token = localStorage.getItem('authToken'); // JWT 토큰 가져오기\n      const decodedToken = jwtDecode(token); // JWT 디코딩\n      const userId = decodedToken.userId;\n\n      // 백엔드에서 다음 페이지 메시지 요청\n      const response = await axiosInstance.get(`https://e08d-61-84-64-212.ngrok-free.app/Room/userId/${userId}`, {\n        params: {\n          page: nextPage,\n          size: 4\n        },\n        // 다음 페이지와 크기 설정\n        headers: {\n          'ngrok-skip-browser-warning': 'true' // 필요 시 유지\n        }\n      });\n      if (response.data.code !== 200) {\n        throw new Error('메시지를 불러오는 데 실패했습니다.');\n      }\n\n      // 기존 메시지에 새로운 데이터 추가\n      setMessages(prevMessages => [...prevMessages, ...response.data.data]);\n\n      // 화면에 표시되는 메시지 수 증가\n      setVisibleMessages(prevVisibleMessages => prevVisibleMessages + 4);\n    } catch (error) {\n      console.error('메시지를 더 불러오는 중 오류가 발생했습니다:', error);\n      alert('메시지를 불러오는 데 실패했습니다.');\n    }\n  };\n\n  // 메뉴 버튼 클릭 시 삭제 메뉴 표시\n  const [menuOpenId, setMenuOpenId] = useState(null);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [selectedMessageId, setSelectedMessageId] = useState(null);\n  const toggleMenu = id => {\n    setMenuOpenId(menuOpenId === id ? null : id);\n  };\n\n  // 삭제 확인 모달 열기\n  const handleDeleteClick = (id, event) => {\n    event.stopPropagation(); // 삭제하기 버튼 클릭 시 이벤트 전파 방지\n    setSelectedMessageId(id);\n    setShowDeleteModal(true);\n  };\n\n  // 삭제 확인 모달에서 삭제 버튼 클릭 시\n  const handleConfirmDelete = async () => {\n    try {\n      // 백엔드로 메시지 삭제 요청\n      await axiosInstance.delete(`/Room/message/${selectedMessageId}`); // API 호출\n\n      // 로컬 상태에서 삭제된 메시지 제거\n      setMessages(prevMessages => prevMessages.filter(message => message.id !== selectedMessageId));\n      setShowDeleteModal(false); // 모달 닫기\n      setSelectedMessageId(null); // 선택된 메시지 ID 초기화\n    } catch (error) {\n      console.error('메시지를 삭제하는 중 오류가 발생했습니다:', error);\n      alert('메시지를 삭제할 수 없습니다. 다시 시도해주세요.');\n    }\n  };\n\n  // 삭제 확인 모달에서 취소 버튼 클릭 시\n  const handleCancelDelete = () => {\n    setShowDeleteModal(false);\n    setSelectedMessageId(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.sectionTitle,\n        children: \"\\uCABD\\uC9C0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.messageList,\n        children: messages.slice(0, visibleMessages).map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.messageItem,\n          onClick: () => handleRoomClick(message.id) // 방 클릭 시 이동하도록 수정\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.messageInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.headerInfo,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.nickname,\n                children: message.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.title,\n                children: message.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.lastMessage,\n              children: message.lastMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: menuIcon,\n            className: styles.menuIcon,\n            alt: \"\\uBA54\\uB274\",\n            onClick: e => {\n              e.stopPropagation(); // 메뉴 클릭 시 방 클릭 이벤트 무시\n              toggleMenu(message.id);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this), menuOpenId === message.id && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.dropdownMenu,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.deleteButton,\n              onClick: e => handleDeleteClick(message.id, e) // 삭제하기 클릭 시 이벤트 전파 방지\n              ,\n              children: \"\\uC0AD\\uC81C\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 33\n          }, this)]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), visibleMessages < messages.length && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.loadMoreButton,\n        onClick: handleLoadMore,\n        children: \"\\uB354\\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }, this), showDeleteModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.modalOverlay,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.modalContent,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uC0AD\\uC81C\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.modalButtons,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.cancelButton,\n              onClick: handleCancelDelete,\n              children: \"\\uCDE8\\uC18C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.deleteConfirmButton,\n              onClick: handleConfirmDelete,\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 9\n  }, this);\n};\n_s(Message, \"cGx1ApKhy0D1ndnFgK4KXI7KFag=\", false, function () {\n  return [useMediaQuery, useNavigate];\n});\n_c = Message;\nexport default Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useMediaQuery","Header","axiosInstance","jwtDecode","styles","menuIcon","CommunicationRoom_goBack","jsxDEV","_jsxDEV","Message","_s","messages","setMessages","visibleMessages","setVisibleMessages","isDesktop","query","navigate","fetchMessages","token","localStorage","getItem","Error","decodedToken","userID","response","get","headers","data","code","console","log","error","handleRoomClick","id","userId","userName","post","roomId","alert","handleLoadMore","nextPage","Math","ceil","params","page","size","prevMessages","prevVisibleMessages","menuOpenId","setMenuOpenId","showDeleteModal","setShowDeleteModal","selectedMessageId","setSelectedMessageId","toggleMenu","handleDeleteClick","event","stopPropagation","handleConfirmDelete","delete","filter","message","handleCancelDelete","className","container","children","fileName","_jsxFileName","lineNumber","columnNumber","content","sectionTitle","messageList","slice","map","messageItem","onClick","messageInfo","headerInfo","nickname","username","title","lastMessage","src","alt","e","dropdownMenu","deleteButton","length","loadMoreButton","modalOverlay","modalContent","modalButtons","cancelButton","deleteConfirmButton","_c","$RefreshReg$"],"sources":["C:/Users/asx12/OneDrive/바탕 화면/react/front/Front-end/src/pages/Message.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useMediaQuery } from 'react-responsive'; // 반응형 페이지 만들기 위함\r\nimport Header from './_.js';  // 상단바 컴포넌트\r\nimport axiosInstance from '../utils/api'; // Axios 인스턴스\r\nimport {jwtDecode} from 'jwt-decode'; // default가 아닌 named import 사용. authToken에서 사용자 ID 추출하기. npm install jwt-decode\r\nimport styles from './Message.module.css';\r\nimport menuIcon from '../images/메뉴버튼.png';\r\nimport CommunicationRoom_goBack from '../images/왼쪽 나가기 버튼.png';\r\n\r\nconst Message = () => {\r\n\r\n    const [messages, setMessages] = useState([]); // 메시지 목록 상태 관리\r\n    const [visibleMessages, setVisibleMessages] = useState(4); // 처음에는 4개의 메시지만 표시\r\n    const isDesktop = useMediaQuery({ query: '(min-width: 1024px)' });\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchMessages = async () => {\r\n            try {\r\n                // 로컬 스토리지에서 JWT 토큰 가져오기\r\n                const token = localStorage.getItem('authToken');\r\n                if (!token) {\r\n                    throw new Error('로그인 토큰이 없습니다.'); // 로그인되지 않은 상태\r\n                }\r\n    \r\n                // JWT 디코딩을 통해 사용자 ID 추출\r\n                const decodedToken = jwtDecode(token);\r\n                // const userId = decodedToken.userId; // JWT에 포함된 userId 키 확인 (예: \"subibi21\")\r\n                const userID = '1234'; // 테스트용 임시 고정 ID\r\n    \r\n                // 백엔드 API 호출\r\n                // 테스트 아닐때 url: https://e08d-61-84-64-212.ngrok-free.app/Room/userId/${userId}\r\n                const response = await axiosInstance.get(`https://e08d-61-84-64-212.ngrok-free.app/Room/OpenedRoom`, {\r\n\r\n                    headers: {\r\n                        'ngrok-skip-browser-warning': 'true', // 필요 시 유지\r\n                      },\r\n                });\r\n                if (response.data.code !== 200) {\r\n                    throw new Error('메시지 목록을 불러오는데 실패했습니다.');\r\n                }\r\n                console.log(response);\r\n    \r\n                // 응답 데이터 상태에 저장\r\n                setMessages(response.data.data);\r\n            } catch (error) {\r\n                console.error('메시지 목록 불러오는 중 오류가 발생했습니다:', error);\r\n            }\r\n        };\r\n    \r\n        fetchMessages();\r\n    }, []);\r\n   \r\n\r\n    // 방 클릭 시 해당 채팅방으로 이동하는 함수\r\n    const handleRoomClick = async (id) => {\r\n        try {\r\n            // 사용자 정보 가져오기 (JWT 토큰에서 디코딩하거나 상태에서 가져오기)\r\n            const token = localStorage.getItem('authToken');\r\n            const decodedToken = jwtDecode(token); // JWT 디코딩\r\n            const userId = decodedToken.userId;\r\n            const userName = decodedToken.userName;\r\n    \r\n            // 방 입장 API 호출\r\n            await axiosInstance.post('/JoinRoom', {\r\n                roomId: id,\r\n                userId: userId,\r\n                userName: userName,\r\n            });\r\n    \r\n            // 성공 시 채팅방으로 이동\r\n            navigate(`/chatroom/${id}`);\r\n        } catch (error) {\r\n            console.error('방 입장 중 오류가 발생했습니다:', error);\r\n            alert('채팅방에 입장할 수 없습니다. 다시 시도해주세요.');\r\n        }\r\n    };\r\n    \r\n    \r\n\r\n    // 더보기 버튼 클릭 시 화면에 보이는 메시지 수를 증가시키는 함수\r\n    const handleLoadMore = async () => {\r\n        try {\r\n            const nextPage = Math.ceil(visibleMessages / 4); // 현재 페이지 계산\r\n            const token = localStorage.getItem('authToken'); // JWT 토큰 가져오기\r\n            const decodedToken = jwtDecode(token); // JWT 디코딩\r\n            const userId = decodedToken.userId;\r\n    \r\n            // 백엔드에서 다음 페이지 메시지 요청\r\n            const response = await axiosInstance.get(`https://e08d-61-84-64-212.ngrok-free.app/Room/userId/${userId}`, {\r\n                params: { page: nextPage, size: 4 }, // 다음 페이지와 크기 설정\r\n                headers: {\r\n                    'ngrok-skip-browser-warning': 'true', // 필요 시 유지\r\n                  },\r\n            });\r\n    \r\n            if (response.data.code !== 200) {\r\n                throw new Error('메시지를 불러오는 데 실패했습니다.');\r\n            }\r\n    \r\n            // 기존 메시지에 새로운 데이터 추가\r\n            setMessages((prevMessages) => [...prevMessages, ...response.data.data]);\r\n    \r\n            // 화면에 표시되는 메시지 수 증가\r\n            setVisibleMessages((prevVisibleMessages) => prevVisibleMessages + 4);\r\n        } catch (error) {\r\n            console.error('메시지를 더 불러오는 중 오류가 발생했습니다:', error);\r\n            alert('메시지를 불러오는 데 실패했습니다.');\r\n        }\r\n    };\r\n    \r\n\r\n    // 메뉴 버튼 클릭 시 삭제 메뉴 표시\r\n    const [menuOpenId, setMenuOpenId] = useState(null);\r\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n    const [selectedMessageId, setSelectedMessageId] = useState(null);\r\n\r\n    const toggleMenu = (id) => {\r\n        setMenuOpenId(menuOpenId === id ? null : id);\r\n    };\r\n\r\n    // 삭제 확인 모달 열기\r\n    const handleDeleteClick = (id, event) => {\r\n        event.stopPropagation(); // 삭제하기 버튼 클릭 시 이벤트 전파 방지\r\n        setSelectedMessageId(id);\r\n        setShowDeleteModal(true);\r\n    };\r\n\r\n    // 삭제 확인 모달에서 삭제 버튼 클릭 시\r\n    const handleConfirmDelete = async () => {\r\n        try {\r\n            // 백엔드로 메시지 삭제 요청\r\n            await axiosInstance.delete(`/Room/message/${selectedMessageId}`); // API 호출\r\n    \r\n            // 로컬 상태에서 삭제된 메시지 제거\r\n            setMessages((prevMessages) =>\r\n                prevMessages.filter((message) => message.id !== selectedMessageId)\r\n            );\r\n    \r\n            setShowDeleteModal(false); // 모달 닫기\r\n            setSelectedMessageId(null); // 선택된 메시지 ID 초기화\r\n        } catch (error) {\r\n            console.error('메시지를 삭제하는 중 오류가 발생했습니다:', error);\r\n            alert('메시지를 삭제할 수 없습니다. 다시 시도해주세요.');\r\n        }\r\n    };\r\n\r\n    // 삭제 확인 모달에서 취소 버튼 클릭 시\r\n    const handleCancelDelete = () => {\r\n        setShowDeleteModal(false);\r\n        setSelectedMessageId(null);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <Header />\r\n            <div className={styles.content}>\r\n                <h2 className={styles.sectionTitle}>쪽지</h2>\r\n                <div className={styles.messageList}>\r\n                    {messages.slice(0, visibleMessages).map((message) => (\r\n                        <div\r\n                            key={message.id}\r\n                            className={styles.messageItem}\r\n                            onClick={() => handleRoomClick(message.id)} // 방 클릭 시 이동하도록 수정\r\n                        >\r\n                            <div className={styles.messageInfo}>\r\n                                <div className={styles.headerInfo}>\r\n                                    <span className={styles.nickname}>{message.username}</span>\r\n                                    <span className={styles.title}>{message.title}</span>\r\n                                </div>\r\n                                <span className={styles.lastMessage}>{message.lastMessage}</span>\r\n                            </div>\r\n                            <img\r\n                                src={menuIcon}\r\n                                className={styles.menuIcon}\r\n                                alt=\"메뉴\"\r\n                                onClick={(e) => {\r\n                                    e.stopPropagation(); // 메뉴 클릭 시 방 클릭 이벤트 무시\r\n                                    toggleMenu(message.id);\r\n                                }}\r\n                            />\r\n                            {menuOpenId === message.id && (\r\n                                <div className={styles.dropdownMenu}>\r\n                                    <button\r\n                                        className={styles.deleteButton}\r\n                                        onClick={(e) => handleDeleteClick(message.id, e)} // 삭제하기 클릭 시 이벤트 전파 방지\r\n                                    >\r\n                                        삭제하기\r\n                                    </button>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                {visibleMessages < messages.length && (\r\n                    <button className={styles.loadMoreButton} onClick={handleLoadMore}>\r\n                        더보기\r\n                    </button>\r\n                )}\r\n\r\n                {/* 삭제 확인 모달 */}\r\n                {showDeleteModal && (\r\n                    <div className={styles.modalOverlay}>\r\n                        <div className={styles.modalContent}>\r\n                            <p>삭제하시겠습니까?</p>\r\n                            <div className={styles.modalButtons}>\r\n                                <button className={styles.cancelButton} onClick={handleCancelDelete}>\r\n                                    취소\r\n                                </button>\r\n                                <button className={styles.deleteConfirmButton} onClick={handleConfirmDelete}>\r\n                                    삭제\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}