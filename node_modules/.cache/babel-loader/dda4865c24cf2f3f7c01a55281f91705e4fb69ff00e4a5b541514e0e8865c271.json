{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asx12\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\react\\\\front\\\\Front-end\\\\src\\\\pages\\\\FreeboardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useMediaQuery } from 'react-responsive'; // 반응형 페이지 만들기 위함\nimport Header from './_.js'; // 상단바 컴포넌트\nimport styles from './FreeboardPage.module.css'; // BoardPage용 CSS 파일\nimport CommunicationRoom_goBack from '../images/왼쪽 나가기 버튼.png';\nimport DownMenu from '../images/아래방향메뉴선택.png';\nimport SearchIcon from '../images/돋보기아이콘.png'; // 돋보기 아이콘\nimport IconScrap from '../images/횃불이스크랩.png';\nimport IconUnscrap from '../images/횃불이스크랩X.png';\n\n// 게시물 목록에 대한 초기 데이터 (가상 데이터)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialPosts = [{\n  id: 1,\n  title: '게시판 제목 1',\n  date: '2024-01-01',\n  likes: 10,\n  isScraped: true\n}, {\n  id: 2,\n  title: '게시판 제목 2',\n  date: '2024-01-02',\n  likes: 20,\n  isScraped: false\n}, {\n  id: 3,\n  title: '게시판 제목 3',\n  date: '2024-01-03',\n  likes: 5,\n  isScraped: false\n}, {\n  id: 4,\n  title: '게시판 제목 4',\n  date: '2024-01-04',\n  likes: 30,\n  isScraped: true\n}, {\n  id: 5,\n  title: '게시판 제목 5',\n  date: '2024-01-05',\n  likes: 15,\n  isScraped: false\n}, {\n  id: 6,\n  title: '게시판 제목 6',\n  date: '2024-01-06',\n  likes: 25,\n  isScraped: false\n}];\nconst FreeboardPage = () => {\n  _s();\n  const [menuOpen, setMenuOpen] = useState(false); // 드롭다운 상태 관리\n  const [searchTerm, setSearchTerm] = useState(''); // 검색어 상태 관리\n  const [scrapStatus, setScrapStatus] = useState({\n    1: true,\n    2: false,\n    3: false,\n    4: true,\n    5: false,\n    6: false,\n    7: false,\n    8: false\n  }); // 각 게시물의 스크랩 상태 관리\n  const [posts, setPosts] = useState([]); // 게시물 목록 상태 관리\n  const [sortType, setSortType] = useState('latest'); // 초기 정렬 상태는 'latest'\n\n  // 백엔드 연동용. 코드 수정 필요\n  // const [posts, setPosts] = useState(initialPosts); // 게시물 목록 상태 관리\n  // const [sortType, setSortType] = useState('latest'); // 정렬 타입 상태 관리 ('latest' 또는 'recommend')\n\n  const navigate = useNavigate(); // useNavigate 훅을 컴포넌트 내부에서 호출\n\n  // 반응형 처리를 위한 useMediaQuery 사용\n  const isDesktop = useMediaQuery({\n    query: '(min-width: 769px)'\n  });\n  {/*\r\n   // 백엔드에서 게시물 목록 불러오기\r\n   useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const response = await fetch('https://your-backend-api.com/api/posts');\r\n        if (!response.ok) {\r\n          throw new Error('게시물 목록을 불러오는데 실패했습니다.');\r\n        }\r\n        const data = await response.json();\r\n        setPosts(data); // 게시물 목록 상태 업데이트\r\n      } catch (error) {\r\n        console.error('게시물 목록 불러오는 중 오류가 발생했습니다:', error);\r\n      }\r\n    };\r\n    fetchPosts();\r\n   }, []);\r\n   */}\n  const toggleMenu = () => {\n    setMenuOpen(!menuOpen); // 드롭다운 토글\n  };\n  const handleBoardChange = boardName => {\n    if (boardName === '질문 게시판') {\n      navigate('/QuestionboardPage/'); // 질문 게시판으로 이동\n    }\n    setMenuOpen(false); // 메뉴 닫기\n  };\n  const toggleScrap = async id => {\n    // 백엔드에 스크랩 상태를 업데이트하는 요청 보내기\n    try {\n      const response = await fetch('https://your-backend-api.com/api/scrap', {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          postId: id,\n          scrapStatus: !scrapStatus[id] // 새로운 스크랩 상태 전송\n        })\n      });\n      if (!response.ok) {\n        throw new Error('스크랩 상태 업데이트에 실패했습니다.');\n      }\n\n      // 서버 응답이 성공적일 경우 상태 업데이트\n      setScrapStatus(prevState => ({\n        ...prevState,\n        [id]: !prevState[id]\n      }));\n\n      // 성공적으로 백엔드와 통신 완료\n      console.log('스크랩 상태가 성공적으로 업데이트되었습니다.');\n    } catch (error) {\n      console.error('스크랩 상태 업데이트 중 오류가 발생했습니다:', error);\n      alert('스크랩 상태 업데이트에 실패했습니다. 다시 시도해주세요.');\n    }\n  };\n\n  // 검색 입력값을 변경하는 함수\n  const handleSearchInputChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  // 검색 버튼을 클릭했을 때 호출되는 함수\n  const handleSearch = async () => {\n    console.log('검색 버튼 클릭됨');\n    if (searchTerm.trim() !== '') {\n      try {\n        console.log(`검색어: ${searchTerm}`);\n        const response = await fetch(`https://your-backend-api.com/api/posts/search?query=${encodeURIComponent(searchTerm)}`);\n        if (!response.ok) {\n          throw new Error('검색 결과를 불러오는데 실패했습니다.');\n        }\n        const data = await response.json();\n        console.log('검색 결과:', data);\n        setPosts(data); // 검색 결과를 게시물 목록으로 업데이트\n        alert('검색이 완료되었습니다. 결과가 화면에 표시됩니다.');\n      } catch (error) {\n        console.error('검색 결과를 불러오는 중 오류가 발생했습니다:', error);\n        alert('검색 결과를 불러오는 중 오류가 발생했습니다.');\n      }\n    } else {\n      alert('검색어를 입력해주세요.');\n    }\n  };\n  const handlePostClick = postId => {\n    navigate(`/post/${postId}`); // 해당 게시물 상세 페이지로 이동\n  };\n\n  // 정렬 버튼 클릭 시 정렬 상태 업데이트\n  const handleSort = type => {\n    setSortType(type);\n    if (type === 'latest') {\n      // 최신순으로 정렬\n      setPosts(prevPosts => [...prevPosts].sort((a, b) => new Date(b.date) - new Date(a.date)));\n    } else if (type === 'recommend') {\n      // 추천순으로 정렬 (좋아요 개수 기준)\n      setPosts(prevPosts => [...prevPosts].sort((a, b) => b.likes - a.likes));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.titleContainer} ${isDesktop ? styles.desktopTitleContainer : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: CommunicationRoom_goBack,\n          className: `${styles.goBackButton} ${isDesktop ? styles.desktopGoBackButton : ''}`,\n          alt: \"\\uB4A4\\uB85C\\uAC00\\uAE30\",\n          onClick: () => navigate(-1) /* 뒤로 가기 동작 추가 */\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: `${styles.pageTitle} ${isDesktop ? styles.desktopPageTitle : ''}`,\n          children: \"\\uC790\\uC720 \\uAC8C\\uC2DC\\uD310\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: DownMenu,\n          className: `${styles.downMenuButton} ${isDesktop ? styles.desktopDownMenuButton : ''}`,\n          alt: \"\\uAC8C\\uC2DC\\uD310 \\uC120\\uD0DD\",\n          onClick: toggleMenu\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), menuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.dropdownMenu} ${isDesktop ? styles.desktopDropdownMenu : ''}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.menuItem} ${isDesktop ? styles.desktopMenuItem : ''}`,\n          onClick: () => handleBoardChange('질문 게시판'),\n          children: \"\\uC9C8\\uBB38 \\uAC8C\\uC2DC\\uD310\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.controlPanel} ${isDesktop ? styles.desktopControlPanel : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${styles.writeButton} ${isDesktop ? styles.desktopWriteButton : ''}`,\n          onClick: () => navigate('/FreewritePage') // 글쓰기 페이지로 이동\n          ,\n          children: \"\\uAE00\\uC4F0\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.searchBar} ${isDesktop ? styles.desktopSearchBar : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: searchTerm,\n            onChange: handleSearchInputChange,\n            className: `${styles.searchInput} ${isDesktop ? styles.desktopSearchInput : ''}`,\n            placeholder: \"\\uAC80\\uC0C9\\uC5B4 \\uC785\\uB825\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: SearchIcon,\n            className: `${styles.searchIcon} ${isDesktop ? styles.desktopSearchIcon : ''}`,\n            alt: \"\\uAC80\\uC0C9\",\n            onClick: handleSearch // 돋보기 아이콘 클릭 시 검색\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.sortButtons} ${isDesktop ? styles.desktopSortButtons : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${styles.sortButton} ${styles.latestSortButton} ${isDesktop ? styles.desktopLatestSortButton : ''}`,\n            onClick: () => handleSort('latest'),\n            children: \"\\uCD5C\\uC2E0\\uC21C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${styles.sortButton} ${styles.recommendSortButton} ${isDesktop ? styles.desktopRecommendSortButton : ''}`,\n            onClick: () => handleSort('recommend'),\n            children: \"\\uCD94\\uCC9C\\uC21C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.postList,\n        children: [1, 2, 3, 4, 5, 6, 7, 8].map(id => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.postItem,\n          children: [id <= 3 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.hotTag,\n            children: \"HOT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.postInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.postTitle,\n              onClick: () => handlePostClick(id) // 게시물 제목 클릭 시 상세 페이지로 이동\n              ,\n              children: [\"\\uAC8C\\uC2DC\\uD310 \\uC81C\\uBAA9 \", id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.postDate,\n              children: \"2024.01.01\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: scrapStatus[id] ? IconScrap : IconUnscrap,\n            alt: scrapStatus[id] ? '스크랩됨' : '스크랩안됨',\n            className: styles.scrapIcon,\n            onClick: () => toggleScrap(id) // 스크랩 상태 변경 및 백엔드 전송\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.pagination,\n        children: [1, 2, 3, 4, 5].map(pageNumber => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.pageButton,\n          onClick: () => navigate(`/board/page/${pageNumber}`),\n          children: pageNumber\n        }, pageNumber, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n_s(FreeboardPage, \"2KXj2K7RscR8j7Fe9YCzRdEpwik=\", false, function () {\n  return [useNavigate, useMediaQuery];\n});\n_c = FreeboardPage;\nexport default FreeboardPage;\nvar _c;\n$RefreshReg$(_c, \"FreeboardPage\");","map":{"version":3,"names":["React","useState","useNavigate","useMediaQuery","Header","styles","CommunicationRoom_goBack","DownMenu","SearchIcon","IconScrap","IconUnscrap","jsxDEV","_jsxDEV","initialPosts","id","title","date","likes","isScraped","FreeboardPage","_s","menuOpen","setMenuOpen","searchTerm","setSearchTerm","scrapStatus","setScrapStatus","posts","setPosts","sortType","setSortType","navigate","isDesktop","query","toggleMenu","handleBoardChange","boardName","toggleScrap","response","fetch","method","headers","body","JSON","stringify","postId","ok","Error","prevState","console","log","error","alert","handleSearchInputChange","event","target","value","handleSearch","trim","encodeURIComponent","data","json","handlePostClick","handleSort","type","prevPosts","sort","a","b","Date","className","container","children","fileName","_jsxFileName","lineNumber","columnNumber","content","titleContainer","desktopTitleContainer","src","goBackButton","desktopGoBackButton","alt","onClick","pageTitle","desktopPageTitle","downMenuButton","desktopDownMenuButton","dropdownMenu","desktopDropdownMenu","menuItem","desktopMenuItem","controlPanel","desktopControlPanel","writeButton","desktopWriteButton","searchBar","desktopSearchBar","onChange","searchInput","desktopSearchInput","placeholder","searchIcon","desktopSearchIcon","sortButtons","desktopSortButtons","sortButton","latestSortButton","desktopLatestSortButton","recommendSortButton","desktopRecommendSortButton","postList","map","postItem","hotTag","postInfo","postTitle","postDate","scrapIcon","pagination","pageNumber","pageButton","_c","$RefreshReg$"],"sources":["C:/Users/asx12/OneDrive/바탕 화면/react/front/Front-end/src/pages/FreeboardPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useMediaQuery } from 'react-responsive'; // 반응형 페이지 만들기 위함\r\nimport Header from './_.js';  // 상단바 컴포넌트\r\nimport styles from './FreeboardPage.module.css';  // BoardPage용 CSS 파일\r\nimport CommunicationRoom_goBack from '../images/왼쪽 나가기 버튼.png';\r\nimport DownMenu from '../images/아래방향메뉴선택.png';\r\nimport SearchIcon from '../images/돋보기아이콘.png';  // 돋보기 아이콘\r\nimport IconScrap from '../images/횃불이스크랩.png';\r\nimport IconUnscrap from '../images/횃불이스크랩X.png';\r\n\r\n// 게시물 목록에 대한 초기 데이터 (가상 데이터)\r\nconst initialPosts = [\r\n  { id: 1, title: '게시판 제목 1', date: '2024-01-01', likes: 10, isScraped: true },\r\n  { id: 2, title: '게시판 제목 2', date: '2024-01-02', likes: 20, isScraped: false },\r\n  { id: 3, title: '게시판 제목 3', date: '2024-01-03', likes: 5, isScraped: false },\r\n  { id: 4, title: '게시판 제목 4', date: '2024-01-04', likes: 30, isScraped: true },\r\n  { id: 5, title: '게시판 제목 5', date: '2024-01-05', likes: 15, isScraped: false },\r\n  { id: 6, title: '게시판 제목 6', date: '2024-01-06', likes: 25, isScraped: false },\r\n];\r\n\r\n\r\nconst FreeboardPage = () => {\r\n  const [menuOpen, setMenuOpen] = useState(false);  // 드롭다운 상태 관리\r\n  const [searchTerm, setSearchTerm] = useState(''); // 검색어 상태 관리\r\n  const [scrapStatus, setScrapStatus] = useState({\r\n    1: true,\r\n    2: false,\r\n    3: false,\r\n    4: true,\r\n    5: false,\r\n    6: false,\r\n    7: false,\r\n    8: false\r\n  }); // 각 게시물의 스크랩 상태 관리\r\n  const [posts, setPosts] = useState([]); // 게시물 목록 상태 관리\r\n  const [sortType, setSortType] = useState('latest'); // 초기 정렬 상태는 'latest'\r\n\r\n  // 백엔드 연동용. 코드 수정 필요\r\n  // const [posts, setPosts] = useState(initialPosts); // 게시물 목록 상태 관리\r\n  // const [sortType, setSortType] = useState('latest'); // 정렬 타입 상태 관리 ('latest' 또는 'recommend')\r\n\r\n  const navigate = useNavigate();  // useNavigate 훅을 컴포넌트 내부에서 호출\r\n\r\n  // 반응형 처리를 위한 useMediaQuery 사용\r\n  const isDesktop = useMediaQuery({ query: '(min-width: 769px)' });\r\n\r\n  {/*\r\n  // 백엔드에서 게시물 목록 불러오기\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const response = await fetch('https://your-backend-api.com/api/posts');\r\n        if (!response.ok) {\r\n          throw new Error('게시물 목록을 불러오는데 실패했습니다.');\r\n        }\r\n        const data = await response.json();\r\n        setPosts(data); // 게시물 목록 상태 업데이트\r\n      } catch (error) {\r\n        console.error('게시물 목록 불러오는 중 오류가 발생했습니다:', error);\r\n      }\r\n    };\r\n    fetchPosts();\r\n  }, []);\r\n*/}\r\n\r\n  const toggleMenu = () => {\r\n    setMenuOpen(!menuOpen);  // 드롭다운 토글\r\n  };\r\n\r\n  const handleBoardChange = (boardName) => {\r\n    if (boardName === '질문 게시판') {\r\n      navigate('/QuestionboardPage/'); // 질문 게시판으로 이동\r\n    }\r\n    setMenuOpen(false);  // 메뉴 닫기\r\n  };\r\n\r\n  const toggleScrap = async (id) => {\r\n    // 백엔드에 스크랩 상태를 업데이트하는 요청 보내기\r\n    try {\r\n      const response = await fetch('https://your-backend-api.com/api/scrap', {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          postId: id,\r\n          scrapStatus: !scrapStatus[id], // 새로운 스크랩 상태 전송\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('스크랩 상태 업데이트에 실패했습니다.');\r\n      }\r\n\r\n      // 서버 응답이 성공적일 경우 상태 업데이트\r\n      setScrapStatus((prevState) => ({\r\n        ...prevState,\r\n        [id]: !prevState[id]\r\n      }));\r\n\r\n      // 성공적으로 백엔드와 통신 완료\r\n      console.log('스크랩 상태가 성공적으로 업데이트되었습니다.');\r\n    } catch (error) {\r\n      console.error('스크랩 상태 업데이트 중 오류가 발생했습니다:', error);\r\n      alert('스크랩 상태 업데이트에 실패했습니다. 다시 시도해주세요.');\r\n    }\r\n  };\r\n\r\n\r\n  // 검색 입력값을 변경하는 함수\r\n  const handleSearchInputChange = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  // 검색 버튼을 클릭했을 때 호출되는 함수\r\n  const handleSearch = async () => {\r\n    console.log('검색 버튼 클릭됨');\r\n    if (searchTerm.trim() !== '') {\r\n      try {\r\n        console.log(`검색어: ${searchTerm}`);\r\n        const response = await fetch(`https://your-backend-api.com/api/posts/search?query=${encodeURIComponent(searchTerm)}`);\r\n\r\n        if (!response.ok) {\r\n          throw new Error('검색 결과를 불러오는데 실패했습니다.');\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log('검색 결과:', data);\r\n        setPosts(data); // 검색 결과를 게시물 목록으로 업데이트\r\n        alert('검색이 완료되었습니다. 결과가 화면에 표시됩니다.');\r\n      } catch (error) {\r\n        console.error('검색 결과를 불러오는 중 오류가 발생했습니다:', error);\r\n        alert('검색 결과를 불러오는 중 오류가 발생했습니다.');\r\n      }\r\n    } else {\r\n      alert('검색어를 입력해주세요.');\r\n    }\r\n  };\r\n\r\n  const handlePostClick = (postId) => {\r\n    navigate(`/post/${postId}`);  // 해당 게시물 상세 페이지로 이동\r\n  };\r\n\r\n  \r\n      // 정렬 버튼 클릭 시 정렬 상태 업데이트\r\n  const handleSort = (type) => {\r\n    setSortType(type);\r\n    if (type === 'latest') {\r\n      // 최신순으로 정렬\r\n      setPosts((prevPosts) =>\r\n        [...prevPosts].sort((a, b) => new Date(b.date) - new Date(a.date))\r\n      );\r\n    } else if (type === 'recommend') {\r\n      // 추천순으로 정렬 (좋아요 개수 기준)\r\n      setPosts((prevPosts) =>\r\n        [...prevPosts].sort((a, b) => b.likes - a.likes)\r\n      );\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className={styles.container}>\r\n      <Header />\r\n      <div className={styles.content}>\r\n        <div className={`${styles.titleContainer} ${isDesktop ? styles.desktopTitleContainer : ''}`}>\r\n          {/* 왼쪽 나가기 버튼 */}\r\n          <img\r\n            src={CommunicationRoom_goBack}\r\n            className={`${styles.goBackButton} ${isDesktop ? styles.desktopGoBackButton : ''}`}\r\n            alt=\"뒤로가기\"\r\n            onClick={() => navigate(-1)}  /* 뒤로 가기 동작 추가 */\r\n          />\r\n          {/* 페이지 타이틀 */}\r\n          <h1 className={`${styles.pageTitle} ${isDesktop ? styles.desktopPageTitle : ''}`}>\r\n            자유 게시판\r\n          </h1>\r\n          {/* 드롭다운 버튼 (이미지로 표시) */}\r\n          <img\r\n            src={DownMenu}\r\n            className={`${styles.downMenuButton} ${isDesktop ? styles.desktopDownMenuButton : ''}`}\r\n            alt=\"게시판 선택\"\r\n            onClick={toggleMenu}\r\n          />\r\n        </div>\r\n\r\n        {/* 드롭다운 메뉴 */}\r\n        {menuOpen && (\r\n          <div\r\n            className={`${styles.dropdownMenu} ${isDesktop ? styles.desktopDropdownMenu : ''}`}\r\n          >\r\n            <div\r\n              className={`${styles.menuItem} ${isDesktop ? styles.desktopMenuItem : ''}`}\r\n              onClick={() => handleBoardChange('질문 게시판')}\r\n            >\r\n              질문 게시판\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* 컨트롤 패널 (글쓰기 버튼, 검색창, 정렬 버튼) */}\r\n        <div className={`${styles.controlPanel} ${isDesktop ? styles.desktopControlPanel : ''}`}>\r\n          {/* 글쓰기 버튼 */}\r\n          <button\r\n            className={`${styles.writeButton} ${isDesktop ? styles.desktopWriteButton : ''}`}\r\n            onClick={() => navigate('/FreewritePage')} // 글쓰기 페이지로 이동\r\n          >\r\n            글쓰기\r\n          </button>\r\n\r\n          {/* 검색창 */}\r\n          <div className={`${styles.searchBar} ${isDesktop ? styles.desktopSearchBar : ''}`}>\r\n            <input\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={handleSearchInputChange}\r\n              className={`${styles.searchInput} ${isDesktop ? styles.desktopSearchInput : ''}`}\r\n              placeholder=\"검색어 입력\"\r\n            />\r\n            <img\r\n              src={SearchIcon}\r\n              className={`${styles.searchIcon} ${isDesktop ? styles.desktopSearchIcon : ''}`}\r\n              alt=\"검색\"\r\n              onClick={handleSearch} // 돋보기 아이콘 클릭 시 검색\r\n            />\r\n          </div>\r\n\r\n          {/* 정렬 버튼들 */}\r\n          <div className={`${styles.sortButtons} ${isDesktop ? styles.desktopSortButtons : ''}`}>\r\n            <button\r\n              className={`${styles.sortButton} ${styles.latestSortButton} ${isDesktop ? styles.desktopLatestSortButton : ''}`}\r\n              onClick={() => handleSort('latest')}\r\n            >\r\n              최신순\r\n            </button>\r\n            <button\r\n              className={`${styles.sortButton} ${styles.recommendSortButton} ${isDesktop ? styles.desktopRecommendSortButton : ''}`}\r\n              onClick={() => handleSort('recommend')}\r\n            >\r\n              추천순\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 백엔드 할 때\r\n          <div className={styles.sortButtons}>\r\n            <button\r\n              className={`${styles.sortButton} ${sortType === 'latest' ? styles.activeSortButton : ''\r\n                }`}\r\n              onClick={() => handleSort('latest')}\r\n            >\r\n              최신순\r\n            </button>\r\n            <button\r\n              className={`${styles.sortButton} ${sortType === 'recommend' ? styles.activeSortButton : ''\r\n                }`}\r\n              onClick={() => handleSort('recommend')}\r\n            >\r\n              추천순\r\n            </button>\r\n          </div>\r\n        </div>\r\n        */}\r\n\r\n        {/* 게시물 목록 */}\r\n        <div className={styles.postList}>\r\n          {[1, 2, 3, 4, 5, 6, 7, 8].map((id) => (\r\n            <div key={id} className={styles.postItem}>\r\n              {/* HOT 표시 (상단 3개의 게시물) */}\r\n              {id <= 3 && <span className={styles.hotTag}>HOT</span>}\r\n              {/* 게시물 제목 및 정보 */}\r\n              <div className={styles.postInfo}>\r\n                <span\r\n                  className={styles.postTitle}\r\n                  onClick={() => handlePostClick(id)} // 게시물 제목 클릭 시 상세 페이지로 이동\r\n                >\r\n                  게시판 제목 {id}\r\n                </span>\r\n                <span className={styles.postDate}>2024.01.01</span>\r\n              </div>\r\n              {/* 스크랩 버튼 */}\r\n              <img\r\n                src={scrapStatus[id] ? IconScrap : IconUnscrap}\r\n                alt={scrapStatus[id] ? '스크랩됨' : '스크랩안됨'}\r\n                className={styles.scrapIcon}\r\n                onClick={() => toggleScrap(id)}  // 스크랩 상태 변경 및 백엔드 전송\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* 페이지네이션 */}\r\n        <div className={styles.pagination}>\r\n          {[1, 2, 3, 4, 5].map((pageNumber) => (\r\n            <button\r\n              key={pageNumber}\r\n              className={styles.pageButton}\r\n              onClick={() => navigate(`/board/page/${pageNumber}`)}\r\n            >\r\n              {pageNumber}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default FreeboardPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}